Index.PACKAGES = {"proptics.profunctor" : [{"name" : "proptics.profunctor.Choice", "object" : "proptics\/profunctor\/Choice$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Choice[P]): Choice[P]", "member" : "proptics.profunctor.Choice.apply", "link" : "proptics\/profunctor\/Choice$.html#apply[P[_,_]](implicitev:proptics.profunctor.Choice[P]):proptics.profunctor.Choice[P]", "kind" : "def"}, {"label" : "choiceStar", "tail" : "(ev: Applicative[F]): Choice[[β$4$, γ$5$]Kleisli[F, β$4$, γ$5$]]", "member" : "proptics.profunctor.ChoiceInstances.choiceStar", "link" : "proptics\/profunctor\/Choice$.html#choiceStar[F[_]](implicitev:cats.Applicative[F]):proptics.profunctor.Choice[[β$4$,γ$5$]cats.data.Kleisli[F,β$4$,γ$5$]]", "kind" : "implicit final def"}, {"label" : "choiceFunction", "tail" : ": Choice[[α$0$, β$1$](α$0$) => β$1$]", "member" : "proptics.profunctor.ChoiceInstances.choiceFunction", "link" : "proptics\/profunctor\/Choice$.html#choiceFunction:proptics.profunctor.Choice[[α$0$,β$1$]α$0$=>β$1$]", "kind" : "implicit final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/Choice$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/Choice$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/Choice$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/Choice$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/Choice$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/Choice$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/Choice$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Choice$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Choice$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Choice$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/Choice$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/Choice$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/Choice$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/Choice$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/Choice$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/Choice$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/Choice$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/Choice$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/Choice$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/profunctor\/Choice.html", "kind" : "trait", "members_trait" : [{"label" : "rightWiden", "tail" : "(fab: P[A, B]): P[A, BB]", "member" : "cats.arrow.Profunctor.rightWiden", "link" : "proptics\/profunctor\/Choice.html#rightWiden[A,B,BB>:B](fab:F[A,B]):F[A,BB]", "kind" : "def"}, {"label" : "leftNarrow", "tail" : "(fab: P[A, B]): P[AA, B]", "member" : "cats.arrow.Profunctor.leftNarrow", "link" : "proptics\/profunctor\/Choice.html#leftNarrow[A,B,AA<:A](fab:F[A,B]):F[AA,B]", "kind" : "def"}, {"label" : "rmap", "tail" : "(fab: P[A, B])(f: (B) => C): P[A, C]", "member" : "cats.arrow.Profunctor.rmap", "link" : "proptics\/profunctor\/Choice.html#rmap[A,B,C](fab:F[A,B])(f:B=>C):F[A,C]", "kind" : "def"}, {"label" : "lmap", "tail" : "(fab: P[A, B])(f: (C) => A): P[C, B]", "member" : "cats.arrow.Profunctor.lmap", "link" : "proptics\/profunctor\/Choice.html#lmap[A,B,C](fab:F[A,B])(f:C=>A):F[C,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/Choice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/Choice.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/Choice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/Choice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/Choice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/Choice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/Choice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Choice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Choice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Choice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/Choice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/Choice.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/Choice.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/Choice.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/Choice.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/Choice.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/Choice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/Choice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/Choice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "right", "tail" : "(pab: P[A, B]): P[Either[C, A], Either[C, B]]", "member" : "proptics.profunctor.Choice.right", "link" : "proptics\/profunctor\/Choice.html#right[A,B,C](pab:P[A,B]):P[Either[C,A],Either[C,B]]", "kind" : "abstract def"}, {"label" : "left", "tail" : "(pab: P[A, B]): P[Either[A, C], Either[B, C]]", "member" : "proptics.profunctor.Choice.left", "link" : "proptics\/profunctor\/Choice.html#left[A,B,C](pab:P[A,B]):P[Either[A,C],Either[B,C]]", "kind" : "abstract def"}, {"label" : "dimap", "tail" : "(fab: P[A, B])(f: (C) => A)(g: (B) => D): P[C, D]", "member" : "cats.arrow.Profunctor.dimap", "link" : "proptics\/profunctor\/Choice.html#dimap[A,B,C,D](fab:F[A,B])(f:C=>A)(g:B=>D):F[C,D]", "kind" : "abstract def"}], "shortDescription" : "The Choice type class extends cats.arrow.Profunctor with combinators for working with sum types."}, {"name" : "proptics.profunctor.ChoiceInstances", "shortDescription" : "", "members_class" : [{"label" : "choiceStar", "tail" : "(ev: Applicative[F]): Choice[[β$4$, γ$5$]Kleisli[F, β$4$, γ$5$]]", "member" : "proptics.profunctor.ChoiceInstances.choiceStar", "link" : "proptics\/profunctor\/ChoiceInstances.html#choiceStar[F[_]](implicitev:cats.Applicative[F]):proptics.profunctor.Choice[[β$4$,γ$5$]cats.data.Kleisli[F,β$4$,γ$5$]]", "kind" : "implicit final def"}, {"label" : "choiceFunction", "tail" : ": Choice[[α$0$, β$1$](α$0$) => β$1$]", "member" : "proptics.profunctor.ChoiceInstances.choiceFunction", "link" : "proptics\/profunctor\/ChoiceInstances.html#choiceFunction:proptics.profunctor.Choice[[α$0$,β$1$]α$0$=>β$1$]", "kind" : "implicit final val"}, {"member" : "proptics.profunctor.ChoiceInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/ChoiceInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/ChoiceInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/ChoiceInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/ChoiceInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/ChoiceInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/ChoiceInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/ChoiceInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/ChoiceInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/ChoiceInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/ChoiceInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/ChoiceInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/ChoiceInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/ChoiceInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/ChoiceInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/ChoiceInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/ChoiceInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/ChoiceInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/ChoiceInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/ChoiceInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/profunctor\/ChoiceInstances.html", "kind" : "class"}, {"name" : "proptics.profunctor.Closed", "object" : "proptics\/profunctor\/Closed$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Closed[P]): Closed[P]", "member" : "proptics.profunctor.Closed.apply", "link" : "proptics\/profunctor\/Closed$.html#apply[P[_,_]](implicitev:proptics.profunctor.Closed[P]):proptics.profunctor.Closed[P]", "kind" : "def"}, {"label" : "closedFunction", "tail" : "(): Closed[[α$0$, β$1$](α$0$) => β$1$]", "member" : "proptics.profunctor.ClosedInstances.closedFunction", "link" : "proptics\/profunctor\/Closed$.html#closedFunction:proptics.profunctor.Closed[[α$0$,β$1$]α$0$=>β$1$]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/Closed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/Closed$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/Closed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/Closed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/Closed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/Closed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/Closed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Closed$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Closed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Closed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/Closed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/Closed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/Closed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/Closed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/Closed$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/Closed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/Closed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/Closed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/Closed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/profunctor\/Closed.html", "kind" : "trait", "members_trait" : [{"label" : "rightWiden", "tail" : "(fab: P[A, B]): P[A, BB]", "member" : "cats.arrow.Profunctor.rightWiden", "link" : "proptics\/profunctor\/Closed.html#rightWiden[A,B,BB>:B](fab:F[A,B]):F[A,BB]", "kind" : "def"}, {"label" : "leftNarrow", "tail" : "(fab: P[A, B]): P[AA, B]", "member" : "cats.arrow.Profunctor.leftNarrow", "link" : "proptics\/profunctor\/Closed.html#leftNarrow[A,B,AA<:A](fab:F[A,B]):F[AA,B]", "kind" : "def"}, {"label" : "rmap", "tail" : "(fab: P[A, B])(f: (B) => C): P[A, C]", "member" : "cats.arrow.Profunctor.rmap", "link" : "proptics\/profunctor\/Closed.html#rmap[A,B,C](fab:F[A,B])(f:B=>C):F[A,C]", "kind" : "def"}, {"label" : "lmap", "tail" : "(fab: P[A, B])(f: (C) => A): P[C, B]", "member" : "cats.arrow.Profunctor.lmap", "link" : "proptics\/profunctor\/Closed.html#lmap[A,B,C](fab:F[A,B])(f:C=>A):F[C,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/Closed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/Closed.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/Closed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/Closed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/Closed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/Closed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/Closed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Closed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Closed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Closed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/Closed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/Closed.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/Closed.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/Closed.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/Closed.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/Closed.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/Closed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/Closed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/Closed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "closed", "tail" : "(pab: P[A, B]): P[(C) => A, (C) => B]", "member" : "proptics.profunctor.Closed.closed", "link" : "proptics\/profunctor\/Closed.html#closed[A,B,C](pab:P[A,B]):P[C=>A,C=>B]", "kind" : "abstract def"}, {"label" : "dimap", "tail" : "(fab: P[A, B])(f: (C) => A)(g: (B) => D): P[C, D]", "member" : "cats.arrow.Profunctor.dimap", "link" : "proptics\/profunctor\/Closed.html#dimap[A,B,C,D](fab:F[A,B])(f:C=>A)(g:B=>D):F[C,D]", "kind" : "abstract def"}], "shortDescription" : "The Closed type class extends the Profunctor class to work with functions."}, {"name" : "proptics.profunctor.ClosedInstances", "shortDescription" : "", "members_class" : [{"label" : "closedFunction", "tail" : "(): Closed[[α$0$, β$1$](α$0$) => β$1$]", "member" : "proptics.profunctor.ClosedInstances.closedFunction", "link" : "proptics\/profunctor\/ClosedInstances.html#closedFunction:proptics.profunctor.Closed[[α$0$,β$1$]α$0$=>β$1$]", "kind" : "implicit final def"}, {"member" : "proptics.profunctor.ClosedInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/ClosedInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/ClosedInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/ClosedInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/ClosedInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/ClosedInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/ClosedInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/ClosedInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/ClosedInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/ClosedInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/ClosedInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/ClosedInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/ClosedInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/ClosedInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/ClosedInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/ClosedInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/ClosedInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/ClosedInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/ClosedInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/ClosedInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/profunctor\/ClosedInstances.html", "kind" : "class"}, {"name" : "proptics.profunctor.Cochoice", "object" : "proptics\/profunctor\/Cochoice$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Cochoice[P]): Cochoice[P]", "member" : "proptics.profunctor.Cochoice.apply", "link" : "proptics\/profunctor\/Cochoice$.html#apply[P[_,_]](implicitev:proptics.profunctor.Cochoice[P]):proptics.profunctor.Cochoice[P]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/Cochoice$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/Cochoice$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/Cochoice$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/Cochoice$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/Cochoice$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/Cochoice$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/Cochoice$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Cochoice$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Cochoice$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Cochoice$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/Cochoice$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/Cochoice$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/Cochoice$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/Cochoice$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/Cochoice$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/Cochoice$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/Cochoice$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/Cochoice$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/Cochoice$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/profunctor\/Cochoice.html", "kind" : "trait", "members_trait" : [{"label" : "unright", "tail" : "(p: P[Either[C, A], Either[C, B]]): P[A, B]", "member" : "proptics.profunctor.Cochoice.unright", "link" : "proptics\/profunctor\/Cochoice.html#unright[A,B,C](p:P[Either[C,A],Either[C,B]]):P[A,B]", "kind" : "def"}, {"label" : "unleft", "tail" : "(p: P[Either[A, C], Either[B, C]]): P[A, B]", "member" : "proptics.profunctor.Cochoice.unleft", "link" : "proptics\/profunctor\/Cochoice.html#unleft[A,B,C](p:P[Either[A,C],Either[B,C]]):P[A,B]", "kind" : "def"}, {"label" : "rightWiden", "tail" : "(fab: P[A, B]): P[A, BB]", "member" : "cats.arrow.Profunctor.rightWiden", "link" : "proptics\/profunctor\/Cochoice.html#rightWiden[A,B,BB>:B](fab:F[A,B]):F[A,BB]", "kind" : "def"}, {"label" : "leftNarrow", "tail" : "(fab: P[A, B]): P[AA, B]", "member" : "cats.arrow.Profunctor.leftNarrow", "link" : "proptics\/profunctor\/Cochoice.html#leftNarrow[A,B,AA<:A](fab:F[A,B]):F[AA,B]", "kind" : "def"}, {"label" : "rmap", "tail" : "(fab: P[A, B])(f: (B) => C): P[A, C]", "member" : "cats.arrow.Profunctor.rmap", "link" : "proptics\/profunctor\/Cochoice.html#rmap[A,B,C](fab:F[A,B])(f:B=>C):F[A,C]", "kind" : "def"}, {"label" : "lmap", "tail" : "(fab: P[A, B])(f: (C) => A): P[C, B]", "member" : "cats.arrow.Profunctor.lmap", "link" : "proptics\/profunctor\/Cochoice.html#lmap[A,B,C](fab:F[A,B])(f:C=>A):F[C,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/Cochoice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/Cochoice.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/Cochoice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/Cochoice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/Cochoice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/Cochoice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/Cochoice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Cochoice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Cochoice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Cochoice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/Cochoice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/Cochoice.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/Cochoice.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/Cochoice.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/Cochoice.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/Cochoice.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/Cochoice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/Cochoice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/Cochoice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dimap", "tail" : "(fab: P[A, B])(f: (C) => A)(g: (B) => D): P[C, D]", "member" : "cats.arrow.Profunctor.dimap", "link" : "proptics\/profunctor\/Cochoice.html#dimap[A,B,C,D](fab:F[A,B])(f:C=>A)(g:B=>D):F[C,D]", "kind" : "abstract def"}], "shortDescription" : "The Cochoice type class provides the dual operations of the Choice."}, {"name" : "proptics.profunctor.Corepresentable", "object" : "proptics\/profunctor\/Corepresentable$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Corepresentable[P]): Aux[P, Corepresentation]", "member" : "proptics.profunctor.Corepresentable.apply", "link" : "proptics\/profunctor\/Corepresentable$.html#apply[P[_,_]](implicitev:proptics.profunctor.Corepresentable[P]):proptics.profunctor.Corepresentable.Aux[P,ev.Corepresentation]", "kind" : "def"}, {"label" : "Aux", "tail" : "", "member" : "proptics.profunctor.Corepresentable.Aux", "link" : "proptics\/profunctor\/Corepresentable$.html#Aux[P[_,_],Corepresentation0[_]]=proptics.profunctor.Corepresentable[P]{typeCorepresentation[x]=Corepresentation0[x]}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/Corepresentable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/Corepresentable$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/Corepresentable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/Corepresentable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/Corepresentable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/Corepresentable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/Corepresentable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Corepresentable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Corepresentable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Corepresentable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/Corepresentable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/Corepresentable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/Corepresentable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/Corepresentable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/Corepresentable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/Corepresentable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/Corepresentable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/Corepresentable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/Corepresentable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/profunctor\/Corepresentable.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/Corepresentable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/Corepresentable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/Corepresentable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/Corepresentable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/Corepresentable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/Corepresentable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/Corepresentable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Corepresentable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Corepresentable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Corepresentable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/Corepresentable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/Corepresentable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/Corepresentable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/Corepresentable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/Corepresentable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/Corepresentable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/Corepresentable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/Corepresentable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/Corepresentable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cosieve", "tail" : "(pab: P[A, B])(fa: Corepresentation[A]): B", "member" : "proptics.profunctor.Corepresentable.cosieve", "link" : "proptics\/profunctor\/Corepresentable.html#cosieve[A,B](pab:P[A,B])(fa:Corepresentable.this.Corepresentation[A]):B", "kind" : "abstract def"}, {"label" : "cotabulate", "tail" : "(f: (Corepresentation[A]) => B): P[A, B]", "member" : "proptics.profunctor.Corepresentable.cotabulate", "link" : "proptics\/profunctor\/Corepresentable.html#cotabulate[A,B](f:Corepresentable.this.Corepresentation[A]=>B):P[A,B]", "kind" : "abstract def"}, {"member" : "proptics.profunctor.Corepresentable.Corepresentation", "error" : "unsupported entity"}, {"label" : "P", "tail" : "(): Profunctor[P]", "member" : "proptics.profunctor.Corepresentable.P", "link" : "proptics\/profunctor\/Corepresentable.html#P:cats.arrow.Profunctor[P]", "kind" : "abstract def"}], "shortDescription" : "The Corepresentable is a cats.arrow.Profunctor of P[_, _], if there exists a cats.Functor of F[_] such that P[A, B] c is isomorphic to F[B] => A."}, {"name" : "proptics.profunctor.CorepresentableInstances", "shortDescription" : "", "members_class" : [{"label" : "corepresentableCostar", "tail" : "(arg0: Functor[F], ev: Profunctor[[β$0$, γ$1$]Cokleisli[F, β$0$, γ$1$]]): Aux[[β$2$, γ$3$]Cokleisli[F, β$2$, γ$3$], F]", "member" : "proptics.profunctor.CorepresentableInstances.corepresentableCostar", "link" : "proptics\/profunctor\/CorepresentableInstances.html#corepresentableCostar[F[_]](implicitevidence$1:cats.Functor[F],implicitev:cats.arrow.Profunctor[[β$0$,γ$1$]cats.data.Cokleisli[F,β$0$,γ$1$]]):proptics.profunctor.Corepresentable.Aux[[β$2$,γ$3$]cats.data.Cokleisli[F,β$2$,γ$3$],F]", "kind" : "implicit def"}, {"member" : "proptics.profunctor.CorepresentableInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/CorepresentableInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/CorepresentableInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/CorepresentableInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/CorepresentableInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/CorepresentableInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/CorepresentableInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/CorepresentableInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/CorepresentableInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/CorepresentableInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/CorepresentableInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/CorepresentableInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/CorepresentableInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/CorepresentableInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/CorepresentableInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/CorepresentableInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/CorepresentableInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/CorepresentableInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/CorepresentableInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/CorepresentableInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/profunctor\/CorepresentableInstances.html", "kind" : "class"}, {"name" : "proptics.profunctor.Costar", "shortDescription" : "", "object" : "proptics\/profunctor\/Costar$.html", "members_object" : [{"label" : "hoist", "tail" : "(f: ~>[G, F])(costar: Costar[F, A, B]): Costar[G, A, B]", "member" : "proptics.profunctor.Costar.hoist", "link" : "proptics\/profunctor\/Costar$.html#hoist[F[_],G[_],A,B](f:G~>F)(costar:proptics.profunctor.Costar[F,A,B]):proptics.profunctor.Costar[G,A,B]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (F[A]) => B): Costar[F, A, B]", "member" : "proptics.profunctor.Costar.apply", "link" : "proptics\/profunctor\/Costar$.html#apply[F[_],A,B](f:F[A]=>B):proptics.profunctor.Costar[F,A,B]", "kind" : "def"}, {"label" : "closedCostar", "tail" : "(ev: Functor[F]): Closed[[β$34$, γ$35$]Cokleisli[F, β$34$, γ$35$]]", "member" : "proptics.profunctor.CostarInstances.closedCostar", "link" : "proptics\/profunctor\/Costar$.html#closedCostar[F[_]](implicitev:cats.Functor[F]):proptics.profunctor.Closed[[β$34$,γ$35$]cats.data.Cokleisli[F,β$34$,γ$35$]]", "kind" : "implicit final def"}, {"label" : "cochoiceCostar", "tail" : "(ev: Applicative[F]): Cochoice[[β$30$, γ$31$]Cokleisli[F, β$30$, γ$31$]]", "member" : "proptics.profunctor.CostarInstances.cochoiceCostar", "link" : "proptics\/profunctor\/Costar$.html#cochoiceCostar[F[_]](implicitev:cats.Applicative[F]):proptics.profunctor.Cochoice[[β$30$,γ$31$]cats.data.Cokleisli[F,β$30$,γ$31$]]", "kind" : "implicit final def"}, {"label" : "strongCostar", "tail" : "(ev: Comonad[F]): Strong[[β$26$, γ$27$]Cokleisli[F, β$26$, γ$27$]]", "member" : "proptics.profunctor.CostarInstances.strongCostar", "link" : "proptics\/profunctor\/Costar$.html#strongCostar[F[_]](implicitev:cats.Comonad[F]):cats.arrow.Strong[[β$26$,γ$27$]cats.data.Cokleisli[F,β$26$,γ$27$]]", "kind" : "implicit final def"}, {"label" : "profunctorCostar", "tail" : "(ev: Functor[F]): Profunctor[[β$22$, γ$23$]Cokleisli[F, β$22$, γ$23$]]", "member" : "proptics.profunctor.CostarInstances.profunctorCostar", "link" : "proptics\/profunctor\/Costar$.html#profunctorCostar[F[_]](implicitev:cats.Functor[F]):cats.arrow.Profunctor[[β$22$,γ$23$]cats.data.Cokleisli[F,β$22$,γ$23$]]", "kind" : "implicit final def"}, {"label" : "distributiveCostar", "tail" : "(): Distributive[[γ$20$]Cokleisli[F, C, γ$20$]]", "member" : "proptics.profunctor.CostarInstances.distributiveCostar", "link" : "proptics\/profunctor\/Costar$.html#distributiveCostar[F[A],C]:cats.Distributive[[γ$20$]cats.data.Cokleisli[F,C,γ$20$]]", "kind" : "implicit final def"}, {"label" : "monadCostar", "tail" : "(): Monad[[γ$18$]Cokleisli[F, C, γ$18$]]", "member" : "proptics.profunctor.CostarInstances.monadCostar", "link" : "proptics\/profunctor\/Costar$.html#monadCostar[F[_],C]:cats.Monad[[γ$18$]cats.data.Cokleisli[F,C,γ$18$]]", "kind" : "implicit final def"}, {"label" : "bindCostar", "tail" : "(): FlatMap[[γ$16$]Cokleisli[F, C, γ$16$]]", "member" : "proptics.profunctor.CostarInstances.bindCostar", "link" : "proptics\/profunctor\/Costar$.html#bindCostar[F[_],C]:cats.FlatMap[[γ$16$]cats.data.Cokleisli[F,C,γ$16$]]", "kind" : "implicit final def"}, {"label" : "applicativeCostar", "tail" : "(): Applicative[[γ$14$]Cokleisli[F, C, γ$14$]]", "member" : "proptics.profunctor.CostarInstances.applicativeCostar", "link" : "proptics\/profunctor\/Costar$.html#applicativeCostar[F[_],C]:cats.Applicative[[γ$14$]cats.data.Cokleisli[F,C,γ$14$]]", "kind" : "implicit final def"}, {"label" : "applyCostar", "tail" : "(): Apply[[γ$12$]Cokleisli[F, C, γ$12$]]", "member" : "proptics.profunctor.CostarInstances.applyCostar", "link" : "proptics\/profunctor\/Costar$.html#applyCostar[F[_],C]:cats.Apply[[γ$12$]cats.data.Cokleisli[F,C,γ$12$]]", "kind" : "implicit final def"}, {"label" : "invariantCostar", "tail" : "(): Invariant[[γ$10$]Cokleisli[F, C, γ$10$]]", "member" : "proptics.profunctor.CostarInstances.invariantCostar", "link" : "proptics\/profunctor\/Costar$.html#invariantCostar[F[_],C]:cats.Invariant[[γ$10$]cats.data.Cokleisli[F,C,γ$10$]]", "kind" : "implicit final def"}, {"label" : "functorCostar", "tail" : "(): Functor[[γ$8$]Cokleisli[F, C, γ$8$]]", "member" : "proptics.profunctor.CostarInstances.functorCostar", "link" : "proptics\/profunctor\/Costar$.html#functorCostar[F[_],C]:cats.Functor[[γ$8$]cats.data.Cokleisli[F,C,γ$8$]]", "kind" : "implicit final def"}, {"label" : "categoryCostar", "tail" : "(ev: Comonad[F]): Category[[β$4$, γ$5$]Cokleisli[F, β$4$, γ$5$]]", "member" : "proptics.profunctor.CostarInstances.categoryCostar", "link" : "proptics\/profunctor\/Costar$.html#categoryCostar[F[_]](implicitev:cats.Comonad[F]):cats.arrow.Category[[β$4$,γ$5$]cats.data.Cokleisli[F,β$4$,γ$5$]]", "kind" : "implicit final def"}, {"label" : "composeCostar", "tail" : "(arg0: CoflatMap[F]): Compose[[β$0$, γ$1$]Cokleisli[F, β$0$, γ$1$]]", "member" : "proptics.profunctor.CostarInstances.composeCostar", "link" : "proptics\/profunctor\/Costar$.html#composeCostar[F[_]](implicitevidence$1:cats.CoflatMap[F]):cats.arrow.Compose[[β$0$,γ$1$]cats.data.Cokleisli[F,β$0$,γ$1$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/Costar$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/Costar$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/Costar$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/Costar$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/Costar$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/Costar$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/Costar$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Costar$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Costar$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Costar$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/Costar$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/Costar$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/Costar$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/Costar$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/Costar$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/Costar$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/Costar$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/Costar$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/Costar$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.profunctor.CostarInstances", "shortDescription" : "", "members_class" : [{"label" : "closedCostar", "tail" : "(ev: Functor[F]): Closed[[β$34$, γ$35$]Cokleisli[F, β$34$, γ$35$]]", "member" : "proptics.profunctor.CostarInstances.closedCostar", "link" : "proptics\/profunctor\/CostarInstances.html#closedCostar[F[_]](implicitev:cats.Functor[F]):proptics.profunctor.Closed[[β$34$,γ$35$]cats.data.Cokleisli[F,β$34$,γ$35$]]", "kind" : "implicit final def"}, {"label" : "cochoiceCostar", "tail" : "(ev: Applicative[F]): Cochoice[[β$30$, γ$31$]Cokleisli[F, β$30$, γ$31$]]", "member" : "proptics.profunctor.CostarInstances.cochoiceCostar", "link" : "proptics\/profunctor\/CostarInstances.html#cochoiceCostar[F[_]](implicitev:cats.Applicative[F]):proptics.profunctor.Cochoice[[β$30$,γ$31$]cats.data.Cokleisli[F,β$30$,γ$31$]]", "kind" : "implicit final def"}, {"label" : "strongCostar", "tail" : "(ev: Comonad[F]): Strong[[β$26$, γ$27$]Cokleisli[F, β$26$, γ$27$]]", "member" : "proptics.profunctor.CostarInstances.strongCostar", "link" : "proptics\/profunctor\/CostarInstances.html#strongCostar[F[_]](implicitev:cats.Comonad[F]):cats.arrow.Strong[[β$26$,γ$27$]cats.data.Cokleisli[F,β$26$,γ$27$]]", "kind" : "implicit final def"}, {"label" : "profunctorCostar", "tail" : "(ev: Functor[F]): Profunctor[[β$22$, γ$23$]Cokleisli[F, β$22$, γ$23$]]", "member" : "proptics.profunctor.CostarInstances.profunctorCostar", "link" : "proptics\/profunctor\/CostarInstances.html#profunctorCostar[F[_]](implicitev:cats.Functor[F]):cats.arrow.Profunctor[[β$22$,γ$23$]cats.data.Cokleisli[F,β$22$,γ$23$]]", "kind" : "implicit final def"}, {"label" : "distributiveCostar", "tail" : "(): Distributive[[γ$20$]Cokleisli[F, C, γ$20$]]", "member" : "proptics.profunctor.CostarInstances.distributiveCostar", "link" : "proptics\/profunctor\/CostarInstances.html#distributiveCostar[F[A],C]:cats.Distributive[[γ$20$]cats.data.Cokleisli[F,C,γ$20$]]", "kind" : "implicit final def"}, {"label" : "monadCostar", "tail" : "(): Monad[[γ$18$]Cokleisli[F, C, γ$18$]]", "member" : "proptics.profunctor.CostarInstances.monadCostar", "link" : "proptics\/profunctor\/CostarInstances.html#monadCostar[F[_],C]:cats.Monad[[γ$18$]cats.data.Cokleisli[F,C,γ$18$]]", "kind" : "implicit final def"}, {"label" : "bindCostar", "tail" : "(): FlatMap[[γ$16$]Cokleisli[F, C, γ$16$]]", "member" : "proptics.profunctor.CostarInstances.bindCostar", "link" : "proptics\/profunctor\/CostarInstances.html#bindCostar[F[_],C]:cats.FlatMap[[γ$16$]cats.data.Cokleisli[F,C,γ$16$]]", "kind" : "implicit final def"}, {"label" : "applicativeCostar", "tail" : "(): Applicative[[γ$14$]Cokleisli[F, C, γ$14$]]", "member" : "proptics.profunctor.CostarInstances.applicativeCostar", "link" : "proptics\/profunctor\/CostarInstances.html#applicativeCostar[F[_],C]:cats.Applicative[[γ$14$]cats.data.Cokleisli[F,C,γ$14$]]", "kind" : "implicit final def"}, {"label" : "applyCostar", "tail" : "(): Apply[[γ$12$]Cokleisli[F, C, γ$12$]]", "member" : "proptics.profunctor.CostarInstances.applyCostar", "link" : "proptics\/profunctor\/CostarInstances.html#applyCostar[F[_],C]:cats.Apply[[γ$12$]cats.data.Cokleisli[F,C,γ$12$]]", "kind" : "implicit final def"}, {"label" : "invariantCostar", "tail" : "(): Invariant[[γ$10$]Cokleisli[F, C, γ$10$]]", "member" : "proptics.profunctor.CostarInstances.invariantCostar", "link" : "proptics\/profunctor\/CostarInstances.html#invariantCostar[F[_],C]:cats.Invariant[[γ$10$]cats.data.Cokleisli[F,C,γ$10$]]", "kind" : "implicit final def"}, {"label" : "functorCostar", "tail" : "(): Functor[[γ$8$]Cokleisli[F, C, γ$8$]]", "member" : "proptics.profunctor.CostarInstances.functorCostar", "link" : "proptics\/profunctor\/CostarInstances.html#functorCostar[F[_],C]:cats.Functor[[γ$8$]cats.data.Cokleisli[F,C,γ$8$]]", "kind" : "implicit final def"}, {"label" : "categoryCostar", "tail" : "(ev: Comonad[F]): Category[[β$4$, γ$5$]Cokleisli[F, β$4$, γ$5$]]", "member" : "proptics.profunctor.CostarInstances.categoryCostar", "link" : "proptics\/profunctor\/CostarInstances.html#categoryCostar[F[_]](implicitev:cats.Comonad[F]):cats.arrow.Category[[β$4$,γ$5$]cats.data.Cokleisli[F,β$4$,γ$5$]]", "kind" : "implicit final def"}, {"label" : "composeCostar", "tail" : "(arg0: CoflatMap[F]): Compose[[β$0$, γ$1$]Cokleisli[F, β$0$, γ$1$]]", "member" : "proptics.profunctor.CostarInstances.composeCostar", "link" : "proptics\/profunctor\/CostarInstances.html#composeCostar[F[_]](implicitevidence$1:cats.CoflatMap[F]):cats.arrow.Compose[[β$0$,γ$1$]cats.data.Cokleisli[F,β$0$,γ$1$]]", "kind" : "implicit final def"}, {"member" : "proptics.profunctor.CostarInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/CostarInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/CostarInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/CostarInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/CostarInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/CostarInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/CostarInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/CostarInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/CostarInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/CostarInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/CostarInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/CostarInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/CostarInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/CostarInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/CostarInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/CostarInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/CostarInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/CostarInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/CostarInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/CostarInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/profunctor\/CostarInstances.html", "kind" : "class"}, {"name" : "proptics.profunctor.Star", "shortDescription" : "", "object" : "proptics\/profunctor\/Star$.html", "members_object" : [{"label" : "hoist", "tail" : "(f: ~>[F, G])(star: Star[F, A, B]): Star[G, A, B]", "member" : "proptics.profunctor.Star.hoist", "link" : "proptics\/profunctor\/Star$.html#hoist[F[_],G[_],A,B](f:F~>G)(star:proptics.profunctor.Star[F,A,B]):proptics.profunctor.Star[G,A,B]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (A) => F[B]): Star[F, A, B]", "member" : "proptics.profunctor.Star.apply", "link" : "proptics\/profunctor\/Star$.html#apply[F[_],A,B](f:A=>F[B]):proptics.profunctor.Star[F,A,B]", "kind" : "def"}, {"label" : "strongStar", "tail" : "(ev: Functor[F]): Strong[[β$28$, γ$29$]Kleisli[F, β$28$, γ$29$]]", "member" : "proptics.profunctor.StarInstances.strongStar", "link" : "proptics\/profunctor\/Star$.html#strongStar[F[_]](implicitev:cats.Functor[F]):cats.arrow.Strong[[β$28$,γ$29$]cats.data.Kleisli[F,β$28$,γ$29$]]", "kind" : "implicit final def"}, {"label" : "profunctorStar", "tail" : "(ev: Functor[F]): Profunctor[[β$24$, γ$25$]Kleisli[F, β$24$, γ$25$]]", "member" : "proptics.profunctor.StarInstances.profunctorStar", "link" : "proptics\/profunctor\/Star$.html#profunctorStar[F[_]](implicitev:cats.Functor[F]):cats.arrow.Profunctor[[β$24$,γ$25$]cats.data.Kleisli[F,β$24$,γ$25$]]", "kind" : "implicit final def"}, {"label" : "distributiveStar", "tail" : "(ev0: Distributive[F]): Distributive[[γ$22$]Kleisli[F, E, γ$22$]]", "member" : "proptics.profunctor.StarInstances.distributiveStar", "link" : "proptics\/profunctor\/Star$.html#distributiveStar[F[_],E](implicitev0:cats.Distributive[F]):cats.Distributive[[γ$22$]cats.data.Kleisli[F,E,γ$22$]]", "kind" : "implicit final def"}, {"label" : "monadZeroStar", "tail" : "(ev: CommutativeMonad[F]): CommutativeMonad[[γ$20$]Kleisli[F, E, γ$20$]]", "member" : "proptics.profunctor.StarInstances.monadZeroStar", "link" : "proptics\/profunctor\/Star$.html#monadZeroStar[F[_],E](implicitev:cats.CommutativeMonad[F]):cats.CommutativeMonad[[γ$20$]cats.data.Kleisli[F,E,γ$20$]]", "kind" : "implicit final def"}, {"label" : "plusStar", "tail" : "(ev: MonoidK[F]): MonoidK[[γ$18$]Kleisli[F, E, γ$18$]]", "member" : "proptics.profunctor.StarInstances.plusStar", "link" : "proptics\/profunctor\/Star$.html#plusStar[F[_],E](implicitev:cats.MonoidK[F]):cats.MonoidK[[γ$18$]cats.data.Kleisli[F,E,γ$18$]]", "kind" : "implicit final def"}, {"label" : "alternativeStar", "tail" : "(ev: Alternative[F]): Alternative[[γ$16$]Kleisli[F, E, γ$16$]]", "member" : "proptics.profunctor.StarInstances.alternativeStar", "link" : "proptics\/profunctor\/Star$.html#alternativeStar[F[_],E](implicitev:cats.Alternative[F]):cats.Alternative[[γ$16$]cats.data.Kleisli[F,E,γ$16$]]", "kind" : "implicit final def"}, {"label" : "monadStar", "tail" : "(ev: Monad[F]): Monad[[γ$14$]Kleisli[F, E, γ$14$]]", "member" : "proptics.profunctor.StarInstances.monadStar", "link" : "proptics\/profunctor\/Star$.html#monadStar[F[_],E](implicitev:cats.Monad[F]):cats.Monad[[γ$14$]cats.data.Kleisli[F,E,γ$14$]]", "kind" : "implicit final def"}, {"label" : "bindStar", "tail" : "(ev0: FlatMap[F], ev1: Applicative[F]): FlatMap[[γ$12$]Kleisli[F, E, γ$12$]]", "member" : "proptics.profunctor.StarInstances.bindStar", "link" : "proptics\/profunctor\/Star$.html#bindStar[F[_],E](implicitev0:cats.FlatMap[F],implicitev1:cats.Applicative[F]):cats.FlatMap[[γ$12$]cats.data.Kleisli[F,E,γ$12$]]", "kind" : "implicit final def"}, {"label" : "applicativeStar", "tail" : "(ev: Applicative[F]): Applicative[[γ$10$]Kleisli[F, E, γ$10$]]", "member" : "proptics.profunctor.StarInstances.applicativeStar", "link" : "proptics\/profunctor\/Star$.html#applicativeStar[F[_],E](implicitev:cats.Applicative[F]):cats.Applicative[[γ$10$]cats.data.Kleisli[F,E,γ$10$]]", "kind" : "implicit final def"}, {"label" : "applyStar", "tail" : "(arg0: Apply[F]): Apply[[γ$8$]Kleisli[F, E, γ$8$]]", "member" : "proptics.profunctor.StarInstances.applyStar", "link" : "proptics\/profunctor\/Star$.html#applyStar[F[_],E](implicitevidence$1:cats.Apply[F]):cats.Apply[[γ$8$]cats.data.Kleisli[F,E,γ$8$]]", "kind" : "implicit final def"}, {"label" : "invariantStar", "tail" : "(ev: Invariant[F]): Invariant[[γ$6$]Kleisli[F, E, γ$6$]]", "member" : "proptics.profunctor.StarInstances.invariantStar", "link" : "proptics\/profunctor\/Star$.html#invariantStar[F[_],E](implicitev:cats.Invariant[F]):cats.Invariant[[γ$6$]cats.data.Kleisli[F,E,γ$6$]]", "kind" : "implicit final def"}, {"label" : "functorStar", "tail" : "(ev: Functor[F]): Functor[[γ$4$]Kleisli[F, C, γ$4$]]", "member" : "proptics.profunctor.StarInstances.functorStar", "link" : "proptics\/profunctor\/Star$.html#functorStar[F[_],C](implicitev:cats.Functor[F]):cats.Functor[[γ$4$]cats.data.Kleisli[F,C,γ$4$]]", "kind" : "implicit final def"}, {"label" : "categoryStar", "tail" : "(ev: Monad[F]): Category[[β$0$, γ$1$]Kleisli[F, β$0$, γ$1$]]", "member" : "proptics.profunctor.StarInstances.categoryStar", "link" : "proptics\/profunctor\/Star$.html#categoryStar[F[_]](implicitev:cats.Monad[F]):cats.arrow.Category[[β$0$,γ$1$]cats.data.Kleisli[F,β$0$,γ$1$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/Star$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/Star$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/Star$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/Star$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/Star$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/Star$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/Star$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Star$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Star$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Star$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/Star$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/Star$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/Star$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/Star$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/Star$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/Star$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/Star$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/Star$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/Star$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.profunctor.StarInstances", "shortDescription" : "", "members_class" : [{"label" : "strongStar", "tail" : "(ev: Functor[F]): Strong[[β$28$, γ$29$]Kleisli[F, β$28$, γ$29$]]", "member" : "proptics.profunctor.StarInstances.strongStar", "link" : "proptics\/profunctor\/StarInstances.html#strongStar[F[_]](implicitev:cats.Functor[F]):cats.arrow.Strong[[β$28$,γ$29$]cats.data.Kleisli[F,β$28$,γ$29$]]", "kind" : "implicit final def"}, {"label" : "profunctorStar", "tail" : "(ev: Functor[F]): Profunctor[[β$24$, γ$25$]Kleisli[F, β$24$, γ$25$]]", "member" : "proptics.profunctor.StarInstances.profunctorStar", "link" : "proptics\/profunctor\/StarInstances.html#profunctorStar[F[_]](implicitev:cats.Functor[F]):cats.arrow.Profunctor[[β$24$,γ$25$]cats.data.Kleisli[F,β$24$,γ$25$]]", "kind" : "implicit final def"}, {"label" : "distributiveStar", "tail" : "(ev0: Distributive[F]): Distributive[[γ$22$]Kleisli[F, E, γ$22$]]", "member" : "proptics.profunctor.StarInstances.distributiveStar", "link" : "proptics\/profunctor\/StarInstances.html#distributiveStar[F[_],E](implicitev0:cats.Distributive[F]):cats.Distributive[[γ$22$]cats.data.Kleisli[F,E,γ$22$]]", "kind" : "implicit final def"}, {"label" : "monadZeroStar", "tail" : "(ev: CommutativeMonad[F]): CommutativeMonad[[γ$20$]Kleisli[F, E, γ$20$]]", "member" : "proptics.profunctor.StarInstances.monadZeroStar", "link" : "proptics\/profunctor\/StarInstances.html#monadZeroStar[F[_],E](implicitev:cats.CommutativeMonad[F]):cats.CommutativeMonad[[γ$20$]cats.data.Kleisli[F,E,γ$20$]]", "kind" : "implicit final def"}, {"label" : "plusStar", "tail" : "(ev: MonoidK[F]): MonoidK[[γ$18$]Kleisli[F, E, γ$18$]]", "member" : "proptics.profunctor.StarInstances.plusStar", "link" : "proptics\/profunctor\/StarInstances.html#plusStar[F[_],E](implicitev:cats.MonoidK[F]):cats.MonoidK[[γ$18$]cats.data.Kleisli[F,E,γ$18$]]", "kind" : "implicit final def"}, {"label" : "alternativeStar", "tail" : "(ev: Alternative[F]): Alternative[[γ$16$]Kleisli[F, E, γ$16$]]", "member" : "proptics.profunctor.StarInstances.alternativeStar", "link" : "proptics\/profunctor\/StarInstances.html#alternativeStar[F[_],E](implicitev:cats.Alternative[F]):cats.Alternative[[γ$16$]cats.data.Kleisli[F,E,γ$16$]]", "kind" : "implicit final def"}, {"label" : "monadStar", "tail" : "(ev: Monad[F]): Monad[[γ$14$]Kleisli[F, E, γ$14$]]", "member" : "proptics.profunctor.StarInstances.monadStar", "link" : "proptics\/profunctor\/StarInstances.html#monadStar[F[_],E](implicitev:cats.Monad[F]):cats.Monad[[γ$14$]cats.data.Kleisli[F,E,γ$14$]]", "kind" : "implicit final def"}, {"label" : "bindStar", "tail" : "(ev0: FlatMap[F], ev1: Applicative[F]): FlatMap[[γ$12$]Kleisli[F, E, γ$12$]]", "member" : "proptics.profunctor.StarInstances.bindStar", "link" : "proptics\/profunctor\/StarInstances.html#bindStar[F[_],E](implicitev0:cats.FlatMap[F],implicitev1:cats.Applicative[F]):cats.FlatMap[[γ$12$]cats.data.Kleisli[F,E,γ$12$]]", "kind" : "implicit final def"}, {"label" : "applicativeStar", "tail" : "(ev: Applicative[F]): Applicative[[γ$10$]Kleisli[F, E, γ$10$]]", "member" : "proptics.profunctor.StarInstances.applicativeStar", "link" : "proptics\/profunctor\/StarInstances.html#applicativeStar[F[_],E](implicitev:cats.Applicative[F]):cats.Applicative[[γ$10$]cats.data.Kleisli[F,E,γ$10$]]", "kind" : "implicit final def"}, {"label" : "applyStar", "tail" : "(arg0: Apply[F]): Apply[[γ$8$]Kleisli[F, E, γ$8$]]", "member" : "proptics.profunctor.StarInstances.applyStar", "link" : "proptics\/profunctor\/StarInstances.html#applyStar[F[_],E](implicitevidence$1:cats.Apply[F]):cats.Apply[[γ$8$]cats.data.Kleisli[F,E,γ$8$]]", "kind" : "implicit final def"}, {"label" : "invariantStar", "tail" : "(ev: Invariant[F]): Invariant[[γ$6$]Kleisli[F, E, γ$6$]]", "member" : "proptics.profunctor.StarInstances.invariantStar", "link" : "proptics\/profunctor\/StarInstances.html#invariantStar[F[_],E](implicitev:cats.Invariant[F]):cats.Invariant[[γ$6$]cats.data.Kleisli[F,E,γ$6$]]", "kind" : "implicit final def"}, {"label" : "functorStar", "tail" : "(ev: Functor[F]): Functor[[γ$4$]Kleisli[F, C, γ$4$]]", "member" : "proptics.profunctor.StarInstances.functorStar", "link" : "proptics\/profunctor\/StarInstances.html#functorStar[F[_],C](implicitev:cats.Functor[F]):cats.Functor[[γ$4$]cats.data.Kleisli[F,C,γ$4$]]", "kind" : "implicit final def"}, {"label" : "categoryStar", "tail" : "(ev: Monad[F]): Category[[β$0$, γ$1$]Kleisli[F, β$0$, γ$1$]]", "member" : "proptics.profunctor.StarInstances.categoryStar", "link" : "proptics\/profunctor\/StarInstances.html#categoryStar[F[_]](implicitev:cats.Monad[F]):cats.arrow.Category[[β$0$,γ$1$]cats.data.Kleisli[F,β$0$,γ$1$]]", "kind" : "implicit final def"}, {"member" : "proptics.profunctor.StarInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/StarInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/StarInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/StarInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/StarInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/StarInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/StarInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/StarInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/StarInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/StarInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/StarInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/StarInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/StarInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/StarInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/StarInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/StarInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/StarInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/StarInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/StarInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/StarInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/profunctor\/StarInstances.html", "kind" : "class"}, {"name" : "proptics.profunctor.Traversing", "trait" : "proptics\/profunctor\/Traversing.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/Traversing.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/Traversing.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/Traversing.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/Traversing.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/Traversing.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/Traversing.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/Traversing.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Traversing.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Traversing.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Traversing.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/Traversing.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/Traversing.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/Traversing.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/Traversing.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/Traversing.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/Traversing.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/Traversing.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/Traversing.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/Traversing.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(f: (A) => F[B])(s: S)(ev: Applicative[F]): F[T]", "member" : "proptics.profunctor.Traversing.apply", "link" : "proptics\/profunctor\/Traversing.html#apply[F[_]](f:A=>F[B])(s:S)(implicitev:cats.Applicative[F]):F[T]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.profunctor.Wander", "object" : "proptics\/profunctor\/Wander$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Wander[P]): Wander[P]", "member" : "proptics.profunctor.Wander.apply", "link" : "proptics\/profunctor\/Wander$.html#apply[P[_,_]](implicitev:proptics.profunctor.Wander[P]):proptics.profunctor.Wander[P]", "kind" : "def"}, {"label" : "wanderStar", "tail" : "(ev: Applicative[F]): Wander[[β$4$, γ$5$]Kleisli[F, β$4$, γ$5$]]", "member" : "proptics.profunctor.WanderInstances.wanderStar", "link" : "proptics\/profunctor\/Wander$.html#wanderStar[F[_]](implicitev:cats.Applicative[F]):proptics.profunctor.Wander[[β$4$,γ$5$]cats.data.Kleisli[F,β$4$,γ$5$]]", "kind" : "implicit final def"}, {"label" : "wanderFunction", "tail" : "(): Wander[[α$0$, β$1$](α$0$) => β$1$]", "member" : "proptics.profunctor.WanderInstances.wanderFunction", "link" : "proptics\/profunctor\/Wander$.html#wanderFunction:proptics.profunctor.Wander[[α$0$,β$1$]α$0$=>β$1$]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/Wander$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/Wander$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/Wander$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/Wander$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/Wander$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/Wander$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/Wander$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Wander$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Wander$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Wander$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/Wander$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/Wander$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/Wander$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/Wander$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/Wander$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/Wander$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/Wander$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/Wander$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/Wander$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/profunctor\/Wander.html", "kind" : "trait", "members_trait" : [{"label" : "rightWiden", "tail" : "(fab: P[A, B]): P[A, BB]", "member" : "cats.arrow.Profunctor.rightWiden", "link" : "proptics\/profunctor\/Wander.html#rightWiden[A,B,BB>:B](fab:F[A,B]):F[A,BB]", "kind" : "def"}, {"label" : "leftNarrow", "tail" : "(fab: P[A, B]): P[AA, B]", "member" : "cats.arrow.Profunctor.leftNarrow", "link" : "proptics\/profunctor\/Wander.html#leftNarrow[A,B,AA<:A](fab:F[A,B]):F[AA,B]", "kind" : "def"}, {"label" : "rmap", "tail" : "(fab: P[A, B])(f: (B) => C): P[A, C]", "member" : "cats.arrow.Profunctor.rmap", "link" : "proptics\/profunctor\/Wander.html#rmap[A,B,C](fab:F[A,B])(f:B=>C):F[A,C]", "kind" : "def"}, {"label" : "lmap", "tail" : "(fab: P[A, B])(f: (C) => A): P[C, B]", "member" : "cats.arrow.Profunctor.lmap", "link" : "proptics\/profunctor\/Wander.html#lmap[A,B,C](fab:F[A,B])(f:C=>A):F[C,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/Wander.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/Wander.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/Wander.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/Wander.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/Wander.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/Wander.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/Wander.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Wander.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Wander.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/Wander.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/Wander.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/Wander.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/Wander.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/Wander.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/Wander.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/Wander.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/Wander.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/Wander.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/Wander.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "wander", "tail" : "(traversing: Traversing[S, T, A, B])(pab: P[A, B]): P[S, T]", "member" : "proptics.profunctor.Wander.wander", "link" : "proptics\/profunctor\/Wander.html#wander[S,T,A,B](traversing:proptics.profunctor.Traversing[S,T,A,B])(pab:P[A,B]):P[S,T]", "kind" : "abstract def"}, {"label" : "right", "tail" : "(pab: P[A, B]): P[Either[C, A], Either[C, B]]", "member" : "proptics.profunctor.Choice.right", "link" : "proptics\/profunctor\/Wander.html#right[A,B,C](pab:P[A,B]):P[Either[C,A],Either[C,B]]", "kind" : "abstract def"}, {"label" : "left", "tail" : "(pab: P[A, B]): P[Either[A, C], Either[B, C]]", "member" : "proptics.profunctor.Choice.left", "link" : "proptics\/profunctor\/Wander.html#left[A,B,C](pab:P[A,B]):P[Either[A,C],Either[B,C]]", "kind" : "abstract def"}, {"label" : "second", "tail" : "(fa: P[A, B]): P[(C, A), (C, B)]", "member" : "cats.arrow.Strong.second", "link" : "proptics\/profunctor\/Wander.html#second[A,B,C](fa:F[A,B]):F[(C,A),(C,B)]", "kind" : "abstract def"}, {"label" : "first", "tail" : "(fa: P[A, B]): P[(A, C), (B, C)]", "member" : "cats.arrow.Strong.first", "link" : "proptics\/profunctor\/Wander.html#first[A,B,C](fa:F[A,B]):F[(A,C),(B,C)]", "kind" : "abstract def"}, {"label" : "dimap", "tail" : "(fab: P[A, B])(f: (C) => A)(g: (B) => D): P[C, D]", "member" : "cats.arrow.Profunctor.dimap", "link" : "proptics\/profunctor\/Wander.html#dimap[A,B,C,D](fab:F[A,B])(f:C=>A)(g:B=>D):F[C,D]", "kind" : "abstract def"}], "shortDescription" : "Class for profunctors that support polymorphic traversals"}, {"name" : "proptics.profunctor.WanderInstances", "shortDescription" : "", "members_class" : [{"label" : "wanderStar", "tail" : "(ev: Applicative[F]): Wander[[β$4$, γ$5$]Kleisli[F, β$4$, γ$5$]]", "member" : "proptics.profunctor.WanderInstances.wanderStar", "link" : "proptics\/profunctor\/WanderInstances.html#wanderStar[F[_]](implicitev:cats.Applicative[F]):proptics.profunctor.Wander[[β$4$,γ$5$]cats.data.Kleisli[F,β$4$,γ$5$]]", "kind" : "implicit final def"}, {"label" : "wanderFunction", "tail" : "(): Wander[[α$0$, β$1$](α$0$) => β$1$]", "member" : "proptics.profunctor.WanderInstances.wanderFunction", "link" : "proptics\/profunctor\/WanderInstances.html#wanderFunction:proptics.profunctor.Wander[[α$0$,β$1$]α$0$=>β$1$]", "kind" : "implicit final def"}, {"member" : "proptics.profunctor.WanderInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/profunctor\/WanderInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/profunctor\/WanderInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/profunctor\/WanderInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/profunctor\/WanderInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/profunctor\/WanderInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/profunctor\/WanderInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/profunctor\/WanderInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/WanderInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/WanderInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/profunctor\/WanderInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/profunctor\/WanderInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/profunctor\/WanderInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/profunctor\/WanderInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/profunctor\/WanderInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/profunctor\/WanderInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/profunctor\/WanderInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/profunctor\/WanderInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/profunctor\/WanderInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/profunctor\/WanderInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/profunctor\/WanderInstances.html", "kind" : "class"}], "proptics.instances" : [{"name" : "proptics.instances.all", "shortDescription" : "", "object" : "proptics\/instances\/package$$all$.html", "members_object" : [{"label" : "traverseWithIndexNonEmptyMap", "tail" : "(arg0: Order[K]): TraverseWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K, β$6$], K]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyMap", "link" : "proptics\/instances\/package$$all$.html#traverseWithIndexNonEmptyMap[K](implicitevidence$2:cats.Order[K]):proptics.indices.TraverseWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K,β$6$],K]", "kind" : "implicit def"}, {"label" : "traverseWithIndexOneAnd", "tail" : "(arg0: Traverse[F]): TraverseWithIndex[[β$4$]OneAnd[F, β$4$], Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexOneAnd", "link" : "proptics\/instances\/package$$all$.html#traverseWithIndexOneAnd[F[_]](implicitevidence$1:cats.Traverse[F]):proptics.indices.TraverseWithIndex[[β$4$]cats.data.OneAnd[F,β$4$],Int]", "kind" : "implicit def"}, {"label" : "traverseWithIndexNonEmptyChain", "tail" : "(): TraverseWithIndex[NonEmptyChain, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyChain", "link" : "proptics\/instances\/package$$all$.html#traverseWithIndexNonEmptyChain:proptics.indices.TraverseWithIndex[cats.data.NonEmptyChain,Int]", "kind" : "implicit final def"}, {"label" : "traverseWithIndexNonEmptyList", "tail" : ": TraverseWithIndex[NonEmptyList, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyList", "link" : "proptics\/instances\/package$$all$.html#traverseWithIndexNonEmptyList:proptics.indices.TraverseWithIndex[cats.data.NonEmptyList,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexNonEmptyVector", "tail" : ": TraverseWithIndex[NonEmptyVector, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyVector", "link" : "proptics\/instances\/package$$all$.html#traverseWithIndexNonEmptyVector:proptics.indices.TraverseWithIndex[cats.data.NonEmptyVector,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexChain", "tail" : ": TraverseWithIndex[Chain, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexChain", "link" : "proptics\/instances\/package$$all$.html#traverseWithIndexChain:proptics.indices.TraverseWithIndex[cats.data.Chain,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexMap", "tail" : "(): TraverseWithIndex[[β$2$]Map[K, β$2$], K]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexMap", "link" : "proptics\/instances\/package$$all$.html#traverseWithIndexMap[K]:proptics.indices.TraverseWithIndex[[β$2$]scala.collection.immutable.Map[K,β$2$],K]", "kind" : "implicit final def"}, {"label" : "traverseWithIndexListMap", "tail" : "(): TraverseWithIndex[[β$0$]ListMap[K, β$0$], K]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexListMap", "link" : "proptics\/instances\/package$$all$.html#traverseWithIndexListMap[K]:proptics.indices.TraverseWithIndex[[β$0$]scala.collection.immutable.ListMap[K,β$0$],K]", "kind" : "implicit final def"}, {"label" : "traverseWithIndexList", "tail" : ": TraverseWithIndex[List, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexList", "link" : "proptics\/instances\/package$$all$.html#traverseWithIndexList:proptics.indices.TraverseWithIndex[List,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexVector", "tail" : ": TraverseWithIndex[Vector, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexVector", "link" : "proptics\/instances\/package$$all$.html#traverseWithIndexVector:proptics.indices.TraverseWithIndex[Vector,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexOption", "tail" : ": TraverseWithIndex[Option, Unit]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexOption", "link" : "proptics\/instances\/package$$all$.html#traverseWithIndexOption:proptics.indices.TraverseWithIndex[Option,Unit]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexArraySeq", "tail" : ": TraverseWithIndex[ArraySeq, Int]", "member" : "proptics.instances.ScalaVersionSpecificTraverseWithIndexInstances.traverseWithIndexArraySeq", "link" : "proptics\/instances\/package$$all$.html#traverseWithIndexArraySeq:proptics.indices.TraverseWithIndex[scala.collection.immutable.ArraySeq,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexLazyList", "tail" : ": TraverseWithIndex[LazyList, Int]", "member" : "proptics.instances.ScalaVersionSpecificTraverseWithIndexInstances.traverseWithIndexLazyList", "link" : "proptics\/instances\/package$$all$.html#traverseWithIndexLazyList:proptics.indices.TraverseWithIndex[LazyList,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexNonEmptyMap", "tail" : "(): FoldableWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K, β$6$], K]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyMap", "link" : "proptics\/instances\/package$$all$.html#foldableWithIndexNonEmptyMap[K]:proptics.indices.FoldableWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K,β$6$],K]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexOneAnd", "tail" : "(arg0: Foldable[F]): FoldableWithIndex[[β$4$]OneAnd[F, β$4$], Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexOneAnd", "link" : "proptics\/instances\/package$$all$.html#foldableWithIndexOneAnd[F[_]](implicitevidence$1:cats.Foldable[F]):proptics.indices.FoldableWithIndex[[β$4$]cats.data.OneAnd[F,β$4$],Int]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexNonEmptyChain", "tail" : ": FoldableWithIndex[NonEmptyChain, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyChain", "link" : "proptics\/instances\/package$$all$.html#foldableWithIndexNonEmptyChain:proptics.indices.FoldableWithIndex[cats.data.NonEmptyChain,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexNonEmptyList", "tail" : ": FoldableWithIndex[NonEmptyList, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyList", "link" : "proptics\/instances\/package$$all$.html#foldableWithIndexNonEmptyList:proptics.indices.FoldableWithIndex[cats.data.NonEmptyList,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexNonEmptyVector", "tail" : ": FoldableWithIndex[NonEmptyVector, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyVector", "link" : "proptics\/instances\/package$$all$.html#foldableWithIndexNonEmptyVector:proptics.indices.FoldableWithIndex[cats.data.NonEmptyVector,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexChain", "tail" : ": FoldableWithIndex[Chain, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexChain", "link" : "proptics\/instances\/package$$all$.html#foldableWithIndexChain:proptics.indices.FoldableWithIndex[cats.data.Chain,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexMap", "tail" : "(): FoldableWithIndex[[β$2$]Map[K, β$2$], K]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexMap", "link" : "proptics\/instances\/package$$all$.html#foldableWithIndexMap[K]:proptics.indices.FoldableWithIndex[[β$2$]scala.collection.immutable.Map[K,β$2$],K]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexListMap", "tail" : "(): FoldableWithIndex[[β$0$]ListMap[K, β$0$], K]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexListMap", "link" : "proptics\/instances\/package$$all$.html#foldableWithIndexListMap[K]:proptics.indices.FoldableWithIndex[[β$0$]scala.collection.immutable.ListMap[K,β$0$],K]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexList", "tail" : ": FoldableWithIndex[List, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexList", "link" : "proptics\/instances\/package$$all$.html#foldableWithIndexList:proptics.indices.FoldableWithIndex[List,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexVector", "tail" : ": FoldableWithIndex[Vector, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexVector", "link" : "proptics\/instances\/package$$all$.html#foldableWithIndexVector:proptics.indices.FoldableWithIndex[Vector,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexOption", "tail" : ": FoldableWithIndex[Option, Unit]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexOption", "link" : "proptics\/instances\/package$$all$.html#foldableWithIndexOption:proptics.indices.FoldableWithIndex[Option,Unit]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexArraySeq", "tail" : ": FoldableWithIndex[ArraySeq, Int]", "member" : "proptics.instances.ScalaVersionSpecificFoldableWithIndexInstances.foldableWithIndexArraySeq", "link" : "proptics\/instances\/package$$all$.html#foldableWithIndexArraySeq:proptics.indices.FoldableWithIndex[collection.compat.immutable.ArraySeq,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexLazyList", "tail" : ": FoldableWithIndex[LazyList, Int]", "member" : "proptics.instances.ScalaVersionSpecificFoldableWithIndexInstances.foldableWithIndexLazyList", "link" : "proptics\/instances\/package$$all$.html#foldableWithIndexLazyList:proptics.indices.FoldableWithIndex[LazyList,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexNonEmptyMap", "tail" : "(arg0: Order[K]): FunctorWithIndex[[β$7$]cats.data.NonEmptyMapImpl.Type[K, β$7$], K]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyMap", "link" : "proptics\/instances\/package$$all$.html#functorWithIndexNonEmptyMap[K](implicitevidence$2:cats.Order[K]):proptics.indices.FunctorWithIndex[[β$7$]cats.data.NonEmptyMapImpl.Type[K,β$7$],K]", "kind" : "implicit final def"}, {"label" : "functorWithIndexOneAnd", "tail" : "(arg0: Traverse[F]): FunctorWithIndex[[β$4$]OneAnd[F, β$4$], Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexOneAnd", "link" : "proptics\/instances\/package$$all$.html#functorWithIndexOneAnd[F[_]](implicitevidence$1:cats.Traverse[F]):proptics.indices.FunctorWithIndex[[β$4$]cats.data.OneAnd[F,β$4$],Int]", "kind" : "implicit final def"}, {"label" : "functorWithIndexNonEmptyChain", "tail" : ": FunctorWithIndex[NonEmptyChain, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyChain", "link" : "proptics\/instances\/package$$all$.html#functorWithIndexNonEmptyChain:proptics.indices.FunctorWithIndex[cats.data.NonEmptyChain,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexChain", "tail" : ": FunctorWithIndex[Chain, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexChain", "link" : "proptics\/instances\/package$$all$.html#functorWithIndexChain:proptics.indices.FunctorWithIndex[cats.data.Chain,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexNonEmptyList", "tail" : ": FunctorWithIndex[NonEmptyList, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyList", "link" : "proptics\/instances\/package$$all$.html#functorWithIndexNonEmptyList:proptics.indices.FunctorWithIndex[cats.data.NonEmptyList,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexNonEmptyVector", "tail" : ": FunctorWithIndex[NonEmptyVector, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyVector", "link" : "proptics\/instances\/package$$all$.html#functorWithIndexNonEmptyVector:proptics.indices.FunctorWithIndex[cats.data.NonEmptyVector,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexMap", "tail" : "(): FunctorWithIndex[[β$2$]Map[K, β$2$], K]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexMap", "link" : "proptics\/instances\/package$$all$.html#functorWithIndexMap[K]:proptics.indices.FunctorWithIndex[[β$2$]scala.collection.immutable.Map[K,β$2$],K]", "kind" : "implicit final def"}, {"label" : "functorWithIndexListMap", "tail" : "(): FunctorWithIndex[[β$0$]ListMap[K, β$0$], K]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexListMap", "link" : "proptics\/instances\/package$$all$.html#functorWithIndexListMap[K]:proptics.indices.FunctorWithIndex[[β$0$]scala.collection.immutable.ListMap[K,β$0$],K]", "kind" : "implicit final def"}, {"label" : "functorWithIndexList", "tail" : ": FunctorWithIndex[List, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexList", "link" : "proptics\/instances\/package$$all$.html#functorWithIndexList:proptics.indices.FunctorWithIndex[List,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexVector", "tail" : ": FunctorWithIndex[Vector, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexVector", "link" : "proptics\/instances\/package$$all$.html#functorWithIndexVector:proptics.indices.FunctorWithIndex[Vector,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexOption", "tail" : ": FunctorWithIndex[Option, Unit]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexOption", "link" : "proptics\/instances\/package$$all$.html#functorWithIndexOption:proptics.indices.FunctorWithIndex[Option,Unit]", "kind" : "implicit final val"}, {"label" : "functorWithIndexArraySeq", "tail" : ": FunctorWithIndex[ArraySeq, Int]", "member" : "proptics.instances.ScalaVersionSpecificFunctorWithIndexInstances.functorWithIndexArraySeq", "link" : "proptics\/instances\/package$$all$.html#functorWithIndexArraySeq:proptics.indices.FunctorWithIndex[collection.compat.immutable.ArraySeq,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexLazyList", "tail" : ": FunctorWithIndex[LazyList, Int]", "member" : "proptics.instances.ScalaVersionSpecificFunctorWithIndexInstances.functorWithIndexLazyList", "link" : "proptics\/instances\/package$$all$.html#functorWithIndexLazyList:proptics.indices.FunctorWithIndex[LazyList,Int]", "kind" : "implicit final val"}, {"label" : "nonEmptyConsOneAnd", "tail" : "(): NonEmptyCons[OneAnd[F, A], A, F[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsOneAnd", "link" : "proptics\/instances\/package$$all$.html#nonEmptyConsOneAnd[F[_],A]:proptics.typeclass.NonEmptyCons[cats.data.OneAnd[F,A],A,F[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsNonEmptyChain", "tail" : "(): NonEmptyCons[NonEmptyChain[A], A, Chain[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsNonEmptyChain", "link" : "proptics\/instances\/package$$all$.html#nonEmptyConsNonEmptyChain[A]:proptics.typeclass.NonEmptyCons[cats.data.NonEmptyChain[A],A,cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsNoneEmptyList", "tail" : "(): NonEmptyCons[NonEmptyList[A], A, List[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsNoneEmptyList", "link" : "proptics\/instances\/package$$all$.html#nonEmptyConsNoneEmptyList[A]:proptics.typeclass.NonEmptyCons[cats.data.NonEmptyList[A],A,List[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsNonEmptyVector", "tail" : "(): NonEmptyCons[NonEmptyVector[A], A, Vector[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsNonEmptyVector", "link" : "proptics\/instances\/package$$all$.html#nonEmptyConsNonEmptyVector[A]:proptics.typeclass.NonEmptyCons[cats.data.NonEmptyVector[A],A,Vector[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple5", "tail" : "(): NonEmptyCons[(A, B, C, D, E), A, (B, C, D, E)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple5", "link" : "proptics\/instances\/package$$all$.html#nonEmptyConsTuple5[A,B,C,D,E]:proptics.typeclass.NonEmptyCons[(A,B,C,D,E),A,(B,C,D,E)]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple4", "tail" : "(): NonEmptyCons[(A, B, C, D), A, (B, C, D)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple4", "link" : "proptics\/instances\/package$$all$.html#nonEmptyConsTuple4[A,B,C,D]:proptics.typeclass.NonEmptyCons[(A,B,C,D),A,(B,C,D)]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple3", "tail" : "(): NonEmptyCons[(A, B, C), A, (B, C)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple3", "link" : "proptics\/instances\/package$$all$.html#nonEmptyConsTuple3[A,B,C]:proptics.typeclass.NonEmptyCons[(A,B,C),A,(B,C)]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple2", "tail" : "(): NonEmptyCons[(A, B), A, B]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple2", "link" : "proptics\/instances\/package$$all$.html#nonEmptyConsTuple2[A,B]:proptics.typeclass.NonEmptyCons[(A,B),A,B]", "kind" : "implicit def"}, {"label" : "tail", "tail" : "(ev: NonEmptyCons[S, H, T]): Lens[S, T]", "member" : "proptics.instances.NonEmptyConsInstances.tail", "link" : "proptics\/instances\/package$$all$.html#tail[S,H,T](implicitev:proptics.typeclass.NonEmptyCons[S,H,T]):proptics.Lens[S,T]", "kind" : "final def"}, {"label" : "head", "tail" : "(ev: NonEmptyCons[S, H, T]): Lens[S, H]", "member" : "proptics.instances.NonEmptyConsInstances.head", "link" : "proptics\/instances\/package$$all$.html#head[S,H,T](implicitev:proptics.typeclass.NonEmptyCons[S,H,T]):proptics.Lens[S,H]", "kind" : "final def"}, {"label" : "nonEmptyCons", "tail" : "(ev: NonEmptyCons[S, H, T]): Iso[S, (H, T)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyCons", "link" : "proptics\/instances\/package$$all$.html#nonEmptyCons[S,H,T](implicitev:proptics.typeclass.NonEmptyCons[S,H,T]):proptics.Iso[S,(H,T)]", "kind" : "final def"}, {"label" : "vectorStripSuffix", "tail" : "(qs: Vector[A])(xs0: Vector[A])(arg0: Eq[A]): Option[Vector[A]]", "member" : "proptics.instances.SuffixedInstances.vectorStripSuffix", "link" : "proptics\/instances\/package$$all$.html#vectorStripSuffix[A](qs:Vector[A])(xs0:Vector[A])(implicitevidence$14:cats.Eq[A]):Option[Vector[A]]", "kind" : "def"}, {"label" : "suffixedOneAnd", "tail" : "(arg0: Alternative[F], arg1: Foldable[F], arg2: Eq[A], ev: Suffixed[F[A], F[A]]): Suffixed[OneAnd[F, A], F[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedOneAnd", "link" : "proptics\/instances\/package$$all$.html#suffixedOneAnd[F[_],A](implicitevidence$9:cats.Alternative[F],implicitevidence$10:cats.Foldable[F],implicitevidence$11:cats.Eq[A],implicitev:proptics.typeclass.Suffixed[F[A],F[A]]):proptics.typeclass.Suffixed[cats.data.OneAnd[F,A],F[A]]", "kind" : "implicit final def"}, {"label" : "suffixedNonEmptyChain", "tail" : "(arg0: Eq[A]): Suffixed[NonEmptyChain[A], Chain[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedNonEmptyChain", "link" : "proptics\/instances\/package$$all$.html#suffixedNonEmptyChain[A](implicitevidence$8:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.NonEmptyChain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "suffixedNonEmptyList", "tail" : "(arg0: Eq[A]): Suffixed[NonEmptyList[A], List[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedNonEmptyList", "link" : "proptics\/instances\/package$$all$.html#suffixedNonEmptyList[A](implicitevidence$7:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.NonEmptyList[A],List[A]]", "kind" : "implicit final def"}, {"label" : "suffixedNonEmptyVector", "tail" : "(arg0: Eq[A]): Suffixed[NonEmptyVector[A], Vector[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedNonEmptyVector", "link" : "proptics\/instances\/package$$all$.html#suffixedNonEmptyVector[A](implicitevidence$6:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.NonEmptyVector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "suffixedChain", "tail" : "(arg0: Eq[A]): Suffixed[Chain[A], Chain[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedChain", "link" : "proptics\/instances\/package$$all$.html#suffixedChain[A](implicitevidence$5:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.Chain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "suffixedList", "tail" : "(arg0: Eq[A]): Suffixed[List[A], List[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedList", "link" : "proptics\/instances\/package$$all$.html#suffixedList[A](implicitevidence$4:cats.Eq[A]):proptics.typeclass.Suffixed[List[A],List[A]]", "kind" : "implicit final def"}, {"label" : "suffixedVector", "tail" : "(arg0: Eq[A]): Suffixed[Vector[A], Vector[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedVector", "link" : "proptics\/instances\/package$$all$.html#suffixedVector[A](implicitevidence$3:cats.Eq[A]):proptics.typeclass.Suffixed[Vector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "suffixedArray", "tail" : "(arg0: Eq[A], arg1: ClassTag[A]): Suffixed[Array[A], Array[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedArray", "link" : "proptics\/instances\/package$$all$.html#suffixedArray[A](implicitevidence$1:cats.Eq[A],implicitevidence$2:scala.reflect.ClassTag[A]):proptics.typeclass.Suffixed[Array[A],Array[A]]", "kind" : "implicit final def"}, {"label" : "suffixedString", "tail" : "(): Suffixed[String, String]", "member" : "proptics.instances.SuffixedInstances.suffixedString", "link" : "proptics\/instances\/package$$all$.html#suffixedString:proptics.typeclass.Suffixed[String,String]", "kind" : "implicit final def"}, {"label" : "suffixed", "tail" : "(s: S)(ev: Suffixed[S, T]): Prism[S, T]", "member" : "proptics.instances.SuffixedInstances.suffixed", "link" : "proptics\/instances\/package$$all$.html#suffixed[S,T](s:S)(implicitev:proptics.typeclass.Suffixed[S,T]):proptics.Prism[S,T]", "kind" : "final def"}, {"label" : "suffixedArraySeq", "tail" : "(arg0: Eq[A], arg1: ClassTag[A]): Suffixed[ArraySeq[A], ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificSuffixedInstances.suffixedArraySeq", "link" : "proptics\/instances\/package$$all$.html#suffixedArraySeq[A](implicitevidence$2:cats.Eq[A],implicitevidence$3:scala.reflect.ClassTag[A]):proptics.typeclass.Suffixed[collection.compat.immutable.ArraySeq[A],collection.compat.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "suffixedLazyList", "tail" : "(arg0: Eq[A]): Suffixed[LazyList[A], LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificSuffixedInstances.suffixedLazyList", "link" : "proptics\/instances\/package$$all$.html#suffixedLazyList[A](implicitevidence$1:cats.Eq[A]):proptics.typeclass.Suffixed[LazyList[A],LazyList[A]]", "kind" : "implicit final def"}, {"label" : "prefixedOneAnd", "tail" : "(arg0: Alternative[F], arg1: Eq[A], ev: Prefixed[F[A], F[A]]): Prefixed[OneAnd[F, A], F[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedOneAnd", "link" : "proptics\/instances\/package$$all$.html#prefixedOneAnd[F[_],A](implicitevidence$9:cats.Alternative[F],implicitevidence$10:cats.Eq[A],implicitev:proptics.typeclass.Prefixed[F[A],F[A]]):proptics.typeclass.Prefixed[cats.data.OneAnd[F,A],F[A]]", "kind" : "implicit final def"}, {"label" : "prefixedNonEmptyChain", "tail" : "(arg0: Eq[A]): Prefixed[NonEmptyChain[A], Chain[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedNonEmptyChain", "link" : "proptics\/instances\/package$$all$.html#prefixedNonEmptyChain[A](implicitevidence$8:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.NonEmptyChain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "prefixedNonEmptyList", "tail" : "(arg0: Eq[A]): Prefixed[NonEmptyList[A], List[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedNonEmptyList", "link" : "proptics\/instances\/package$$all$.html#prefixedNonEmptyList[A](implicitevidence$7:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.NonEmptyList[A],List[A]]", "kind" : "implicit final def"}, {"label" : "prefixedNonEmptyVector", "tail" : "(arg0: Eq[A]): Prefixed[NonEmptyVector[A], Vector[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedNonEmptyVector", "link" : "proptics\/instances\/package$$all$.html#prefixedNonEmptyVector[A](implicitevidence$6:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.NonEmptyVector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "prefixedChain", "tail" : "(arg0: Eq[A]): Prefixed[Chain[A], Chain[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedChain", "link" : "proptics\/instances\/package$$all$.html#prefixedChain[A](implicitevidence$5:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.Chain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "prefixedList", "tail" : "(arg0: Eq[A]): Prefixed[List[A], List[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedList", "link" : "proptics\/instances\/package$$all$.html#prefixedList[A](implicitevidence$4:cats.Eq[A]):proptics.typeclass.Prefixed[List[A],List[A]]", "kind" : "implicit final def"}, {"label" : "prefixedVector", "tail" : "(arg0: Eq[A]): Prefixed[Vector[A], Vector[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedVector", "link" : "proptics\/instances\/package$$all$.html#prefixedVector[A](implicitevidence$3:cats.Eq[A]):proptics.typeclass.Prefixed[Vector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "prefixedArray", "tail" : "(arg0: Eq[A], arg1: ClassTag[A]): Prefixed[Array[A], Array[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedArray", "link" : "proptics\/instances\/package$$all$.html#prefixedArray[A](implicitevidence$1:cats.Eq[A],implicitevidence$2:scala.reflect.ClassTag[A]):proptics.typeclass.Prefixed[Array[A],Array[A]]", "kind" : "implicit final def"}, {"label" : "prefixedString", "tail" : "(): Prefixed[String, String]", "member" : "proptics.instances.PrefixedInstances.prefixedString", "link" : "proptics\/instances\/package$$all$.html#prefixedString:proptics.typeclass.Prefixed[String,String]", "kind" : "implicit final def"}, {"label" : "prefixed", "tail" : "(s: S)(ev: Prefixed[S, T]): Prism[S, T]", "member" : "proptics.instances.PrefixedInstances.prefixed", "link" : "proptics\/instances\/package$$all$.html#prefixed[S,T](s:S)(implicitev:proptics.typeclass.Prefixed[S,T]):proptics.Prism[S,T]", "kind" : "final def"}, {"label" : "prefixedArraySeq", "tail" : "(arg0: Eq[A]): Prefixed[ArraySeq[A], ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificPrefixedInstances.prefixedArraySeq", "link" : "proptics\/instances\/package$$all$.html#prefixedArraySeq[A](implicitevidence$2:cats.Eq[A]):proptics.typeclass.Prefixed[scala.collection.immutable.ArraySeq[A],scala.collection.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "prefixedLazyList", "tail" : "(arg0: Eq[A]): Prefixed[LazyList[A], LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificPrefixedInstances.prefixedLazyList", "link" : "proptics\/instances\/package$$all$.html#prefixedLazyList[A](implicitevidence$1:cats.Eq[A]):proptics.typeclass.Prefixed[LazyList[A],LazyList[A]]", "kind" : "implicit final def"}, {"label" : "reverseNonEmptyChain", "tail" : "(): Reverse[NonEmptyChain[A], NonEmptyChain[A]]", "member" : "proptics.instances.ReverseInstances.reverseNonEmptyChain", "link" : "proptics\/instances\/package$$all$.html#reverseNonEmptyChain[A]:proptics.typeclass.Reverse[cats.data.NonEmptyChain[A],cats.data.NonEmptyChain[A]]", "kind" : "implicit final def"}, {"label" : "reverseNonEmptyList", "tail" : "(): Reverse[NonEmptyList[A], NonEmptyList[A]]", "member" : "proptics.instances.ReverseInstances.reverseNonEmptyList", "link" : "proptics\/instances\/package$$all$.html#reverseNonEmptyList[A]:proptics.typeclass.Reverse[cats.data.NonEmptyList[A],cats.data.NonEmptyList[A]]", "kind" : "implicit final def"}, {"label" : "reverseNonEmptyVector", "tail" : "(): Reverse[NonEmptyVector[A], NonEmptyVector[A]]", "member" : "proptics.instances.ReverseInstances.reverseNonEmptyVector", "link" : "proptics\/instances\/package$$all$.html#reverseNonEmptyVector[A]:proptics.typeclass.Reverse[cats.data.NonEmptyVector[A],cats.data.NonEmptyVector[A]]", "kind" : "implicit final def"}, {"label" : "reverseChain", "tail" : "(): Reverse[Chain[A], Chain[A]]", "member" : "proptics.instances.ReverseInstances.reverseChain", "link" : "proptics\/instances\/package$$all$.html#reverseChain[A]:proptics.typeclass.Reverse[cats.data.Chain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "reverseList", "tail" : "(): Reverse[List[A], List[A]]", "member" : "proptics.instances.ReverseInstances.reverseList", "link" : "proptics\/instances\/package$$all$.html#reverseList[A]:proptics.typeclass.Reverse[List[A],List[A]]", "kind" : "implicit final def"}, {"label" : "reverseVector", "tail" : "(): Reverse[Vector[A], Vector[A]]", "member" : "proptics.instances.ReverseInstances.reverseVector", "link" : "proptics\/instances\/package$$all$.html#reverseVector[A]:proptics.typeclass.Reverse[Vector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "reverseArray", "tail" : "(arg0: ClassTag[A]): Reverse[Array[A], Array[A]]", "member" : "proptics.instances.ReverseInstances.reverseArray", "link" : "proptics\/instances\/package$$all$.html#reverseArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Reverse[Array[A],Array[A]]", "kind" : "implicit final def"}, {"label" : "reverseTuple5", "tail" : "(): Reverse[(A, B, C, D, E), (E, D, C, B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple5", "link" : "proptics\/instances\/package$$all$.html#reverseTuple5[A,B,C,D,E]:proptics.typeclass.Reverse[(A,B,C,D,E),(E,D,C,B,A)]", "kind" : "implicit def"}, {"label" : "reverseTuple4", "tail" : "(): Reverse[(A, B, C, D), (D, C, B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple4", "link" : "proptics\/instances\/package$$all$.html#reverseTuple4[A,B,C,D]:proptics.typeclass.Reverse[(A,B,C,D),(D,C,B,A)]", "kind" : "implicit def"}, {"label" : "reverseTuple3", "tail" : "(): Reverse[(A, B, C), (C, B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple3", "link" : "proptics\/instances\/package$$all$.html#reverseTuple3[A,B,C]:proptics.typeclass.Reverse[(A,B,C),(C,B,A)]", "kind" : "implicit def"}, {"label" : "reverseTuple2", "tail" : "(): Reverse[(A, B), (B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple2", "link" : "proptics\/instances\/package$$all$.html#reverseTuple2[A,B]:proptics.typeclass.Reverse[(A,B),(B,A)]", "kind" : "implicit def"}, {"label" : "reverseString", "tail" : ": Reverse[String, String]", "member" : "proptics.instances.ReverseInstances.reverseString", "link" : "proptics\/instances\/package$$all$.html#reverseString:proptics.typeclass.Reverse[String,String]", "kind" : "implicit final val"}, {"label" : "reverse", "tail" : "(ev: Reverse[S, T]): Iso[S, T]", "member" : "proptics.instances.ReverseInstances.reverse", "link" : "proptics\/instances\/package$$all$.html#reverse[S,T](implicitev:proptics.typeclass.Reverse[S,T]):proptics.Iso[S,T]", "kind" : "final def"}, {"label" : "reverseArraySeq", "tail" : "(arg0: ClassTag[A]): Reverse[ArraySeq[A], ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificReverseInstances.reverseArraySeq", "link" : "proptics\/instances\/package$$all$.html#reverseArraySeq[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Reverse[collection.compat.immutable.ArraySeq[A],collection.compat.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "reverseLazyList", "tail" : "(): Reverse[LazyList[A], LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificReverseInstances.reverseLazyList", "link" : "proptics\/instances\/package$$all$.html#reverseLazyList[A]:proptics.typeclass.Reverse[LazyList[A],LazyList[A]]", "kind" : "implicit final def"}, {"label" : "field5Tuple5", "tail" : "(): Field5[(A, B, C, D, E), E]", "member" : "proptics.instances.Field5Instances.field5Tuple5", "link" : "proptics\/instances\/package$$all$.html#field5Tuple5[A,B,C,D,E]:proptics.typeclass.Field5[(A,B,C,D,E),E]", "kind" : "implicit final def"}, {"label" : "fifth", "tail" : "(ev: Field5[(A, B, C, D, E), E]): Lens[(A, B, C, D, E), E]", "member" : "proptics.instances.Field5Instances.fifth", "link" : "proptics\/instances\/package$$all$.html#fifth[A,B,C,D,E](implicitev:proptics.typeclass.Field5[(A,B,C,D,E),E]):proptics.Lens[(A,B,C,D,E),E]", "kind" : "final def"}, {"label" : "field4Tuple5", "tail" : "(): Field4[(A, B, C, D, E), D]", "member" : "proptics.instances.Field4Instances.field4Tuple5", "link" : "proptics\/instances\/package$$all$.html#field4Tuple5[A,B,C,D,E]:proptics.typeclass.Field4[(A,B,C,D,E),D]", "kind" : "implicit final def"}, {"label" : "field4Tuple4", "tail" : "(): Field4[(A, B, C, D), D]", "member" : "proptics.instances.Field4Instances.field4Tuple4", "link" : "proptics\/instances\/package$$all$.html#field4Tuple4[A,B,C,D]:proptics.typeclass.Field4[(A,B,C,D),D]", "kind" : "implicit final def"}, {"label" : "fourth", "tail" : "(ev: Field4[(A, B, C, D), D]): Lens[(A, B, C, D), D]", "member" : "proptics.instances.Field4Instances.fourth", "link" : "proptics\/instances\/package$$all$.html#fourth[A,B,C,D](implicitev:proptics.typeclass.Field4[(A,B,C,D),D]):proptics.Lens[(A,B,C,D),D]", "kind" : "final def"}, {"label" : "field3Tuple5", "tail" : "(): Field3[(A, B, C, D, E), C]", "member" : "proptics.instances.Field3Instances.field3Tuple5", "link" : "proptics\/instances\/package$$all$.html#field3Tuple5[A,B,C,D,E]:proptics.typeclass.Field3[(A,B,C,D,E),C]", "kind" : "implicit final def"}, {"label" : "field3Tuple4", "tail" : "(): Field3[(A, B, C, D), C]", "member" : "proptics.instances.Field3Instances.field3Tuple4", "link" : "proptics\/instances\/package$$all$.html#field3Tuple4[A,B,C,D]:proptics.typeclass.Field3[(A,B,C,D),C]", "kind" : "implicit final def"}, {"label" : "field3Tuple3", "tail" : "(): Field3[(A, B, C), C]", "member" : "proptics.instances.Field3Instances.field3Tuple3", "link" : "proptics\/instances\/package$$all$.html#field3Tuple3[A,B,C]:proptics.typeclass.Field3[(A,B,C),C]", "kind" : "implicit final def"}, {"label" : "third", "tail" : "(ev: Field3[(A, B, C), C]): Lens[(A, B, C), C]", "member" : "proptics.instances.Field3Instances.third", "link" : "proptics\/instances\/package$$all$.html#third[A,B,C](implicitev:proptics.typeclass.Field3[(A,B,C),C]):proptics.Lens[(A,B,C),C]", "kind" : "final def"}, {"label" : "field2Tuple5", "tail" : "(): Field2[(A, B, C, D, E), B]", "member" : "proptics.instances.Field2Instances.field2Tuple5", "link" : "proptics\/instances\/package$$all$.html#field2Tuple5[A,B,C,D,E]:proptics.typeclass.Field2[(A,B,C,D,E),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple4", "tail" : "(): Field2[(A, B, C, D), B]", "member" : "proptics.instances.Field2Instances.field2Tuple4", "link" : "proptics\/instances\/package$$all$.html#field2Tuple4[A,B,C,D]:proptics.typeclass.Field2[(A,B,C,D),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple3", "tail" : "(): Field2[(A, B, C), B]", "member" : "proptics.instances.Field2Instances.field2Tuple3", "link" : "proptics\/instances\/package$$all$.html#field2Tuple3[A,B,C]:proptics.typeclass.Field2[(A,B,C),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple2", "tail" : "(): Field2[(A, B), B]", "member" : "proptics.instances.Field2Instances.field2Tuple2", "link" : "proptics\/instances\/package$$all$.html#field2Tuple2[A,B]:proptics.typeclass.Field2[(A,B),B]", "kind" : "implicit final def"}, {"label" : "second", "tail" : "(ev: Field2[(A, B), B]): Lens[(A, B), B]", "member" : "proptics.instances.Field2Instances.second", "link" : "proptics\/instances\/package$$all$.html#second[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.Lens[(A,B),B]", "kind" : "final def"}, {"label" : "field1Tuple5", "tail" : "(): Field1[(A, B, C, D, E), A]", "member" : "proptics.instances.Field1Instances.field1Tuple5", "link" : "proptics\/instances\/package$$all$.html#field1Tuple5[A,B,C,D,E]:proptics.typeclass.Field1[(A,B,C,D,E),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple4", "tail" : "(): Field1[(A, B, C, D), A]", "member" : "proptics.instances.Field1Instances.field1Tuple4", "link" : "proptics\/instances\/package$$all$.html#field1Tuple4[A,B,C,D]:proptics.typeclass.Field1[(A,B,C,D),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple3", "tail" : "(): Field1[(A, B, C), A]", "member" : "proptics.instances.Field1Instances.field1Tuple3", "link" : "proptics\/instances\/package$$all$.html#field1Tuple3[A,B,C]:proptics.typeclass.Field1[(A,B,C),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple2", "tail" : "(): Field1[(A, B), A]", "member" : "proptics.instances.Field1Instances.field1Tuple2", "link" : "proptics\/instances\/package$$all$.html#field1Tuple2[A,B]:proptics.typeclass.Field1[(A,B),A]", "kind" : "implicit final def"}, {"label" : "first", "tail" : "(ev: Field1[(A, B), A]): Lens[(A, B), A]", "member" : "proptics.instances.Field1Instances.first", "link" : "proptics\/instances\/package$$all$.html#first[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.Lens[(A,B),A]", "kind" : "final def"}, {"label" : "indexNonEmptyChain", "tail" : "(): Index[NonEmptyChain[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexNonEmptyChain", "link" : "proptics\/instances\/package$$all$.html#indexNonEmptyChain[A]:proptics.typeclass.Index[cats.data.NonEmptyChain[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexNonEmptyMap", "tail" : "(): Index[NonEmptyMap[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexNonEmptyMap", "link" : "proptics\/instances\/package$$all$.html#indexNonEmptyMap[K,V]:proptics.typeclass.Index[cats.data.NonEmptyMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexNonEmptySet", "tail" : "(arg0: Eq[A]): Index[NonEmptySet[A], A, Unit]", "member" : "proptics.instances.IndexInstances.indexNonEmptySet", "link" : "proptics\/instances\/package$$all$.html#indexNonEmptySet[A](implicitevidence$3:cats.Eq[A]):proptics.typeclass.Index[cats.data.NonEmptySet[A],A,Unit]", "kind" : "implicit final def"}, {"label" : "indexNonEmptyList", "tail" : "(): Index[NonEmptyList[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexNonEmptyList", "link" : "proptics\/instances\/package$$all$.html#indexNonEmptyList[A]:proptics.typeclass.Index[cats.data.NonEmptyList[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexNonEmptyVector", "tail" : "(): Index[NonEmptyVector[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexNonEmptyVector", "link" : "proptics\/instances\/package$$all$.html#indexNonEmptyVector[A]:proptics.typeclass.Index[cats.data.NonEmptyVector[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexChain", "tail" : "(): Index[Chain[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexChain", "link" : "proptics\/instances\/package$$all$.html#indexChain[A]:proptics.typeclass.Index[cats.data.Chain[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexMap", "tail" : "(): Index[Map[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexMap", "link" : "proptics\/instances\/package$$all$.html#indexMap[K,V]:proptics.typeclass.Index[Map[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexSortedMap", "tail" : "(): Index[SortedMap[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexSortedMap", "link" : "proptics\/instances\/package$$all$.html#indexSortedMap[K,V]:proptics.typeclass.Index[scala.collection.immutable.SortedMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexSet", "tail" : "(): Index[Set[A], A, Unit]", "member" : "proptics.instances.IndexInstances.indexSet", "link" : "proptics\/instances\/package$$all$.html#indexSet[A]:proptics.typeclass.Index[Set[A],A,Unit]", "kind" : "implicit final def"}, {"label" : "indexListMap", "tail" : "(): Index[ListMap[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexListMap", "link" : "proptics\/instances\/package$$all$.html#indexListMap[K,V]:proptics.typeclass.Index[scala.collection.immutable.ListMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexList", "tail" : "(): Index[List[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexList", "link" : "proptics\/instances\/package$$all$.html#indexList[A]:proptics.typeclass.Index[List[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexVector", "tail" : "(): Index[Vector[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexVector", "link" : "proptics\/instances\/package$$all$.html#indexVector[A]:proptics.typeclass.Index[Vector[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexArray", "tail" : "(arg0: ClassTag[A]): Index[Array[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexArray", "link" : "proptics\/instances\/package$$all$.html#indexArray[A](implicitevidence$2:scala.reflect.ClassTag[A]):proptics.typeclass.Index[Array[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexOption", "tail" : "(): Index[Option[A], Unit, A]", "member" : "proptics.instances.IndexInstances.indexOption", "link" : "proptics\/instances\/package$$all$.html#indexOption[A]:proptics.typeclass.Index[Option[A],Unit,A]", "kind" : "implicit final def"}, {"label" : "indexArrow", "tail" : "(arg0: Eq[I]): Index[(I) => A, I, A]", "member" : "proptics.instances.IndexInstances.indexArrow", "link" : "proptics\/instances\/package$$all$.html#indexArrow[I,A](implicitevidence$1:cats.Eq[I]):proptics.typeclass.Index[I=>A,I,A]", "kind" : "implicit final def"}, {"label" : "fromAt", "tail" : "(ev: At[S, I, A]): Index[S, I, A]", "member" : "proptics.instances.IndexInstances.fromAt", "link" : "proptics\/instances\/package$$all$.html#fromAt[S,I,A](implicitev:proptics.typeclass.At[S,I,A]):proptics.typeclass.Index[S,I,A]", "kind" : "final def"}, {"label" : "index", "tail" : "(i: I)(ev: Index[S, I, A]): AffineTraversal[S, A]", "member" : "proptics.instances.IndexInstances.index", "link" : "proptics\/instances\/package$$all$.html#index[S,I,A](i:I)(implicitev:proptics.typeclass.Index[S,I,A]):proptics.AffineTraversal[S,A]", "kind" : "final def"}, {"label" : "indexArraySeq", "tail" : "(): Index[ArraySeq[A], Int, A]", "member" : "proptics.instances.ScalaVersionSpecificIndexInstances.indexArraySeq", "link" : "proptics\/instances\/package$$all$.html#indexArraySeq[A]:proptics.typeclass.Index[scala.collection.immutable.ArraySeq[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexLazyList", "tail" : "(): Index[LazyList[A], Int, A]", "member" : "proptics.instances.ScalaVersionSpecificIndexInstances.indexLazyList", "link" : "proptics\/instances\/package$$all$.html#indexLazyList[A]:proptics.typeclass.Index[scala.collection.immutable.LazyList[A],Int,A]", "kind" : "implicit final def"}, {"label" : "emptyChain", "tail" : "(): Empty[Chain[A]]", "member" : "proptics.instances.EmptyInstances.emptyChain", "link" : "proptics\/instances\/package$$all$.html#emptyChain[A]:proptics.typeclass.Empty[cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "emptySortedMap", "tail" : "(ev: Order[K]): Empty[SortedMap[K, V]]", "member" : "proptics.instances.EmptyInstances.emptySortedMap", "link" : "proptics\/instances\/package$$all$.html#emptySortedMap[K,V](implicitev:cats.Order[K]):proptics.typeclass.Empty[scala.collection.immutable.SortedMap[K,V]]", "kind" : "implicit final def"}, {"label" : "emptyMap", "tail" : "(): Empty[Map[K, V]]", "member" : "proptics.instances.EmptyInstances.emptyMap", "link" : "proptics\/instances\/package$$all$.html#emptyMap[K,V]:proptics.typeclass.Empty[Map[K,V]]", "kind" : "implicit final def"}, {"label" : "emptyListMap", "tail" : "(): Empty[ListMap[K, V]]", "member" : "proptics.instances.EmptyInstances.emptyListMap", "link" : "proptics\/instances\/package$$all$.html#emptyListMap[K,V]:proptics.typeclass.Empty[scala.collection.immutable.ListMap[K,V]]", "kind" : "implicit final def"}, {"label" : "emptySet", "tail" : "(): Empty[Set[A]]", "member" : "proptics.instances.EmptyInstances.emptySet", "link" : "proptics\/instances\/package$$all$.html#emptySet[A]:proptics.typeclass.Empty[Set[A]]", "kind" : "implicit final def"}, {"label" : "emptyVector", "tail" : "(): Empty[Vector[A]]", "member" : "proptics.instances.EmptyInstances.emptyVector", "link" : "proptics\/instances\/package$$all$.html#emptyVector[A]:proptics.typeclass.Empty[Vector[A]]", "kind" : "implicit final def"}, {"label" : "emptyList", "tail" : "(): Empty[List[A]]", "member" : "proptics.instances.EmptyInstances.emptyList", "link" : "proptics\/instances\/package$$all$.html#emptyList[A]:proptics.typeclass.Empty[List[A]]", "kind" : "implicit final def"}, {"label" : "emptyArray", "tail" : "(arg0: ClassTag[A]): Empty[Array[A]]", "member" : "proptics.instances.EmptyInstances.emptyArray", "link" : "proptics\/instances\/package$$all$.html#emptyArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Empty[Array[A]]", "kind" : "implicit final def"}, {"label" : "emptyString", "tail" : ": Empty[String]", "member" : "proptics.instances.EmptyInstances.emptyString", "link" : "proptics\/instances\/package$$all$.html#emptyString:proptics.typeclass.Empty[String]", "kind" : "implicit final val"}, {"label" : "empty", "tail" : "(ev: Empty[S]): Prism[S, Unit]", "member" : "proptics.instances.EmptyInstances.empty", "link" : "proptics\/instances\/package$$all$.html#empty[S](implicitev:proptics.typeclass.Empty[S]):proptics.Prism[S,Unit]", "kind" : "def"}, {"label" : "emptyLazyArraySeq", "tail" : "(arg0: ClassTag[A]): Empty[ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificEmptyInstances.emptyLazyArraySeq", "link" : "proptics\/instances\/package$$all$.html#emptyLazyArraySeq[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Empty[collection.compat.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "emptyLazyList", "tail" : "(): Empty[LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificEmptyInstances.emptyLazyList", "link" : "proptics\/instances\/package$$all$.html#emptyLazyList[A]:proptics.typeclass.Empty[LazyList[A]]", "kind" : "implicit final def"}, {"label" : "eachNonEmptyChain", "tail" : "(): Each[NonEmptyChain[A], A]", "member" : "proptics.instances.EachInstances.eachNonEmptyChain", "link" : "proptics\/instances\/package$$all$.html#eachNonEmptyChain[A]:proptics.typeclass.Each[cats.data.NonEmptyChain[A],A]", "kind" : "implicit def"}, {"label" : "eachNonEmptyList", "tail" : "(): Each[NonEmptyList[A], A]", "member" : "proptics.instances.EachInstances.eachNonEmptyList", "link" : "proptics\/instances\/package$$all$.html#eachNonEmptyList[A]:proptics.typeclass.Each[cats.data.NonEmptyList[A],A]", "kind" : "implicit def"}, {"label" : "eachNonEmptyVector", "tail" : "(): Each[NonEmptyVector[A], A]", "member" : "proptics.instances.EachInstances.eachNonEmptyVector", "link" : "proptics\/instances\/package$$all$.html#eachNonEmptyVector[A]:proptics.typeclass.Each[cats.data.NonEmptyVector[A],A]", "kind" : "implicit def"}, {"label" : "eachOneAnd", "tail" : "(ev0: Each[G[A], A]): Each[OneAnd[G, A], A]", "member" : "proptics.instances.EachInstances.eachOneAnd", "link" : "proptics\/instances\/package$$all$.html#eachOneAnd[G[_],A](implicitev0:proptics.typeclass.Each[G[A],A]):proptics.typeclass.Each[cats.data.OneAnd[G,A],A]", "kind" : "implicit def"}, {"label" : "eachChain", "tail" : "(): Each[Chain[A], A]", "member" : "proptics.instances.EachInstances.eachChain", "link" : "proptics\/instances\/package$$all$.html#eachChain[A]:proptics.typeclass.Each[cats.data.Chain[A],A]", "kind" : "implicit def"}, {"label" : "eachSortedMap", "tail" : "(arg0: Order[K]): Each[SortedMap[K, V], V]", "member" : "proptics.instances.EachInstances.eachSortedMap", "link" : "proptics\/instances\/package$$all$.html#eachSortedMap[K,V](implicitevidence$1:cats.Order[K]):proptics.typeclass.Each[scala.collection.immutable.SortedMap[K,V],V]", "kind" : "implicit def"}, {"label" : "eachListMap", "tail" : "(): Each[ListMap[K, V], V]", "member" : "proptics.instances.EachInstances.eachListMap", "link" : "proptics\/instances\/package$$all$.html#eachListMap[K,V]:proptics.typeclass.Each[scala.collection.immutable.ListMap[K,V],V]", "kind" : "implicit final def"}, {"label" : "eachList", "tail" : "(): Each[List[A], A]", "member" : "proptics.instances.EachInstances.eachList", "link" : "proptics\/instances\/package$$all$.html#eachList[A]:proptics.typeclass.Each[List[A],A]", "kind" : "implicit final def"}, {"label" : "eachVector", "tail" : "(): Each[Vector[A], A]", "member" : "proptics.instances.EachInstances.eachVector", "link" : "proptics\/instances\/package$$all$.html#eachVector[A]:proptics.typeclass.Each[Vector[A],A]", "kind" : "implicit final def"}, {"label" : "eachString", "tail" : "(): Each[String, Char]", "member" : "proptics.instances.EachInstances.eachString", "link" : "proptics\/instances\/package$$all$.html#eachString:proptics.typeclass.Each[String,Char]", "kind" : "implicit final def"}, {"label" : "eachTuple5", "tail" : "(): Each[(A, A, A, A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple5", "link" : "proptics\/instances\/package$$all$.html#eachTuple5[A]:proptics.typeclass.Each[(A,A,A,A,A),A]", "kind" : "implicit def"}, {"label" : "eachTuple4", "tail" : "(): Each[(A, A, A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple4", "link" : "proptics\/instances\/package$$all$.html#eachTuple4[A]:proptics.typeclass.Each[(A,A,A,A),A]", "kind" : "implicit def"}, {"label" : "eachTuple3", "tail" : "(): Each[(A, A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple3", "link" : "proptics\/instances\/package$$all$.html#eachTuple3[A]:proptics.typeclass.Each[(A,A,A),A]", "kind" : "implicit def"}, {"label" : "eachTuple2", "tail" : "(): Each[(A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple2", "link" : "proptics\/instances\/package$$all$.html#eachTuple2[A]:proptics.typeclass.Each[(A,A),A]", "kind" : "implicit def"}, {"label" : "each", "tail" : "(ev: Each[S, A]): Traversal[S, A]", "member" : "proptics.instances.EachInstances.each", "link" : "proptics\/instances\/package$$all$.html#each[S,A](implicitev:proptics.typeclass.Each[S,A]):proptics.Traversal[S,A]", "kind" : "def"}, {"label" : "eachArraySeq", "tail" : "(): Each[ArraySeq[A], A]", "member" : "proptics.instances.ScalaVersionSpecificEachInstances.eachArraySeq", "link" : "proptics\/instances\/package$$all$.html#eachArraySeq[A]:proptics.typeclass.Each[scala.collection.immutable.ArraySeq[A],A]", "kind" : "implicit final def"}, {"label" : "eachLazyList", "tail" : "(): Each[LazyList[A], A]", "member" : "proptics.instances.ScalaVersionSpecificEachInstances.eachLazyList", "link" : "proptics\/instances\/package$$all$.html#eachLazyList[A]:proptics.typeclass.Each[LazyList[A],A]", "kind" : "implicit final def"}, {"label" : "consChain", "tail" : "(): Cons[Chain[A], A]", "member" : "proptics.instances.ConsInstances.consChain", "link" : "proptics\/instances\/package$$all$.html#consChain[A]:proptics.typeclass.Cons[cats.data.Chain[A],A]", "kind" : "implicit final def"}, {"label" : "consVector", "tail" : "(): Cons[Vector[A], A]", "member" : "proptics.instances.ConsInstances.consVector", "link" : "proptics\/instances\/package$$all$.html#consVector[A]:proptics.typeclass.Cons[Vector[A],A]", "kind" : "implicit final def"}, {"label" : "consList", "tail" : "(): Cons[List[A], A]", "member" : "proptics.instances.ConsInstances.consList", "link" : "proptics\/instances\/package$$all$.html#consList[A]:proptics.typeclass.Cons[List[A],A]", "kind" : "implicit final def"}, {"label" : "consArray", "tail" : "(arg0: ClassTag[A]): Cons[Array[A], A]", "member" : "proptics.instances.ConsInstances.consArray", "link" : "proptics\/instances\/package$$all$.html#consArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Cons[Array[A],A]", "kind" : "implicit final def"}, {"label" : "consString", "tail" : "(): Cons[String, Char]", "member" : "proptics.instances.ConsInstances.consString", "link" : "proptics\/instances\/package$$all$.html#consString:proptics.typeclass.Cons[String,Char]", "kind" : "implicit final def"}, {"label" : "tailOption", "tail" : "(ev: Cons[S, A]): AffineTraversal[S, S]", "member" : "proptics.instances.ConsInstances.tailOption", "link" : "proptics\/instances\/package$$all$.html#tailOption[S,A](implicitev:proptics.typeclass.Cons[S,A]):proptics.AffineTraversal[S,S]", "kind" : "final def"}, {"label" : "headOption", "tail" : "(ev: Cons[S, A]): AffineTraversal[S, A]", "member" : "proptics.instances.ConsInstances.headOption", "link" : "proptics\/instances\/package$$all$.html#headOption[S,A](implicitev:proptics.typeclass.Cons[S,A]):proptics.AffineTraversal[S,A]", "kind" : "final def"}, {"label" : "cons", "tail" : "(ev: Cons[S, A]): Prism[S, (A, S)]", "member" : "proptics.instances.ConsInstances.cons", "link" : "proptics\/instances\/package$$all$.html#cons[S,A](implicitev:proptics.typeclass.Cons[S,A]):proptics.Prism[S,(A,S)]", "kind" : "final def"}, {"label" : "consArraySeq", "tail" : "(): Cons[ArraySeq[A], A]", "member" : "proptics.instances.ScalaVersionSpecificConsInstances.consArraySeq", "link" : "proptics\/instances\/package$$all$.html#consArraySeq[A]:proptics.typeclass.Cons[scala.collection.immutable.ArraySeq[A],A]", "kind" : "implicit final def"}, {"label" : "consLazyList", "tail" : "(): Cons[LazyList[A], A]", "member" : "proptics.instances.ScalaVersionSpecificConsInstances.consLazyList", "link" : "proptics\/instances\/package$$all$.html#consLazyList[A]:proptics.typeclass.Cons[LazyList[A],A]", "kind" : "implicit final def"}, {"label" : "atMap", "tail" : "(): At[Map[K, V], K, V]", "member" : "proptics.instances.AtInstances.atMap", "link" : "proptics\/instances\/package$$all$.html#atMap[K,V]:proptics.typeclass.At[Map[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "atListMap", "tail" : "(): At[ListMap[K, V], K, V]", "member" : "proptics.instances.AtInstances.atListMap", "link" : "proptics\/instances\/package$$all$.html#atListMap[K,V]:proptics.typeclass.At[scala.collection.immutable.ListMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "atSortedMap", "tail" : "(): At[SortedMap[K, V], K, V]", "member" : "proptics.instances.AtInstances.atSortedMap", "link" : "proptics\/instances\/package$$all$.html#atSortedMap[K,V]:proptics.typeclass.At[scala.collection.immutable.SortedMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "atSet", "tail" : "(): At[Set[A], A, Unit]", "member" : "proptics.instances.AtInstances.atSet", "link" : "proptics\/instances\/package$$all$.html#atSet[A]:proptics.typeclass.At[Set[A],A,Unit]", "kind" : "implicit final def"}, {"label" : "atOption", "tail" : "(): At[Option[A], Unit, A]", "member" : "proptics.instances.AtInstances.atOption", "link" : "proptics\/instances\/package$$all$.html#atOption[A]:proptics.typeclass.At[Option[A],Unit,A]", "kind" : "implicit final def"}, {"label" : "remove", "tail" : "(i: I)(s: S)(ev: At[S, I, A]): S", "member" : "proptics.instances.AtInstances.remove", "link" : "proptics\/instances\/package$$all$.html#remove[S,I,A](i:I)(s:S)(implicitev:proptics.typeclass.At[S,I,A]):S", "kind" : "final def"}, {"label" : "at", "tail" : "(i: I)(ev: At[S, I, A]): Lens[S, Option[A]]", "member" : "proptics.instances.AtInstances.at", "link" : "proptics\/instances\/package$$all$.html#at[S,I,A](i:I)(implicitev:proptics.typeclass.At[S,I,A]):proptics.Lens[S,Option[A]]", "kind" : "final def"}, {"label" : "partsOfSellable", "tail" : "(ev: Aux[[α$2$, β$3$](α$2$) => β$3$, [ε$4$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, List[A], List[A], Unit, ε$4$]]): Sellable[[α$7$, β$8$](α$7$) => β$8$, [β$9$, γ$10$, ε$11$]Bazaar[[α$5$, β$6$](α$5$) => β$6$, β$9$, γ$10$, Unit, ε$11$]]", "member" : "proptics.instances.PartsOf.partsOfSellable", "link" : "proptics\/instances\/package$$all$.html#partsOfSellable[A](implicitev:proptics.profunctor.Corepresentable.Aux[[α$2$,β$3$]α$2$=>β$3$,[ε$4$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,List[A],List[A],Unit,ε$4$]]):proptics.internal.Sellable[[α$7$,β$8$]α$7$=>β$8$,[β$9$,γ$10$,ε$11$]proptics.internal.Bazaar[[α$5$,β$6$]α$5$=>β$6$,β$9$,γ$10$,Unit,ε$11$]]", "kind" : "implicit def"}, {"label" : "corepresentableState", "tail" : "(): Aux[[α$20$, β$21$](α$20$) => β$21$, [β$22$]IndexedStateT[Eval, List[C], List[C], β$22$]]", "member" : "proptics.internal.CorepresentableInstances.corepresentableState", "link" : "proptics\/instances\/package$$all$.html#corepresentableState[C]:proptics.profunctor.Corepresentable.Aux[[α$20$,β$21$]α$20$=>β$21$,[β$22$]cats.data.IndexedStateT[cats.Eval,List[C],List[C],β$22$]]", "kind" : "implicit def"}, {"label" : "corepresentableBazaar", "tail" : "(): Aux[[α$2$, β$3$](α$2$) => β$3$, [ε$4$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, List[C], List[D], Unit, ε$4$]]", "member" : "proptics.internal.CorepresentableInstances.corepresentableBazaar", "link" : "proptics\/instances\/package$$all$.html#corepresentableBazaar[C,D]:proptics.profunctor.Corepresentable.Aux[[α$2$,β$3$]α$2$=>β$3$,[ε$4$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,List[C],List[D],Unit,ε$4$]]", "kind" : "implicit def"}, {"label" : "sellableBazaar", "tail" : "(arg0: Profunctor[P], ev1: Aux[P, G]): Sellable[P, [β$0$, γ$1$, ε$2$]Bazaar[P, β$0$, γ$1$, Unit, ε$2$]]", "member" : "proptics.internal.SellableInstances.sellableBazaar", "link" : "proptics\/instances\/package$$all$.html#sellableBazaar[P[_,_],G[_]](implicitevidence$1:cats.arrow.Profunctor[P],implicitev1:proptics.profunctor.Corepresentable.Aux[P,G]):proptics.internal.Sellable[P,[β$0$,γ$1$,ε$2$]proptics.internal.Bazaar[P,β$0$,γ$1$,Unit,ε$2$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$all$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$all$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$all$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$all$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$all$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$all$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$all$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$all$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$all$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$all$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$all$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$all$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$all$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$all$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$all$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$all$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$all$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$all$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$all$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.AllInstances", "trait" : "proptics\/instances\/AllInstances.html", "kind" : "trait", "members_trait" : [{"label" : "traverseWithIndexNonEmptyMap", "tail" : "(arg0: Order[K]): TraverseWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K, β$6$], K]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyMap", "link" : "proptics\/instances\/AllInstances.html#traverseWithIndexNonEmptyMap[K](implicitevidence$2:cats.Order[K]):proptics.indices.TraverseWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K,β$6$],K]", "kind" : "implicit def"}, {"label" : "traverseWithIndexOneAnd", "tail" : "(arg0: Traverse[F]): TraverseWithIndex[[β$4$]OneAnd[F, β$4$], Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexOneAnd", "link" : "proptics\/instances\/AllInstances.html#traverseWithIndexOneAnd[F[_]](implicitevidence$1:cats.Traverse[F]):proptics.indices.TraverseWithIndex[[β$4$]cats.data.OneAnd[F,β$4$],Int]", "kind" : "implicit def"}, {"label" : "traverseWithIndexNonEmptyChain", "tail" : "(): TraverseWithIndex[NonEmptyChain, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyChain", "link" : "proptics\/instances\/AllInstances.html#traverseWithIndexNonEmptyChain:proptics.indices.TraverseWithIndex[cats.data.NonEmptyChain,Int]", "kind" : "implicit final def"}, {"label" : "traverseWithIndexNonEmptyList", "tail" : ": TraverseWithIndex[NonEmptyList, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyList", "link" : "proptics\/instances\/AllInstances.html#traverseWithIndexNonEmptyList:proptics.indices.TraverseWithIndex[cats.data.NonEmptyList,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexNonEmptyVector", "tail" : ": TraverseWithIndex[NonEmptyVector, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyVector", "link" : "proptics\/instances\/AllInstances.html#traverseWithIndexNonEmptyVector:proptics.indices.TraverseWithIndex[cats.data.NonEmptyVector,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexChain", "tail" : ": TraverseWithIndex[Chain, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexChain", "link" : "proptics\/instances\/AllInstances.html#traverseWithIndexChain:proptics.indices.TraverseWithIndex[cats.data.Chain,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexMap", "tail" : "(): TraverseWithIndex[[β$2$]Map[K, β$2$], K]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexMap", "link" : "proptics\/instances\/AllInstances.html#traverseWithIndexMap[K]:proptics.indices.TraverseWithIndex[[β$2$]scala.collection.immutable.Map[K,β$2$],K]", "kind" : "implicit final def"}, {"label" : "traverseWithIndexListMap", "tail" : "(): TraverseWithIndex[[β$0$]ListMap[K, β$0$], K]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexListMap", "link" : "proptics\/instances\/AllInstances.html#traverseWithIndexListMap[K]:proptics.indices.TraverseWithIndex[[β$0$]scala.collection.immutable.ListMap[K,β$0$],K]", "kind" : "implicit final def"}, {"label" : "traverseWithIndexList", "tail" : ": TraverseWithIndex[List, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexList", "link" : "proptics\/instances\/AllInstances.html#traverseWithIndexList:proptics.indices.TraverseWithIndex[List,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexVector", "tail" : ": TraverseWithIndex[Vector, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexVector", "link" : "proptics\/instances\/AllInstances.html#traverseWithIndexVector:proptics.indices.TraverseWithIndex[Vector,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexOption", "tail" : ": TraverseWithIndex[Option, Unit]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexOption", "link" : "proptics\/instances\/AllInstances.html#traverseWithIndexOption:proptics.indices.TraverseWithIndex[Option,Unit]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexArraySeq", "tail" : ": TraverseWithIndex[ArraySeq, Int]", "member" : "proptics.instances.ScalaVersionSpecificTraverseWithIndexInstances.traverseWithIndexArraySeq", "link" : "proptics\/instances\/AllInstances.html#traverseWithIndexArraySeq:proptics.indices.TraverseWithIndex[scala.collection.immutable.ArraySeq,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexLazyList", "tail" : ": TraverseWithIndex[LazyList, Int]", "member" : "proptics.instances.ScalaVersionSpecificTraverseWithIndexInstances.traverseWithIndexLazyList", "link" : "proptics\/instances\/AllInstances.html#traverseWithIndexLazyList:proptics.indices.TraverseWithIndex[LazyList,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexNonEmptyMap", "tail" : "(): FoldableWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K, β$6$], K]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyMap", "link" : "proptics\/instances\/AllInstances.html#foldableWithIndexNonEmptyMap[K]:proptics.indices.FoldableWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K,β$6$],K]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexOneAnd", "tail" : "(arg0: Foldable[F]): FoldableWithIndex[[β$4$]OneAnd[F, β$4$], Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexOneAnd", "link" : "proptics\/instances\/AllInstances.html#foldableWithIndexOneAnd[F[_]](implicitevidence$1:cats.Foldable[F]):proptics.indices.FoldableWithIndex[[β$4$]cats.data.OneAnd[F,β$4$],Int]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexNonEmptyChain", "tail" : ": FoldableWithIndex[NonEmptyChain, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyChain", "link" : "proptics\/instances\/AllInstances.html#foldableWithIndexNonEmptyChain:proptics.indices.FoldableWithIndex[cats.data.NonEmptyChain,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexNonEmptyList", "tail" : ": FoldableWithIndex[NonEmptyList, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyList", "link" : "proptics\/instances\/AllInstances.html#foldableWithIndexNonEmptyList:proptics.indices.FoldableWithIndex[cats.data.NonEmptyList,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexNonEmptyVector", "tail" : ": FoldableWithIndex[NonEmptyVector, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyVector", "link" : "proptics\/instances\/AllInstances.html#foldableWithIndexNonEmptyVector:proptics.indices.FoldableWithIndex[cats.data.NonEmptyVector,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexChain", "tail" : ": FoldableWithIndex[Chain, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexChain", "link" : "proptics\/instances\/AllInstances.html#foldableWithIndexChain:proptics.indices.FoldableWithIndex[cats.data.Chain,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexMap", "tail" : "(): FoldableWithIndex[[β$2$]Map[K, β$2$], K]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexMap", "link" : "proptics\/instances\/AllInstances.html#foldableWithIndexMap[K]:proptics.indices.FoldableWithIndex[[β$2$]scala.collection.immutable.Map[K,β$2$],K]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexListMap", "tail" : "(): FoldableWithIndex[[β$0$]ListMap[K, β$0$], K]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexListMap", "link" : "proptics\/instances\/AllInstances.html#foldableWithIndexListMap[K]:proptics.indices.FoldableWithIndex[[β$0$]scala.collection.immutable.ListMap[K,β$0$],K]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexList", "tail" : ": FoldableWithIndex[List, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexList", "link" : "proptics\/instances\/AllInstances.html#foldableWithIndexList:proptics.indices.FoldableWithIndex[List,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexVector", "tail" : ": FoldableWithIndex[Vector, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexVector", "link" : "proptics\/instances\/AllInstances.html#foldableWithIndexVector:proptics.indices.FoldableWithIndex[Vector,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexOption", "tail" : ": FoldableWithIndex[Option, Unit]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexOption", "link" : "proptics\/instances\/AllInstances.html#foldableWithIndexOption:proptics.indices.FoldableWithIndex[Option,Unit]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexArraySeq", "tail" : ": FoldableWithIndex[ArraySeq, Int]", "member" : "proptics.instances.ScalaVersionSpecificFoldableWithIndexInstances.foldableWithIndexArraySeq", "link" : "proptics\/instances\/AllInstances.html#foldableWithIndexArraySeq:proptics.indices.FoldableWithIndex[collection.compat.immutable.ArraySeq,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexLazyList", "tail" : ": FoldableWithIndex[LazyList, Int]", "member" : "proptics.instances.ScalaVersionSpecificFoldableWithIndexInstances.foldableWithIndexLazyList", "link" : "proptics\/instances\/AllInstances.html#foldableWithIndexLazyList:proptics.indices.FoldableWithIndex[LazyList,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexNonEmptyMap", "tail" : "(arg0: Order[K]): FunctorWithIndex[[β$7$]cats.data.NonEmptyMapImpl.Type[K, β$7$], K]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyMap", "link" : "proptics\/instances\/AllInstances.html#functorWithIndexNonEmptyMap[K](implicitevidence$2:cats.Order[K]):proptics.indices.FunctorWithIndex[[β$7$]cats.data.NonEmptyMapImpl.Type[K,β$7$],K]", "kind" : "implicit final def"}, {"label" : "functorWithIndexOneAnd", "tail" : "(arg0: Traverse[F]): FunctorWithIndex[[β$4$]OneAnd[F, β$4$], Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexOneAnd", "link" : "proptics\/instances\/AllInstances.html#functorWithIndexOneAnd[F[_]](implicitevidence$1:cats.Traverse[F]):proptics.indices.FunctorWithIndex[[β$4$]cats.data.OneAnd[F,β$4$],Int]", "kind" : "implicit final def"}, {"label" : "functorWithIndexNonEmptyChain", "tail" : ": FunctorWithIndex[NonEmptyChain, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyChain", "link" : "proptics\/instances\/AllInstances.html#functorWithIndexNonEmptyChain:proptics.indices.FunctorWithIndex[cats.data.NonEmptyChain,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexChain", "tail" : ": FunctorWithIndex[Chain, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexChain", "link" : "proptics\/instances\/AllInstances.html#functorWithIndexChain:proptics.indices.FunctorWithIndex[cats.data.Chain,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexNonEmptyList", "tail" : ": FunctorWithIndex[NonEmptyList, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyList", "link" : "proptics\/instances\/AllInstances.html#functorWithIndexNonEmptyList:proptics.indices.FunctorWithIndex[cats.data.NonEmptyList,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexNonEmptyVector", "tail" : ": FunctorWithIndex[NonEmptyVector, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyVector", "link" : "proptics\/instances\/AllInstances.html#functorWithIndexNonEmptyVector:proptics.indices.FunctorWithIndex[cats.data.NonEmptyVector,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexMap", "tail" : "(): FunctorWithIndex[[β$2$]Map[K, β$2$], K]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexMap", "link" : "proptics\/instances\/AllInstances.html#functorWithIndexMap[K]:proptics.indices.FunctorWithIndex[[β$2$]scala.collection.immutable.Map[K,β$2$],K]", "kind" : "implicit final def"}, {"label" : "functorWithIndexListMap", "tail" : "(): FunctorWithIndex[[β$0$]ListMap[K, β$0$], K]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexListMap", "link" : "proptics\/instances\/AllInstances.html#functorWithIndexListMap[K]:proptics.indices.FunctorWithIndex[[β$0$]scala.collection.immutable.ListMap[K,β$0$],K]", "kind" : "implicit final def"}, {"label" : "functorWithIndexList", "tail" : ": FunctorWithIndex[List, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexList", "link" : "proptics\/instances\/AllInstances.html#functorWithIndexList:proptics.indices.FunctorWithIndex[List,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexVector", "tail" : ": FunctorWithIndex[Vector, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexVector", "link" : "proptics\/instances\/AllInstances.html#functorWithIndexVector:proptics.indices.FunctorWithIndex[Vector,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexOption", "tail" : ": FunctorWithIndex[Option, Unit]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexOption", "link" : "proptics\/instances\/AllInstances.html#functorWithIndexOption:proptics.indices.FunctorWithIndex[Option,Unit]", "kind" : "implicit final val"}, {"label" : "functorWithIndexArraySeq", "tail" : ": FunctorWithIndex[ArraySeq, Int]", "member" : "proptics.instances.ScalaVersionSpecificFunctorWithIndexInstances.functorWithIndexArraySeq", "link" : "proptics\/instances\/AllInstances.html#functorWithIndexArraySeq:proptics.indices.FunctorWithIndex[collection.compat.immutable.ArraySeq,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexLazyList", "tail" : ": FunctorWithIndex[LazyList, Int]", "member" : "proptics.instances.ScalaVersionSpecificFunctorWithIndexInstances.functorWithIndexLazyList", "link" : "proptics\/instances\/AllInstances.html#functorWithIndexLazyList:proptics.indices.FunctorWithIndex[LazyList,Int]", "kind" : "implicit final val"}, {"label" : "nonEmptyConsOneAnd", "tail" : "(): NonEmptyCons[OneAnd[F, A], A, F[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsOneAnd", "link" : "proptics\/instances\/AllInstances.html#nonEmptyConsOneAnd[F[_],A]:proptics.typeclass.NonEmptyCons[cats.data.OneAnd[F,A],A,F[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsNonEmptyChain", "tail" : "(): NonEmptyCons[NonEmptyChain[A], A, Chain[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsNonEmptyChain", "link" : "proptics\/instances\/AllInstances.html#nonEmptyConsNonEmptyChain[A]:proptics.typeclass.NonEmptyCons[cats.data.NonEmptyChain[A],A,cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsNoneEmptyList", "tail" : "(): NonEmptyCons[NonEmptyList[A], A, List[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsNoneEmptyList", "link" : "proptics\/instances\/AllInstances.html#nonEmptyConsNoneEmptyList[A]:proptics.typeclass.NonEmptyCons[cats.data.NonEmptyList[A],A,List[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsNonEmptyVector", "tail" : "(): NonEmptyCons[NonEmptyVector[A], A, Vector[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsNonEmptyVector", "link" : "proptics\/instances\/AllInstances.html#nonEmptyConsNonEmptyVector[A]:proptics.typeclass.NonEmptyCons[cats.data.NonEmptyVector[A],A,Vector[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple5", "tail" : "(): NonEmptyCons[(A, B, C, D, E), A, (B, C, D, E)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple5", "link" : "proptics\/instances\/AllInstances.html#nonEmptyConsTuple5[A,B,C,D,E]:proptics.typeclass.NonEmptyCons[(A,B,C,D,E),A,(B,C,D,E)]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple4", "tail" : "(): NonEmptyCons[(A, B, C, D), A, (B, C, D)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple4", "link" : "proptics\/instances\/AllInstances.html#nonEmptyConsTuple4[A,B,C,D]:proptics.typeclass.NonEmptyCons[(A,B,C,D),A,(B,C,D)]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple3", "tail" : "(): NonEmptyCons[(A, B, C), A, (B, C)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple3", "link" : "proptics\/instances\/AllInstances.html#nonEmptyConsTuple3[A,B,C]:proptics.typeclass.NonEmptyCons[(A,B,C),A,(B,C)]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple2", "tail" : "(): NonEmptyCons[(A, B), A, B]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple2", "link" : "proptics\/instances\/AllInstances.html#nonEmptyConsTuple2[A,B]:proptics.typeclass.NonEmptyCons[(A,B),A,B]", "kind" : "implicit def"}, {"label" : "tail", "tail" : "(ev: NonEmptyCons[S, H, T]): Lens[S, T]", "member" : "proptics.instances.NonEmptyConsInstances.tail", "link" : "proptics\/instances\/AllInstances.html#tail[S,H,T](implicitev:proptics.typeclass.NonEmptyCons[S,H,T]):proptics.Lens[S,T]", "kind" : "final def"}, {"label" : "head", "tail" : "(ev: NonEmptyCons[S, H, T]): Lens[S, H]", "member" : "proptics.instances.NonEmptyConsInstances.head", "link" : "proptics\/instances\/AllInstances.html#head[S,H,T](implicitev:proptics.typeclass.NonEmptyCons[S,H,T]):proptics.Lens[S,H]", "kind" : "final def"}, {"label" : "nonEmptyCons", "tail" : "(ev: NonEmptyCons[S, H, T]): Iso[S, (H, T)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyCons", "link" : "proptics\/instances\/AllInstances.html#nonEmptyCons[S,H,T](implicitev:proptics.typeclass.NonEmptyCons[S,H,T]):proptics.Iso[S,(H,T)]", "kind" : "final def"}, {"label" : "vectorStripSuffix", "tail" : "(qs: Vector[A])(xs0: Vector[A])(arg0: Eq[A]): Option[Vector[A]]", "member" : "proptics.instances.SuffixedInstances.vectorStripSuffix", "link" : "proptics\/instances\/AllInstances.html#vectorStripSuffix[A](qs:Vector[A])(xs0:Vector[A])(implicitevidence$14:cats.Eq[A]):Option[Vector[A]]", "kind" : "def"}, {"label" : "suffixedOneAnd", "tail" : "(arg0: Alternative[F], arg1: Foldable[F], arg2: Eq[A], ev: Suffixed[F[A], F[A]]): Suffixed[OneAnd[F, A], F[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedOneAnd", "link" : "proptics\/instances\/AllInstances.html#suffixedOneAnd[F[_],A](implicitevidence$9:cats.Alternative[F],implicitevidence$10:cats.Foldable[F],implicitevidence$11:cats.Eq[A],implicitev:proptics.typeclass.Suffixed[F[A],F[A]]):proptics.typeclass.Suffixed[cats.data.OneAnd[F,A],F[A]]", "kind" : "implicit final def"}, {"label" : "suffixedNonEmptyChain", "tail" : "(arg0: Eq[A]): Suffixed[NonEmptyChain[A], Chain[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedNonEmptyChain", "link" : "proptics\/instances\/AllInstances.html#suffixedNonEmptyChain[A](implicitevidence$8:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.NonEmptyChain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "suffixedNonEmptyList", "tail" : "(arg0: Eq[A]): Suffixed[NonEmptyList[A], List[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedNonEmptyList", "link" : "proptics\/instances\/AllInstances.html#suffixedNonEmptyList[A](implicitevidence$7:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.NonEmptyList[A],List[A]]", "kind" : "implicit final def"}, {"label" : "suffixedNonEmptyVector", "tail" : "(arg0: Eq[A]): Suffixed[NonEmptyVector[A], Vector[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedNonEmptyVector", "link" : "proptics\/instances\/AllInstances.html#suffixedNonEmptyVector[A](implicitevidence$6:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.NonEmptyVector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "suffixedChain", "tail" : "(arg0: Eq[A]): Suffixed[Chain[A], Chain[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedChain", "link" : "proptics\/instances\/AllInstances.html#suffixedChain[A](implicitevidence$5:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.Chain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "suffixedList", "tail" : "(arg0: Eq[A]): Suffixed[List[A], List[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedList", "link" : "proptics\/instances\/AllInstances.html#suffixedList[A](implicitevidence$4:cats.Eq[A]):proptics.typeclass.Suffixed[List[A],List[A]]", "kind" : "implicit final def"}, {"label" : "suffixedVector", "tail" : "(arg0: Eq[A]): Suffixed[Vector[A], Vector[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedVector", "link" : "proptics\/instances\/AllInstances.html#suffixedVector[A](implicitevidence$3:cats.Eq[A]):proptics.typeclass.Suffixed[Vector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "suffixedArray", "tail" : "(arg0: Eq[A], arg1: ClassTag[A]): Suffixed[Array[A], Array[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedArray", "link" : "proptics\/instances\/AllInstances.html#suffixedArray[A](implicitevidence$1:cats.Eq[A],implicitevidence$2:scala.reflect.ClassTag[A]):proptics.typeclass.Suffixed[Array[A],Array[A]]", "kind" : "implicit final def"}, {"label" : "suffixedString", "tail" : "(): Suffixed[String, String]", "member" : "proptics.instances.SuffixedInstances.suffixedString", "link" : "proptics\/instances\/AllInstances.html#suffixedString:proptics.typeclass.Suffixed[String,String]", "kind" : "implicit final def"}, {"label" : "suffixed", "tail" : "(s: S)(ev: Suffixed[S, T]): Prism[S, T]", "member" : "proptics.instances.SuffixedInstances.suffixed", "link" : "proptics\/instances\/AllInstances.html#suffixed[S,T](s:S)(implicitev:proptics.typeclass.Suffixed[S,T]):proptics.Prism[S,T]", "kind" : "final def"}, {"label" : "suffixedArraySeq", "tail" : "(arg0: Eq[A], arg1: ClassTag[A]): Suffixed[ArraySeq[A], ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificSuffixedInstances.suffixedArraySeq", "link" : "proptics\/instances\/AllInstances.html#suffixedArraySeq[A](implicitevidence$2:cats.Eq[A],implicitevidence$3:scala.reflect.ClassTag[A]):proptics.typeclass.Suffixed[collection.compat.immutable.ArraySeq[A],collection.compat.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "suffixedLazyList", "tail" : "(arg0: Eq[A]): Suffixed[LazyList[A], LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificSuffixedInstances.suffixedLazyList", "link" : "proptics\/instances\/AllInstances.html#suffixedLazyList[A](implicitevidence$1:cats.Eq[A]):proptics.typeclass.Suffixed[LazyList[A],LazyList[A]]", "kind" : "implicit final def"}, {"label" : "prefixedOneAnd", "tail" : "(arg0: Alternative[F], arg1: Eq[A], ev: Prefixed[F[A], F[A]]): Prefixed[OneAnd[F, A], F[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedOneAnd", "link" : "proptics\/instances\/AllInstances.html#prefixedOneAnd[F[_],A](implicitevidence$9:cats.Alternative[F],implicitevidence$10:cats.Eq[A],implicitev:proptics.typeclass.Prefixed[F[A],F[A]]):proptics.typeclass.Prefixed[cats.data.OneAnd[F,A],F[A]]", "kind" : "implicit final def"}, {"label" : "prefixedNonEmptyChain", "tail" : "(arg0: Eq[A]): Prefixed[NonEmptyChain[A], Chain[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedNonEmptyChain", "link" : "proptics\/instances\/AllInstances.html#prefixedNonEmptyChain[A](implicitevidence$8:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.NonEmptyChain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "prefixedNonEmptyList", "tail" : "(arg0: Eq[A]): Prefixed[NonEmptyList[A], List[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedNonEmptyList", "link" : "proptics\/instances\/AllInstances.html#prefixedNonEmptyList[A](implicitevidence$7:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.NonEmptyList[A],List[A]]", "kind" : "implicit final def"}, {"label" : "prefixedNonEmptyVector", "tail" : "(arg0: Eq[A]): Prefixed[NonEmptyVector[A], Vector[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedNonEmptyVector", "link" : "proptics\/instances\/AllInstances.html#prefixedNonEmptyVector[A](implicitevidence$6:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.NonEmptyVector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "prefixedChain", "tail" : "(arg0: Eq[A]): Prefixed[Chain[A], Chain[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedChain", "link" : "proptics\/instances\/AllInstances.html#prefixedChain[A](implicitevidence$5:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.Chain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "prefixedList", "tail" : "(arg0: Eq[A]): Prefixed[List[A], List[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedList", "link" : "proptics\/instances\/AllInstances.html#prefixedList[A](implicitevidence$4:cats.Eq[A]):proptics.typeclass.Prefixed[List[A],List[A]]", "kind" : "implicit final def"}, {"label" : "prefixedVector", "tail" : "(arg0: Eq[A]): Prefixed[Vector[A], Vector[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedVector", "link" : "proptics\/instances\/AllInstances.html#prefixedVector[A](implicitevidence$3:cats.Eq[A]):proptics.typeclass.Prefixed[Vector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "prefixedArray", "tail" : "(arg0: Eq[A], arg1: ClassTag[A]): Prefixed[Array[A], Array[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedArray", "link" : "proptics\/instances\/AllInstances.html#prefixedArray[A](implicitevidence$1:cats.Eq[A],implicitevidence$2:scala.reflect.ClassTag[A]):proptics.typeclass.Prefixed[Array[A],Array[A]]", "kind" : "implicit final def"}, {"label" : "prefixedString", "tail" : "(): Prefixed[String, String]", "member" : "proptics.instances.PrefixedInstances.prefixedString", "link" : "proptics\/instances\/AllInstances.html#prefixedString:proptics.typeclass.Prefixed[String,String]", "kind" : "implicit final def"}, {"label" : "prefixed", "tail" : "(s: S)(ev: Prefixed[S, T]): Prism[S, T]", "member" : "proptics.instances.PrefixedInstances.prefixed", "link" : "proptics\/instances\/AllInstances.html#prefixed[S,T](s:S)(implicitev:proptics.typeclass.Prefixed[S,T]):proptics.Prism[S,T]", "kind" : "final def"}, {"label" : "prefixedArraySeq", "tail" : "(arg0: Eq[A]): Prefixed[ArraySeq[A], ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificPrefixedInstances.prefixedArraySeq", "link" : "proptics\/instances\/AllInstances.html#prefixedArraySeq[A](implicitevidence$2:cats.Eq[A]):proptics.typeclass.Prefixed[scala.collection.immutable.ArraySeq[A],scala.collection.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "prefixedLazyList", "tail" : "(arg0: Eq[A]): Prefixed[LazyList[A], LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificPrefixedInstances.prefixedLazyList", "link" : "proptics\/instances\/AllInstances.html#prefixedLazyList[A](implicitevidence$1:cats.Eq[A]):proptics.typeclass.Prefixed[LazyList[A],LazyList[A]]", "kind" : "implicit final def"}, {"label" : "reverseNonEmptyChain", "tail" : "(): Reverse[NonEmptyChain[A], NonEmptyChain[A]]", "member" : "proptics.instances.ReverseInstances.reverseNonEmptyChain", "link" : "proptics\/instances\/AllInstances.html#reverseNonEmptyChain[A]:proptics.typeclass.Reverse[cats.data.NonEmptyChain[A],cats.data.NonEmptyChain[A]]", "kind" : "implicit final def"}, {"label" : "reverseNonEmptyList", "tail" : "(): Reverse[NonEmptyList[A], NonEmptyList[A]]", "member" : "proptics.instances.ReverseInstances.reverseNonEmptyList", "link" : "proptics\/instances\/AllInstances.html#reverseNonEmptyList[A]:proptics.typeclass.Reverse[cats.data.NonEmptyList[A],cats.data.NonEmptyList[A]]", "kind" : "implicit final def"}, {"label" : "reverseNonEmptyVector", "tail" : "(): Reverse[NonEmptyVector[A], NonEmptyVector[A]]", "member" : "proptics.instances.ReverseInstances.reverseNonEmptyVector", "link" : "proptics\/instances\/AllInstances.html#reverseNonEmptyVector[A]:proptics.typeclass.Reverse[cats.data.NonEmptyVector[A],cats.data.NonEmptyVector[A]]", "kind" : "implicit final def"}, {"label" : "reverseChain", "tail" : "(): Reverse[Chain[A], Chain[A]]", "member" : "proptics.instances.ReverseInstances.reverseChain", "link" : "proptics\/instances\/AllInstances.html#reverseChain[A]:proptics.typeclass.Reverse[cats.data.Chain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "reverseList", "tail" : "(): Reverse[List[A], List[A]]", "member" : "proptics.instances.ReverseInstances.reverseList", "link" : "proptics\/instances\/AllInstances.html#reverseList[A]:proptics.typeclass.Reverse[List[A],List[A]]", "kind" : "implicit final def"}, {"label" : "reverseVector", "tail" : "(): Reverse[Vector[A], Vector[A]]", "member" : "proptics.instances.ReverseInstances.reverseVector", "link" : "proptics\/instances\/AllInstances.html#reverseVector[A]:proptics.typeclass.Reverse[Vector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "reverseArray", "tail" : "(arg0: ClassTag[A]): Reverse[Array[A], Array[A]]", "member" : "proptics.instances.ReverseInstances.reverseArray", "link" : "proptics\/instances\/AllInstances.html#reverseArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Reverse[Array[A],Array[A]]", "kind" : "implicit final def"}, {"label" : "reverseTuple5", "tail" : "(): Reverse[(A, B, C, D, E), (E, D, C, B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple5", "link" : "proptics\/instances\/AllInstances.html#reverseTuple5[A,B,C,D,E]:proptics.typeclass.Reverse[(A,B,C,D,E),(E,D,C,B,A)]", "kind" : "implicit def"}, {"label" : "reverseTuple4", "tail" : "(): Reverse[(A, B, C, D), (D, C, B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple4", "link" : "proptics\/instances\/AllInstances.html#reverseTuple4[A,B,C,D]:proptics.typeclass.Reverse[(A,B,C,D),(D,C,B,A)]", "kind" : "implicit def"}, {"label" : "reverseTuple3", "tail" : "(): Reverse[(A, B, C), (C, B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple3", "link" : "proptics\/instances\/AllInstances.html#reverseTuple3[A,B,C]:proptics.typeclass.Reverse[(A,B,C),(C,B,A)]", "kind" : "implicit def"}, {"label" : "reverseTuple2", "tail" : "(): Reverse[(A, B), (B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple2", "link" : "proptics\/instances\/AllInstances.html#reverseTuple2[A,B]:proptics.typeclass.Reverse[(A,B),(B,A)]", "kind" : "implicit def"}, {"label" : "reverseString", "tail" : ": Reverse[String, String]", "member" : "proptics.instances.ReverseInstances.reverseString", "link" : "proptics\/instances\/AllInstances.html#reverseString:proptics.typeclass.Reverse[String,String]", "kind" : "implicit final val"}, {"label" : "reverse", "tail" : "(ev: Reverse[S, T]): Iso[S, T]", "member" : "proptics.instances.ReverseInstances.reverse", "link" : "proptics\/instances\/AllInstances.html#reverse[S,T](implicitev:proptics.typeclass.Reverse[S,T]):proptics.Iso[S,T]", "kind" : "final def"}, {"label" : "reverseArraySeq", "tail" : "(arg0: ClassTag[A]): Reverse[ArraySeq[A], ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificReverseInstances.reverseArraySeq", "link" : "proptics\/instances\/AllInstances.html#reverseArraySeq[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Reverse[collection.compat.immutable.ArraySeq[A],collection.compat.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "reverseLazyList", "tail" : "(): Reverse[LazyList[A], LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificReverseInstances.reverseLazyList", "link" : "proptics\/instances\/AllInstances.html#reverseLazyList[A]:proptics.typeclass.Reverse[LazyList[A],LazyList[A]]", "kind" : "implicit final def"}, {"label" : "field5Tuple5", "tail" : "(): Field5[(A, B, C, D, E), E]", "member" : "proptics.instances.Field5Instances.field5Tuple5", "link" : "proptics\/instances\/AllInstances.html#field5Tuple5[A,B,C,D,E]:proptics.typeclass.Field5[(A,B,C,D,E),E]", "kind" : "implicit final def"}, {"label" : "fifth", "tail" : "(ev: Field5[(A, B, C, D, E), E]): Lens[(A, B, C, D, E), E]", "member" : "proptics.instances.Field5Instances.fifth", "link" : "proptics\/instances\/AllInstances.html#fifth[A,B,C,D,E](implicitev:proptics.typeclass.Field5[(A,B,C,D,E),E]):proptics.Lens[(A,B,C,D,E),E]", "kind" : "final def"}, {"label" : "field4Tuple5", "tail" : "(): Field4[(A, B, C, D, E), D]", "member" : "proptics.instances.Field4Instances.field4Tuple5", "link" : "proptics\/instances\/AllInstances.html#field4Tuple5[A,B,C,D,E]:proptics.typeclass.Field4[(A,B,C,D,E),D]", "kind" : "implicit final def"}, {"label" : "field4Tuple4", "tail" : "(): Field4[(A, B, C, D), D]", "member" : "proptics.instances.Field4Instances.field4Tuple4", "link" : "proptics\/instances\/AllInstances.html#field4Tuple4[A,B,C,D]:proptics.typeclass.Field4[(A,B,C,D),D]", "kind" : "implicit final def"}, {"label" : "fourth", "tail" : "(ev: Field4[(A, B, C, D), D]): Lens[(A, B, C, D), D]", "member" : "proptics.instances.Field4Instances.fourth", "link" : "proptics\/instances\/AllInstances.html#fourth[A,B,C,D](implicitev:proptics.typeclass.Field4[(A,B,C,D),D]):proptics.Lens[(A,B,C,D),D]", "kind" : "final def"}, {"label" : "field3Tuple5", "tail" : "(): Field3[(A, B, C, D, E), C]", "member" : "proptics.instances.Field3Instances.field3Tuple5", "link" : "proptics\/instances\/AllInstances.html#field3Tuple5[A,B,C,D,E]:proptics.typeclass.Field3[(A,B,C,D,E),C]", "kind" : "implicit final def"}, {"label" : "field3Tuple4", "tail" : "(): Field3[(A, B, C, D), C]", "member" : "proptics.instances.Field3Instances.field3Tuple4", "link" : "proptics\/instances\/AllInstances.html#field3Tuple4[A,B,C,D]:proptics.typeclass.Field3[(A,B,C,D),C]", "kind" : "implicit final def"}, {"label" : "field3Tuple3", "tail" : "(): Field3[(A, B, C), C]", "member" : "proptics.instances.Field3Instances.field3Tuple3", "link" : "proptics\/instances\/AllInstances.html#field3Tuple3[A,B,C]:proptics.typeclass.Field3[(A,B,C),C]", "kind" : "implicit final def"}, {"label" : "third", "tail" : "(ev: Field3[(A, B, C), C]): Lens[(A, B, C), C]", "member" : "proptics.instances.Field3Instances.third", "link" : "proptics\/instances\/AllInstances.html#third[A,B,C](implicitev:proptics.typeclass.Field3[(A,B,C),C]):proptics.Lens[(A,B,C),C]", "kind" : "final def"}, {"label" : "field2Tuple5", "tail" : "(): Field2[(A, B, C, D, E), B]", "member" : "proptics.instances.Field2Instances.field2Tuple5", "link" : "proptics\/instances\/AllInstances.html#field2Tuple5[A,B,C,D,E]:proptics.typeclass.Field2[(A,B,C,D,E),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple4", "tail" : "(): Field2[(A, B, C, D), B]", "member" : "proptics.instances.Field2Instances.field2Tuple4", "link" : "proptics\/instances\/AllInstances.html#field2Tuple4[A,B,C,D]:proptics.typeclass.Field2[(A,B,C,D),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple3", "tail" : "(): Field2[(A, B, C), B]", "member" : "proptics.instances.Field2Instances.field2Tuple3", "link" : "proptics\/instances\/AllInstances.html#field2Tuple3[A,B,C]:proptics.typeclass.Field2[(A,B,C),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple2", "tail" : "(): Field2[(A, B), B]", "member" : "proptics.instances.Field2Instances.field2Tuple2", "link" : "proptics\/instances\/AllInstances.html#field2Tuple2[A,B]:proptics.typeclass.Field2[(A,B),B]", "kind" : "implicit final def"}, {"label" : "second", "tail" : "(ev: Field2[(A, B), B]): Lens[(A, B), B]", "member" : "proptics.instances.Field2Instances.second", "link" : "proptics\/instances\/AllInstances.html#second[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.Lens[(A,B),B]", "kind" : "final def"}, {"label" : "field1Tuple5", "tail" : "(): Field1[(A, B, C, D, E), A]", "member" : "proptics.instances.Field1Instances.field1Tuple5", "link" : "proptics\/instances\/AllInstances.html#field1Tuple5[A,B,C,D,E]:proptics.typeclass.Field1[(A,B,C,D,E),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple4", "tail" : "(): Field1[(A, B, C, D), A]", "member" : "proptics.instances.Field1Instances.field1Tuple4", "link" : "proptics\/instances\/AllInstances.html#field1Tuple4[A,B,C,D]:proptics.typeclass.Field1[(A,B,C,D),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple3", "tail" : "(): Field1[(A, B, C), A]", "member" : "proptics.instances.Field1Instances.field1Tuple3", "link" : "proptics\/instances\/AllInstances.html#field1Tuple3[A,B,C]:proptics.typeclass.Field1[(A,B,C),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple2", "tail" : "(): Field1[(A, B), A]", "member" : "proptics.instances.Field1Instances.field1Tuple2", "link" : "proptics\/instances\/AllInstances.html#field1Tuple2[A,B]:proptics.typeclass.Field1[(A,B),A]", "kind" : "implicit final def"}, {"label" : "first", "tail" : "(ev: Field1[(A, B), A]): Lens[(A, B), A]", "member" : "proptics.instances.Field1Instances.first", "link" : "proptics\/instances\/AllInstances.html#first[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.Lens[(A,B),A]", "kind" : "final def"}, {"label" : "indexNonEmptyChain", "tail" : "(): Index[NonEmptyChain[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexNonEmptyChain", "link" : "proptics\/instances\/AllInstances.html#indexNonEmptyChain[A]:proptics.typeclass.Index[cats.data.NonEmptyChain[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexNonEmptyMap", "tail" : "(): Index[NonEmptyMap[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexNonEmptyMap", "link" : "proptics\/instances\/AllInstances.html#indexNonEmptyMap[K,V]:proptics.typeclass.Index[cats.data.NonEmptyMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexNonEmptySet", "tail" : "(arg0: Eq[A]): Index[NonEmptySet[A], A, Unit]", "member" : "proptics.instances.IndexInstances.indexNonEmptySet", "link" : "proptics\/instances\/AllInstances.html#indexNonEmptySet[A](implicitevidence$3:cats.Eq[A]):proptics.typeclass.Index[cats.data.NonEmptySet[A],A,Unit]", "kind" : "implicit final def"}, {"label" : "indexNonEmptyList", "tail" : "(): Index[NonEmptyList[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexNonEmptyList", "link" : "proptics\/instances\/AllInstances.html#indexNonEmptyList[A]:proptics.typeclass.Index[cats.data.NonEmptyList[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexNonEmptyVector", "tail" : "(): Index[NonEmptyVector[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexNonEmptyVector", "link" : "proptics\/instances\/AllInstances.html#indexNonEmptyVector[A]:proptics.typeclass.Index[cats.data.NonEmptyVector[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexChain", "tail" : "(): Index[Chain[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexChain", "link" : "proptics\/instances\/AllInstances.html#indexChain[A]:proptics.typeclass.Index[cats.data.Chain[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexMap", "tail" : "(): Index[Map[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexMap", "link" : "proptics\/instances\/AllInstances.html#indexMap[K,V]:proptics.typeclass.Index[Map[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexSortedMap", "tail" : "(): Index[SortedMap[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexSortedMap", "link" : "proptics\/instances\/AllInstances.html#indexSortedMap[K,V]:proptics.typeclass.Index[scala.collection.immutable.SortedMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexSet", "tail" : "(): Index[Set[A], A, Unit]", "member" : "proptics.instances.IndexInstances.indexSet", "link" : "proptics\/instances\/AllInstances.html#indexSet[A]:proptics.typeclass.Index[Set[A],A,Unit]", "kind" : "implicit final def"}, {"label" : "indexListMap", "tail" : "(): Index[ListMap[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexListMap", "link" : "proptics\/instances\/AllInstances.html#indexListMap[K,V]:proptics.typeclass.Index[scala.collection.immutable.ListMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexList", "tail" : "(): Index[List[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexList", "link" : "proptics\/instances\/AllInstances.html#indexList[A]:proptics.typeclass.Index[List[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexVector", "tail" : "(): Index[Vector[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexVector", "link" : "proptics\/instances\/AllInstances.html#indexVector[A]:proptics.typeclass.Index[Vector[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexArray", "tail" : "(arg0: ClassTag[A]): Index[Array[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexArray", "link" : "proptics\/instances\/AllInstances.html#indexArray[A](implicitevidence$2:scala.reflect.ClassTag[A]):proptics.typeclass.Index[Array[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexOption", "tail" : "(): Index[Option[A], Unit, A]", "member" : "proptics.instances.IndexInstances.indexOption", "link" : "proptics\/instances\/AllInstances.html#indexOption[A]:proptics.typeclass.Index[Option[A],Unit,A]", "kind" : "implicit final def"}, {"label" : "indexArrow", "tail" : "(arg0: Eq[I]): Index[(I) => A, I, A]", "member" : "proptics.instances.IndexInstances.indexArrow", "link" : "proptics\/instances\/AllInstances.html#indexArrow[I,A](implicitevidence$1:cats.Eq[I]):proptics.typeclass.Index[I=>A,I,A]", "kind" : "implicit final def"}, {"label" : "fromAt", "tail" : "(ev: At[S, I, A]): Index[S, I, A]", "member" : "proptics.instances.IndexInstances.fromAt", "link" : "proptics\/instances\/AllInstances.html#fromAt[S,I,A](implicitev:proptics.typeclass.At[S,I,A]):proptics.typeclass.Index[S,I,A]", "kind" : "final def"}, {"label" : "index", "tail" : "(i: I)(ev: Index[S, I, A]): AffineTraversal[S, A]", "member" : "proptics.instances.IndexInstances.index", "link" : "proptics\/instances\/AllInstances.html#index[S,I,A](i:I)(implicitev:proptics.typeclass.Index[S,I,A]):proptics.AffineTraversal[S,A]", "kind" : "final def"}, {"label" : "indexArraySeq", "tail" : "(): Index[ArraySeq[A], Int, A]", "member" : "proptics.instances.ScalaVersionSpecificIndexInstances.indexArraySeq", "link" : "proptics\/instances\/AllInstances.html#indexArraySeq[A]:proptics.typeclass.Index[scala.collection.immutable.ArraySeq[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexLazyList", "tail" : "(): Index[LazyList[A], Int, A]", "member" : "proptics.instances.ScalaVersionSpecificIndexInstances.indexLazyList", "link" : "proptics\/instances\/AllInstances.html#indexLazyList[A]:proptics.typeclass.Index[scala.collection.immutable.LazyList[A],Int,A]", "kind" : "implicit final def"}, {"label" : "emptyChain", "tail" : "(): Empty[Chain[A]]", "member" : "proptics.instances.EmptyInstances.emptyChain", "link" : "proptics\/instances\/AllInstances.html#emptyChain[A]:proptics.typeclass.Empty[cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "emptySortedMap", "tail" : "(ev: Order[K]): Empty[SortedMap[K, V]]", "member" : "proptics.instances.EmptyInstances.emptySortedMap", "link" : "proptics\/instances\/AllInstances.html#emptySortedMap[K,V](implicitev:cats.Order[K]):proptics.typeclass.Empty[scala.collection.immutable.SortedMap[K,V]]", "kind" : "implicit final def"}, {"label" : "emptyMap", "tail" : "(): Empty[Map[K, V]]", "member" : "proptics.instances.EmptyInstances.emptyMap", "link" : "proptics\/instances\/AllInstances.html#emptyMap[K,V]:proptics.typeclass.Empty[Map[K,V]]", "kind" : "implicit final def"}, {"label" : "emptyListMap", "tail" : "(): Empty[ListMap[K, V]]", "member" : "proptics.instances.EmptyInstances.emptyListMap", "link" : "proptics\/instances\/AllInstances.html#emptyListMap[K,V]:proptics.typeclass.Empty[scala.collection.immutable.ListMap[K,V]]", "kind" : "implicit final def"}, {"label" : "emptySet", "tail" : "(): Empty[Set[A]]", "member" : "proptics.instances.EmptyInstances.emptySet", "link" : "proptics\/instances\/AllInstances.html#emptySet[A]:proptics.typeclass.Empty[Set[A]]", "kind" : "implicit final def"}, {"label" : "emptyVector", "tail" : "(): Empty[Vector[A]]", "member" : "proptics.instances.EmptyInstances.emptyVector", "link" : "proptics\/instances\/AllInstances.html#emptyVector[A]:proptics.typeclass.Empty[Vector[A]]", "kind" : "implicit final def"}, {"label" : "emptyList", "tail" : "(): Empty[List[A]]", "member" : "proptics.instances.EmptyInstances.emptyList", "link" : "proptics\/instances\/AllInstances.html#emptyList[A]:proptics.typeclass.Empty[List[A]]", "kind" : "implicit final def"}, {"label" : "emptyArray", "tail" : "(arg0: ClassTag[A]): Empty[Array[A]]", "member" : "proptics.instances.EmptyInstances.emptyArray", "link" : "proptics\/instances\/AllInstances.html#emptyArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Empty[Array[A]]", "kind" : "implicit final def"}, {"label" : "emptyString", "tail" : ": Empty[String]", "member" : "proptics.instances.EmptyInstances.emptyString", "link" : "proptics\/instances\/AllInstances.html#emptyString:proptics.typeclass.Empty[String]", "kind" : "implicit final val"}, {"label" : "empty", "tail" : "(ev: Empty[S]): Prism[S, Unit]", "member" : "proptics.instances.EmptyInstances.empty", "link" : "proptics\/instances\/AllInstances.html#empty[S](implicitev:proptics.typeclass.Empty[S]):proptics.Prism[S,Unit]", "kind" : "def"}, {"label" : "emptyLazyArraySeq", "tail" : "(arg0: ClassTag[A]): Empty[ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificEmptyInstances.emptyLazyArraySeq", "link" : "proptics\/instances\/AllInstances.html#emptyLazyArraySeq[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Empty[collection.compat.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "emptyLazyList", "tail" : "(): Empty[LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificEmptyInstances.emptyLazyList", "link" : "proptics\/instances\/AllInstances.html#emptyLazyList[A]:proptics.typeclass.Empty[LazyList[A]]", "kind" : "implicit final def"}, {"label" : "eachNonEmptyChain", "tail" : "(): Each[NonEmptyChain[A], A]", "member" : "proptics.instances.EachInstances.eachNonEmptyChain", "link" : "proptics\/instances\/AllInstances.html#eachNonEmptyChain[A]:proptics.typeclass.Each[cats.data.NonEmptyChain[A],A]", "kind" : "implicit def"}, {"label" : "eachNonEmptyList", "tail" : "(): Each[NonEmptyList[A], A]", "member" : "proptics.instances.EachInstances.eachNonEmptyList", "link" : "proptics\/instances\/AllInstances.html#eachNonEmptyList[A]:proptics.typeclass.Each[cats.data.NonEmptyList[A],A]", "kind" : "implicit def"}, {"label" : "eachNonEmptyVector", "tail" : "(): Each[NonEmptyVector[A], A]", "member" : "proptics.instances.EachInstances.eachNonEmptyVector", "link" : "proptics\/instances\/AllInstances.html#eachNonEmptyVector[A]:proptics.typeclass.Each[cats.data.NonEmptyVector[A],A]", "kind" : "implicit def"}, {"label" : "eachOneAnd", "tail" : "(ev0: Each[G[A], A]): Each[OneAnd[G, A], A]", "member" : "proptics.instances.EachInstances.eachOneAnd", "link" : "proptics\/instances\/AllInstances.html#eachOneAnd[G[_],A](implicitev0:proptics.typeclass.Each[G[A],A]):proptics.typeclass.Each[cats.data.OneAnd[G,A],A]", "kind" : "implicit def"}, {"label" : "eachChain", "tail" : "(): Each[Chain[A], A]", "member" : "proptics.instances.EachInstances.eachChain", "link" : "proptics\/instances\/AllInstances.html#eachChain[A]:proptics.typeclass.Each[cats.data.Chain[A],A]", "kind" : "implicit def"}, {"label" : "eachSortedMap", "tail" : "(arg0: Order[K]): Each[SortedMap[K, V], V]", "member" : "proptics.instances.EachInstances.eachSortedMap", "link" : "proptics\/instances\/AllInstances.html#eachSortedMap[K,V](implicitevidence$1:cats.Order[K]):proptics.typeclass.Each[scala.collection.immutable.SortedMap[K,V],V]", "kind" : "implicit def"}, {"label" : "eachListMap", "tail" : "(): Each[ListMap[K, V], V]", "member" : "proptics.instances.EachInstances.eachListMap", "link" : "proptics\/instances\/AllInstances.html#eachListMap[K,V]:proptics.typeclass.Each[scala.collection.immutable.ListMap[K,V],V]", "kind" : "implicit final def"}, {"label" : "eachList", "tail" : "(): Each[List[A], A]", "member" : "proptics.instances.EachInstances.eachList", "link" : "proptics\/instances\/AllInstances.html#eachList[A]:proptics.typeclass.Each[List[A],A]", "kind" : "implicit final def"}, {"label" : "eachVector", "tail" : "(): Each[Vector[A], A]", "member" : "proptics.instances.EachInstances.eachVector", "link" : "proptics\/instances\/AllInstances.html#eachVector[A]:proptics.typeclass.Each[Vector[A],A]", "kind" : "implicit final def"}, {"label" : "eachString", "tail" : "(): Each[String, Char]", "member" : "proptics.instances.EachInstances.eachString", "link" : "proptics\/instances\/AllInstances.html#eachString:proptics.typeclass.Each[String,Char]", "kind" : "implicit final def"}, {"label" : "eachTuple5", "tail" : "(): Each[(A, A, A, A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple5", "link" : "proptics\/instances\/AllInstances.html#eachTuple5[A]:proptics.typeclass.Each[(A,A,A,A,A),A]", "kind" : "implicit def"}, {"label" : "eachTuple4", "tail" : "(): Each[(A, A, A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple4", "link" : "proptics\/instances\/AllInstances.html#eachTuple4[A]:proptics.typeclass.Each[(A,A,A,A),A]", "kind" : "implicit def"}, {"label" : "eachTuple3", "tail" : "(): Each[(A, A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple3", "link" : "proptics\/instances\/AllInstances.html#eachTuple3[A]:proptics.typeclass.Each[(A,A,A),A]", "kind" : "implicit def"}, {"label" : "eachTuple2", "tail" : "(): Each[(A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple2", "link" : "proptics\/instances\/AllInstances.html#eachTuple2[A]:proptics.typeclass.Each[(A,A),A]", "kind" : "implicit def"}, {"label" : "each", "tail" : "(ev: Each[S, A]): Traversal[S, A]", "member" : "proptics.instances.EachInstances.each", "link" : "proptics\/instances\/AllInstances.html#each[S,A](implicitev:proptics.typeclass.Each[S,A]):proptics.Traversal[S,A]", "kind" : "def"}, {"label" : "eachArraySeq", "tail" : "(): Each[ArraySeq[A], A]", "member" : "proptics.instances.ScalaVersionSpecificEachInstances.eachArraySeq", "link" : "proptics\/instances\/AllInstances.html#eachArraySeq[A]:proptics.typeclass.Each[scala.collection.immutable.ArraySeq[A],A]", "kind" : "implicit final def"}, {"label" : "eachLazyList", "tail" : "(): Each[LazyList[A], A]", "member" : "proptics.instances.ScalaVersionSpecificEachInstances.eachLazyList", "link" : "proptics\/instances\/AllInstances.html#eachLazyList[A]:proptics.typeclass.Each[LazyList[A],A]", "kind" : "implicit final def"}, {"label" : "consChain", "tail" : "(): Cons[Chain[A], A]", "member" : "proptics.instances.ConsInstances.consChain", "link" : "proptics\/instances\/AllInstances.html#consChain[A]:proptics.typeclass.Cons[cats.data.Chain[A],A]", "kind" : "implicit final def"}, {"label" : "consVector", "tail" : "(): Cons[Vector[A], A]", "member" : "proptics.instances.ConsInstances.consVector", "link" : "proptics\/instances\/AllInstances.html#consVector[A]:proptics.typeclass.Cons[Vector[A],A]", "kind" : "implicit final def"}, {"label" : "consList", "tail" : "(): Cons[List[A], A]", "member" : "proptics.instances.ConsInstances.consList", "link" : "proptics\/instances\/AllInstances.html#consList[A]:proptics.typeclass.Cons[List[A],A]", "kind" : "implicit final def"}, {"label" : "consArray", "tail" : "(arg0: ClassTag[A]): Cons[Array[A], A]", "member" : "proptics.instances.ConsInstances.consArray", "link" : "proptics\/instances\/AllInstances.html#consArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Cons[Array[A],A]", "kind" : "implicit final def"}, {"label" : "consString", "tail" : "(): Cons[String, Char]", "member" : "proptics.instances.ConsInstances.consString", "link" : "proptics\/instances\/AllInstances.html#consString:proptics.typeclass.Cons[String,Char]", "kind" : "implicit final def"}, {"label" : "tailOption", "tail" : "(ev: Cons[S, A]): AffineTraversal[S, S]", "member" : "proptics.instances.ConsInstances.tailOption", "link" : "proptics\/instances\/AllInstances.html#tailOption[S,A](implicitev:proptics.typeclass.Cons[S,A]):proptics.AffineTraversal[S,S]", "kind" : "final def"}, {"label" : "headOption", "tail" : "(ev: Cons[S, A]): AffineTraversal[S, A]", "member" : "proptics.instances.ConsInstances.headOption", "link" : "proptics\/instances\/AllInstances.html#headOption[S,A](implicitev:proptics.typeclass.Cons[S,A]):proptics.AffineTraversal[S,A]", "kind" : "final def"}, {"label" : "cons", "tail" : "(ev: Cons[S, A]): Prism[S, (A, S)]", "member" : "proptics.instances.ConsInstances.cons", "link" : "proptics\/instances\/AllInstances.html#cons[S,A](implicitev:proptics.typeclass.Cons[S,A]):proptics.Prism[S,(A,S)]", "kind" : "final def"}, {"label" : "consArraySeq", "tail" : "(): Cons[ArraySeq[A], A]", "member" : "proptics.instances.ScalaVersionSpecificConsInstances.consArraySeq", "link" : "proptics\/instances\/AllInstances.html#consArraySeq[A]:proptics.typeclass.Cons[scala.collection.immutable.ArraySeq[A],A]", "kind" : "implicit final def"}, {"label" : "consLazyList", "tail" : "(): Cons[LazyList[A], A]", "member" : "proptics.instances.ScalaVersionSpecificConsInstances.consLazyList", "link" : "proptics\/instances\/AllInstances.html#consLazyList[A]:proptics.typeclass.Cons[LazyList[A],A]", "kind" : "implicit final def"}, {"label" : "atMap", "tail" : "(): At[Map[K, V], K, V]", "member" : "proptics.instances.AtInstances.atMap", "link" : "proptics\/instances\/AllInstances.html#atMap[K,V]:proptics.typeclass.At[Map[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "atListMap", "tail" : "(): At[ListMap[K, V], K, V]", "member" : "proptics.instances.AtInstances.atListMap", "link" : "proptics\/instances\/AllInstances.html#atListMap[K,V]:proptics.typeclass.At[scala.collection.immutable.ListMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "atSortedMap", "tail" : "(): At[SortedMap[K, V], K, V]", "member" : "proptics.instances.AtInstances.atSortedMap", "link" : "proptics\/instances\/AllInstances.html#atSortedMap[K,V]:proptics.typeclass.At[scala.collection.immutable.SortedMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "atSet", "tail" : "(): At[Set[A], A, Unit]", "member" : "proptics.instances.AtInstances.atSet", "link" : "proptics\/instances\/AllInstances.html#atSet[A]:proptics.typeclass.At[Set[A],A,Unit]", "kind" : "implicit final def"}, {"label" : "atOption", "tail" : "(): At[Option[A], Unit, A]", "member" : "proptics.instances.AtInstances.atOption", "link" : "proptics\/instances\/AllInstances.html#atOption[A]:proptics.typeclass.At[Option[A],Unit,A]", "kind" : "implicit final def"}, {"label" : "remove", "tail" : "(i: I)(s: S)(ev: At[S, I, A]): S", "member" : "proptics.instances.AtInstances.remove", "link" : "proptics\/instances\/AllInstances.html#remove[S,I,A](i:I)(s:S)(implicitev:proptics.typeclass.At[S,I,A]):S", "kind" : "final def"}, {"label" : "at", "tail" : "(i: I)(ev: At[S, I, A]): Lens[S, Option[A]]", "member" : "proptics.instances.AtInstances.at", "link" : "proptics\/instances\/AllInstances.html#at[S,I,A](i:I)(implicitev:proptics.typeclass.At[S,I,A]):proptics.Lens[S,Option[A]]", "kind" : "final def"}, {"label" : "partsOfSellable", "tail" : "(ev: Aux[[α$2$, β$3$](α$2$) => β$3$, [ε$4$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, List[A], List[A], Unit, ε$4$]]): Sellable[[α$7$, β$8$](α$7$) => β$8$, [β$9$, γ$10$, ε$11$]Bazaar[[α$5$, β$6$](α$5$) => β$6$, β$9$, γ$10$, Unit, ε$11$]]", "member" : "proptics.instances.PartsOf.partsOfSellable", "link" : "proptics\/instances\/AllInstances.html#partsOfSellable[A](implicitev:proptics.profunctor.Corepresentable.Aux[[α$2$,β$3$]α$2$=>β$3$,[ε$4$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,List[A],List[A],Unit,ε$4$]]):proptics.internal.Sellable[[α$7$,β$8$]α$7$=>β$8$,[β$9$,γ$10$,ε$11$]proptics.internal.Bazaar[[α$5$,β$6$]α$5$=>β$6$,β$9$,γ$10$,Unit,ε$11$]]", "kind" : "implicit def"}, {"label" : "corepresentableState", "tail" : "(): Aux[[α$20$, β$21$](α$20$) => β$21$, [β$22$]IndexedStateT[Eval, List[C], List[C], β$22$]]", "member" : "proptics.internal.CorepresentableInstances.corepresentableState", "link" : "proptics\/instances\/AllInstances.html#corepresentableState[C]:proptics.profunctor.Corepresentable.Aux[[α$20$,β$21$]α$20$=>β$21$,[β$22$]cats.data.IndexedStateT[cats.Eval,List[C],List[C],β$22$]]", "kind" : "implicit def"}, {"label" : "corepresentableBazaar", "tail" : "(): Aux[[α$2$, β$3$](α$2$) => β$3$, [ε$4$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, List[C], List[D], Unit, ε$4$]]", "member" : "proptics.internal.CorepresentableInstances.corepresentableBazaar", "link" : "proptics\/instances\/AllInstances.html#corepresentableBazaar[C,D]:proptics.profunctor.Corepresentable.Aux[[α$2$,β$3$]α$2$=>β$3$,[ε$4$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,List[C],List[D],Unit,ε$4$]]", "kind" : "implicit def"}, {"label" : "sellableBazaar", "tail" : "(arg0: Profunctor[P], ev1: Aux[P, G]): Sellable[P, [β$0$, γ$1$, ε$2$]Bazaar[P, β$0$, γ$1$, Unit, ε$2$]]", "member" : "proptics.internal.SellableInstances.sellableBazaar", "link" : "proptics\/instances\/AllInstances.html#sellableBazaar[P[_,_],G[_]](implicitevidence$1:cats.arrow.Profunctor[P],implicitev1:proptics.profunctor.Corepresentable.Aux[P,G]):proptics.internal.Sellable[P,[β$0$,γ$1$,ε$2$]proptics.internal.Bazaar[P,β$0$,γ$1$,Unit,ε$2$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/AllInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/AllInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/AllInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/AllInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/AllInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/AllInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/AllInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/AllInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/AllInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/AllInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/AllInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/AllInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/AllInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/AllInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/AllInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/AllInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/AllInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/AllInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/AllInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.at", "shortDescription" : "", "object" : "proptics\/instances\/package$$at$.html", "members_object" : [{"label" : "atMap", "tail" : "(): At[Map[K, V], K, V]", "member" : "proptics.instances.AtInstances.atMap", "link" : "proptics\/instances\/package$$at$.html#atMap[K,V]:proptics.typeclass.At[Map[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "atListMap", "tail" : "(): At[ListMap[K, V], K, V]", "member" : "proptics.instances.AtInstances.atListMap", "link" : "proptics\/instances\/package$$at$.html#atListMap[K,V]:proptics.typeclass.At[scala.collection.immutable.ListMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "atSortedMap", "tail" : "(): At[SortedMap[K, V], K, V]", "member" : "proptics.instances.AtInstances.atSortedMap", "link" : "proptics\/instances\/package$$at$.html#atSortedMap[K,V]:proptics.typeclass.At[scala.collection.immutable.SortedMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "atSet", "tail" : "(): At[Set[A], A, Unit]", "member" : "proptics.instances.AtInstances.atSet", "link" : "proptics\/instances\/package$$at$.html#atSet[A]:proptics.typeclass.At[Set[A],A,Unit]", "kind" : "implicit final def"}, {"label" : "atOption", "tail" : "(): At[Option[A], Unit, A]", "member" : "proptics.instances.AtInstances.atOption", "link" : "proptics\/instances\/package$$at$.html#atOption[A]:proptics.typeclass.At[Option[A],Unit,A]", "kind" : "implicit final def"}, {"label" : "remove", "tail" : "(i: I)(s: S)(ev: At[S, I, A]): S", "member" : "proptics.instances.AtInstances.remove", "link" : "proptics\/instances\/package$$at$.html#remove[S,I,A](i:I)(s:S)(implicitev:proptics.typeclass.At[S,I,A]):S", "kind" : "final def"}, {"label" : "at", "tail" : "(i: I)(ev: At[S, I, A]): Lens[S, Option[A]]", "member" : "proptics.instances.AtInstances.at", "link" : "proptics\/instances\/package$$at$.html#at[S,I,A](i:I)(implicitev:proptics.typeclass.At[S,I,A]):proptics.Lens[S,Option[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$at$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$at$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$at$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$at$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$at$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$at$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$at$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$at$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$at$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$at$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$at$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$at$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$at$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$at$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$at$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$at$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$at$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$at$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$at$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.AtInstances", "trait" : "proptics\/instances\/AtInstances.html", "kind" : "trait", "members_trait" : [{"label" : "atMap", "tail" : "(): At[Map[K, V], K, V]", "member" : "proptics.instances.AtInstances.atMap", "link" : "proptics\/instances\/AtInstances.html#atMap[K,V]:proptics.typeclass.At[Map[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "atListMap", "tail" : "(): At[ListMap[K, V], K, V]", "member" : "proptics.instances.AtInstances.atListMap", "link" : "proptics\/instances\/AtInstances.html#atListMap[K,V]:proptics.typeclass.At[scala.collection.immutable.ListMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "atSortedMap", "tail" : "(): At[SortedMap[K, V], K, V]", "member" : "proptics.instances.AtInstances.atSortedMap", "link" : "proptics\/instances\/AtInstances.html#atSortedMap[K,V]:proptics.typeclass.At[scala.collection.immutable.SortedMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "atSet", "tail" : "(): At[Set[A], A, Unit]", "member" : "proptics.instances.AtInstances.atSet", "link" : "proptics\/instances\/AtInstances.html#atSet[A]:proptics.typeclass.At[Set[A],A,Unit]", "kind" : "implicit final def"}, {"label" : "atOption", "tail" : "(): At[Option[A], Unit, A]", "member" : "proptics.instances.AtInstances.atOption", "link" : "proptics\/instances\/AtInstances.html#atOption[A]:proptics.typeclass.At[Option[A],Unit,A]", "kind" : "implicit final def"}, {"label" : "remove", "tail" : "(i: I)(s: S)(ev: At[S, I, A]): S", "member" : "proptics.instances.AtInstances.remove", "link" : "proptics\/instances\/AtInstances.html#remove[S,I,A](i:I)(s:S)(implicitev:proptics.typeclass.At[S,I,A]):S", "kind" : "final def"}, {"label" : "at", "tail" : "(i: I)(ev: At[S, I, A]): Lens[S, Option[A]]", "member" : "proptics.instances.AtInstances.at", "link" : "proptics\/instances\/AtInstances.html#at[S,I,A](i:I)(implicitev:proptics.typeclass.At[S,I,A]):proptics.Lens[S,Option[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/AtInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/AtInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/AtInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/AtInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/AtInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/AtInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/AtInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/AtInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/AtInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/AtInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/AtInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/AtInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/AtInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/AtInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/AtInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/AtInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/AtInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/AtInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/AtInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.cons", "shortDescription" : "", "object" : "proptics\/instances\/package$$cons$.html", "members_object" : [{"label" : "consChain", "tail" : "(): Cons[Chain[A], A]", "member" : "proptics.instances.ConsInstances.consChain", "link" : "proptics\/instances\/package$$cons$.html#consChain[A]:proptics.typeclass.Cons[cats.data.Chain[A],A]", "kind" : "implicit final def"}, {"label" : "consVector", "tail" : "(): Cons[Vector[A], A]", "member" : "proptics.instances.ConsInstances.consVector", "link" : "proptics\/instances\/package$$cons$.html#consVector[A]:proptics.typeclass.Cons[Vector[A],A]", "kind" : "implicit final def"}, {"label" : "consList", "tail" : "(): Cons[List[A], A]", "member" : "proptics.instances.ConsInstances.consList", "link" : "proptics\/instances\/package$$cons$.html#consList[A]:proptics.typeclass.Cons[List[A],A]", "kind" : "implicit final def"}, {"label" : "consArray", "tail" : "(arg0: ClassTag[A]): Cons[Array[A], A]", "member" : "proptics.instances.ConsInstances.consArray", "link" : "proptics\/instances\/package$$cons$.html#consArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Cons[Array[A],A]", "kind" : "implicit final def"}, {"label" : "consString", "tail" : "(): Cons[String, Char]", "member" : "proptics.instances.ConsInstances.consString", "link" : "proptics\/instances\/package$$cons$.html#consString:proptics.typeclass.Cons[String,Char]", "kind" : "implicit final def"}, {"label" : "tailOption", "tail" : "(ev: Cons[S, A]): AffineTraversal[S, S]", "member" : "proptics.instances.ConsInstances.tailOption", "link" : "proptics\/instances\/package$$cons$.html#tailOption[S,A](implicitev:proptics.typeclass.Cons[S,A]):proptics.AffineTraversal[S,S]", "kind" : "final def"}, {"label" : "headOption", "tail" : "(ev: Cons[S, A]): AffineTraversal[S, A]", "member" : "proptics.instances.ConsInstances.headOption", "link" : "proptics\/instances\/package$$cons$.html#headOption[S,A](implicitev:proptics.typeclass.Cons[S,A]):proptics.AffineTraversal[S,A]", "kind" : "final def"}, {"label" : "cons", "tail" : "(ev: Cons[S, A]): Prism[S, (A, S)]", "member" : "proptics.instances.ConsInstances.cons", "link" : "proptics\/instances\/package$$cons$.html#cons[S,A](implicitev:proptics.typeclass.Cons[S,A]):proptics.Prism[S,(A,S)]", "kind" : "final def"}, {"label" : "consArraySeq", "tail" : "(): Cons[ArraySeq[A], A]", "member" : "proptics.instances.ScalaVersionSpecificConsInstances.consArraySeq", "link" : "proptics\/instances\/package$$cons$.html#consArraySeq[A]:proptics.typeclass.Cons[scala.collection.immutable.ArraySeq[A],A]", "kind" : "implicit final def"}, {"label" : "consLazyList", "tail" : "(): Cons[LazyList[A], A]", "member" : "proptics.instances.ScalaVersionSpecificConsInstances.consLazyList", "link" : "proptics\/instances\/package$$cons$.html#consLazyList[A]:proptics.typeclass.Cons[LazyList[A],A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$cons$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$cons$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$cons$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$cons$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$cons$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$cons$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$cons$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$cons$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$cons$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$cons$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$cons$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$cons$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$cons$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$cons$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$cons$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$cons$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$cons$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$cons$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$cons$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.ConsInstances", "trait" : "proptics\/instances\/ConsInstances.html", "kind" : "trait", "members_trait" : [{"label" : "consChain", "tail" : "(): Cons[Chain[A], A]", "member" : "proptics.instances.ConsInstances.consChain", "link" : "proptics\/instances\/ConsInstances.html#consChain[A]:proptics.typeclass.Cons[cats.data.Chain[A],A]", "kind" : "implicit final def"}, {"label" : "consVector", "tail" : "(): Cons[Vector[A], A]", "member" : "proptics.instances.ConsInstances.consVector", "link" : "proptics\/instances\/ConsInstances.html#consVector[A]:proptics.typeclass.Cons[Vector[A],A]", "kind" : "implicit final def"}, {"label" : "consList", "tail" : "(): Cons[List[A], A]", "member" : "proptics.instances.ConsInstances.consList", "link" : "proptics\/instances\/ConsInstances.html#consList[A]:proptics.typeclass.Cons[List[A],A]", "kind" : "implicit final def"}, {"label" : "consArray", "tail" : "(arg0: ClassTag[A]): Cons[Array[A], A]", "member" : "proptics.instances.ConsInstances.consArray", "link" : "proptics\/instances\/ConsInstances.html#consArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Cons[Array[A],A]", "kind" : "implicit final def"}, {"label" : "consString", "tail" : "(): Cons[String, Char]", "member" : "proptics.instances.ConsInstances.consString", "link" : "proptics\/instances\/ConsInstances.html#consString:proptics.typeclass.Cons[String,Char]", "kind" : "implicit final def"}, {"label" : "tailOption", "tail" : "(ev: Cons[S, A]): AffineTraversal[S, S]", "member" : "proptics.instances.ConsInstances.tailOption", "link" : "proptics\/instances\/ConsInstances.html#tailOption[S,A](implicitev:proptics.typeclass.Cons[S,A]):proptics.AffineTraversal[S,S]", "kind" : "final def"}, {"label" : "headOption", "tail" : "(ev: Cons[S, A]): AffineTraversal[S, A]", "member" : "proptics.instances.ConsInstances.headOption", "link" : "proptics\/instances\/ConsInstances.html#headOption[S,A](implicitev:proptics.typeclass.Cons[S,A]):proptics.AffineTraversal[S,A]", "kind" : "final def"}, {"label" : "cons", "tail" : "(ev: Cons[S, A]): Prism[S, (A, S)]", "member" : "proptics.instances.ConsInstances.cons", "link" : "proptics\/instances\/ConsInstances.html#cons[S,A](implicitev:proptics.typeclass.Cons[S,A]):proptics.Prism[S,(A,S)]", "kind" : "final def"}, {"label" : "consArraySeq", "tail" : "(): Cons[ArraySeq[A], A]", "member" : "proptics.instances.ScalaVersionSpecificConsInstances.consArraySeq", "link" : "proptics\/instances\/ConsInstances.html#consArraySeq[A]:proptics.typeclass.Cons[scala.collection.immutable.ArraySeq[A],A]", "kind" : "implicit final def"}, {"label" : "consLazyList", "tail" : "(): Cons[LazyList[A], A]", "member" : "proptics.instances.ScalaVersionSpecificConsInstances.consLazyList", "link" : "proptics\/instances\/ConsInstances.html#consLazyList[A]:proptics.typeclass.Cons[LazyList[A],A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/ConsInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/ConsInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/ConsInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/ConsInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/ConsInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/ConsInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/ConsInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/ConsInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/ConsInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/ConsInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/ConsInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/ConsInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/ConsInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/ConsInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/ConsInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/ConsInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/ConsInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/ConsInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/ConsInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.each", "shortDescription" : "", "object" : "proptics\/instances\/package$$each$.html", "members_object" : [{"label" : "eachNonEmptyChain", "tail" : "(): Each[NonEmptyChain[A], A]", "member" : "proptics.instances.EachInstances.eachNonEmptyChain", "link" : "proptics\/instances\/package$$each$.html#eachNonEmptyChain[A]:proptics.typeclass.Each[cats.data.NonEmptyChain[A],A]", "kind" : "implicit def"}, {"label" : "eachNonEmptyList", "tail" : "(): Each[NonEmptyList[A], A]", "member" : "proptics.instances.EachInstances.eachNonEmptyList", "link" : "proptics\/instances\/package$$each$.html#eachNonEmptyList[A]:proptics.typeclass.Each[cats.data.NonEmptyList[A],A]", "kind" : "implicit def"}, {"label" : "eachNonEmptyVector", "tail" : "(): Each[NonEmptyVector[A], A]", "member" : "proptics.instances.EachInstances.eachNonEmptyVector", "link" : "proptics\/instances\/package$$each$.html#eachNonEmptyVector[A]:proptics.typeclass.Each[cats.data.NonEmptyVector[A],A]", "kind" : "implicit def"}, {"label" : "eachOneAnd", "tail" : "(ev0: Each[G[A], A]): Each[OneAnd[G, A], A]", "member" : "proptics.instances.EachInstances.eachOneAnd", "link" : "proptics\/instances\/package$$each$.html#eachOneAnd[G[_],A](implicitev0:proptics.typeclass.Each[G[A],A]):proptics.typeclass.Each[cats.data.OneAnd[G,A],A]", "kind" : "implicit def"}, {"label" : "eachChain", "tail" : "(): Each[Chain[A], A]", "member" : "proptics.instances.EachInstances.eachChain", "link" : "proptics\/instances\/package$$each$.html#eachChain[A]:proptics.typeclass.Each[cats.data.Chain[A],A]", "kind" : "implicit def"}, {"label" : "eachSortedMap", "tail" : "(arg0: Order[K]): Each[SortedMap[K, V], V]", "member" : "proptics.instances.EachInstances.eachSortedMap", "link" : "proptics\/instances\/package$$each$.html#eachSortedMap[K,V](implicitevidence$1:cats.Order[K]):proptics.typeclass.Each[scala.collection.immutable.SortedMap[K,V],V]", "kind" : "implicit def"}, {"label" : "eachListMap", "tail" : "(): Each[ListMap[K, V], V]", "member" : "proptics.instances.EachInstances.eachListMap", "link" : "proptics\/instances\/package$$each$.html#eachListMap[K,V]:proptics.typeclass.Each[scala.collection.immutable.ListMap[K,V],V]", "kind" : "implicit final def"}, {"label" : "eachList", "tail" : "(): Each[List[A], A]", "member" : "proptics.instances.EachInstances.eachList", "link" : "proptics\/instances\/package$$each$.html#eachList[A]:proptics.typeclass.Each[List[A],A]", "kind" : "implicit final def"}, {"label" : "eachVector", "tail" : "(): Each[Vector[A], A]", "member" : "proptics.instances.EachInstances.eachVector", "link" : "proptics\/instances\/package$$each$.html#eachVector[A]:proptics.typeclass.Each[Vector[A],A]", "kind" : "implicit final def"}, {"label" : "eachString", "tail" : "(): Each[String, Char]", "member" : "proptics.instances.EachInstances.eachString", "link" : "proptics\/instances\/package$$each$.html#eachString:proptics.typeclass.Each[String,Char]", "kind" : "implicit final def"}, {"label" : "eachTuple5", "tail" : "(): Each[(A, A, A, A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple5", "link" : "proptics\/instances\/package$$each$.html#eachTuple5[A]:proptics.typeclass.Each[(A,A,A,A,A),A]", "kind" : "implicit def"}, {"label" : "eachTuple4", "tail" : "(): Each[(A, A, A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple4", "link" : "proptics\/instances\/package$$each$.html#eachTuple4[A]:proptics.typeclass.Each[(A,A,A,A),A]", "kind" : "implicit def"}, {"label" : "eachTuple3", "tail" : "(): Each[(A, A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple3", "link" : "proptics\/instances\/package$$each$.html#eachTuple3[A]:proptics.typeclass.Each[(A,A,A),A]", "kind" : "implicit def"}, {"label" : "eachTuple2", "tail" : "(): Each[(A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple2", "link" : "proptics\/instances\/package$$each$.html#eachTuple2[A]:proptics.typeclass.Each[(A,A),A]", "kind" : "implicit def"}, {"label" : "each", "tail" : "(ev: Each[S, A]): Traversal[S, A]", "member" : "proptics.instances.EachInstances.each", "link" : "proptics\/instances\/package$$each$.html#each[S,A](implicitev:proptics.typeclass.Each[S,A]):proptics.Traversal[S,A]", "kind" : "def"}, {"label" : "eachArraySeq", "tail" : "(): Each[ArraySeq[A], A]", "member" : "proptics.instances.ScalaVersionSpecificEachInstances.eachArraySeq", "link" : "proptics\/instances\/package$$each$.html#eachArraySeq[A]:proptics.typeclass.Each[scala.collection.immutable.ArraySeq[A],A]", "kind" : "implicit final def"}, {"label" : "eachLazyList", "tail" : "(): Each[LazyList[A], A]", "member" : "proptics.instances.ScalaVersionSpecificEachInstances.eachLazyList", "link" : "proptics\/instances\/package$$each$.html#eachLazyList[A]:proptics.typeclass.Each[LazyList[A],A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$each$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$each$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$each$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$each$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$each$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$each$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$each$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$each$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$each$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$each$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$each$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$each$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$each$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$each$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$each$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$each$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$each$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$each$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$each$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.EachInstances", "trait" : "proptics\/instances\/EachInstances.html", "kind" : "trait", "members_trait" : [{"label" : "eachNonEmptyChain", "tail" : "(): Each[NonEmptyChain[A], A]", "member" : "proptics.instances.EachInstances.eachNonEmptyChain", "link" : "proptics\/instances\/EachInstances.html#eachNonEmptyChain[A]:proptics.typeclass.Each[cats.data.NonEmptyChain[A],A]", "kind" : "implicit def"}, {"label" : "eachNonEmptyList", "tail" : "(): Each[NonEmptyList[A], A]", "member" : "proptics.instances.EachInstances.eachNonEmptyList", "link" : "proptics\/instances\/EachInstances.html#eachNonEmptyList[A]:proptics.typeclass.Each[cats.data.NonEmptyList[A],A]", "kind" : "implicit def"}, {"label" : "eachNonEmptyVector", "tail" : "(): Each[NonEmptyVector[A], A]", "member" : "proptics.instances.EachInstances.eachNonEmptyVector", "link" : "proptics\/instances\/EachInstances.html#eachNonEmptyVector[A]:proptics.typeclass.Each[cats.data.NonEmptyVector[A],A]", "kind" : "implicit def"}, {"label" : "eachOneAnd", "tail" : "(ev0: Each[G[A], A]): Each[OneAnd[G, A], A]", "member" : "proptics.instances.EachInstances.eachOneAnd", "link" : "proptics\/instances\/EachInstances.html#eachOneAnd[G[_],A](implicitev0:proptics.typeclass.Each[G[A],A]):proptics.typeclass.Each[cats.data.OneAnd[G,A],A]", "kind" : "implicit def"}, {"label" : "eachChain", "tail" : "(): Each[Chain[A], A]", "member" : "proptics.instances.EachInstances.eachChain", "link" : "proptics\/instances\/EachInstances.html#eachChain[A]:proptics.typeclass.Each[cats.data.Chain[A],A]", "kind" : "implicit def"}, {"label" : "eachSortedMap", "tail" : "(arg0: Order[K]): Each[SortedMap[K, V], V]", "member" : "proptics.instances.EachInstances.eachSortedMap", "link" : "proptics\/instances\/EachInstances.html#eachSortedMap[K,V](implicitevidence$1:cats.Order[K]):proptics.typeclass.Each[scala.collection.immutable.SortedMap[K,V],V]", "kind" : "implicit def"}, {"label" : "eachListMap", "tail" : "(): Each[ListMap[K, V], V]", "member" : "proptics.instances.EachInstances.eachListMap", "link" : "proptics\/instances\/EachInstances.html#eachListMap[K,V]:proptics.typeclass.Each[scala.collection.immutable.ListMap[K,V],V]", "kind" : "implicit final def"}, {"label" : "eachList", "tail" : "(): Each[List[A], A]", "member" : "proptics.instances.EachInstances.eachList", "link" : "proptics\/instances\/EachInstances.html#eachList[A]:proptics.typeclass.Each[List[A],A]", "kind" : "implicit final def"}, {"label" : "eachVector", "tail" : "(): Each[Vector[A], A]", "member" : "proptics.instances.EachInstances.eachVector", "link" : "proptics\/instances\/EachInstances.html#eachVector[A]:proptics.typeclass.Each[Vector[A],A]", "kind" : "implicit final def"}, {"label" : "eachString", "tail" : "(): Each[String, Char]", "member" : "proptics.instances.EachInstances.eachString", "link" : "proptics\/instances\/EachInstances.html#eachString:proptics.typeclass.Each[String,Char]", "kind" : "implicit final def"}, {"label" : "eachTuple5", "tail" : "(): Each[(A, A, A, A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple5", "link" : "proptics\/instances\/EachInstances.html#eachTuple5[A]:proptics.typeclass.Each[(A,A,A,A,A),A]", "kind" : "implicit def"}, {"label" : "eachTuple4", "tail" : "(): Each[(A, A, A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple4", "link" : "proptics\/instances\/EachInstances.html#eachTuple4[A]:proptics.typeclass.Each[(A,A,A,A),A]", "kind" : "implicit def"}, {"label" : "eachTuple3", "tail" : "(): Each[(A, A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple3", "link" : "proptics\/instances\/EachInstances.html#eachTuple3[A]:proptics.typeclass.Each[(A,A,A),A]", "kind" : "implicit def"}, {"label" : "eachTuple2", "tail" : "(): Each[(A, A), A]", "member" : "proptics.instances.EachInstances.eachTuple2", "link" : "proptics\/instances\/EachInstances.html#eachTuple2[A]:proptics.typeclass.Each[(A,A),A]", "kind" : "implicit def"}, {"label" : "each", "tail" : "(ev: Each[S, A]): Traversal[S, A]", "member" : "proptics.instances.EachInstances.each", "link" : "proptics\/instances\/EachInstances.html#each[S,A](implicitev:proptics.typeclass.Each[S,A]):proptics.Traversal[S,A]", "kind" : "def"}, {"label" : "eachArraySeq", "tail" : "(): Each[ArraySeq[A], A]", "member" : "proptics.instances.ScalaVersionSpecificEachInstances.eachArraySeq", "link" : "proptics\/instances\/EachInstances.html#eachArraySeq[A]:proptics.typeclass.Each[scala.collection.immutable.ArraySeq[A],A]", "kind" : "implicit final def"}, {"label" : "eachLazyList", "tail" : "(): Each[LazyList[A], A]", "member" : "proptics.instances.ScalaVersionSpecificEachInstances.eachLazyList", "link" : "proptics\/instances\/EachInstances.html#eachLazyList[A]:proptics.typeclass.Each[LazyList[A],A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/EachInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/EachInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/EachInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/EachInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/EachInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/EachInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/EachInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/EachInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/EachInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/EachInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/EachInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/EachInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/EachInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/EachInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/EachInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/EachInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/EachInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/EachInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/EachInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.empty", "shortDescription" : "", "object" : "proptics\/instances\/package$$empty$.html", "members_object" : [{"label" : "emptyChain", "tail" : "(): Empty[Chain[A]]", "member" : "proptics.instances.EmptyInstances.emptyChain", "link" : "proptics\/instances\/package$$empty$.html#emptyChain[A]:proptics.typeclass.Empty[cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "emptySortedMap", "tail" : "(ev: Order[K]): Empty[SortedMap[K, V]]", "member" : "proptics.instances.EmptyInstances.emptySortedMap", "link" : "proptics\/instances\/package$$empty$.html#emptySortedMap[K,V](implicitev:cats.Order[K]):proptics.typeclass.Empty[scala.collection.immutable.SortedMap[K,V]]", "kind" : "implicit final def"}, {"label" : "emptyMap", "tail" : "(): Empty[Map[K, V]]", "member" : "proptics.instances.EmptyInstances.emptyMap", "link" : "proptics\/instances\/package$$empty$.html#emptyMap[K,V]:proptics.typeclass.Empty[Map[K,V]]", "kind" : "implicit final def"}, {"label" : "emptyListMap", "tail" : "(): Empty[ListMap[K, V]]", "member" : "proptics.instances.EmptyInstances.emptyListMap", "link" : "proptics\/instances\/package$$empty$.html#emptyListMap[K,V]:proptics.typeclass.Empty[scala.collection.immutable.ListMap[K,V]]", "kind" : "implicit final def"}, {"label" : "emptySet", "tail" : "(): Empty[Set[A]]", "member" : "proptics.instances.EmptyInstances.emptySet", "link" : "proptics\/instances\/package$$empty$.html#emptySet[A]:proptics.typeclass.Empty[Set[A]]", "kind" : "implicit final def"}, {"label" : "emptyVector", "tail" : "(): Empty[Vector[A]]", "member" : "proptics.instances.EmptyInstances.emptyVector", "link" : "proptics\/instances\/package$$empty$.html#emptyVector[A]:proptics.typeclass.Empty[Vector[A]]", "kind" : "implicit final def"}, {"label" : "emptyList", "tail" : "(): Empty[List[A]]", "member" : "proptics.instances.EmptyInstances.emptyList", "link" : "proptics\/instances\/package$$empty$.html#emptyList[A]:proptics.typeclass.Empty[List[A]]", "kind" : "implicit final def"}, {"label" : "emptyArray", "tail" : "(arg0: ClassTag[A]): Empty[Array[A]]", "member" : "proptics.instances.EmptyInstances.emptyArray", "link" : "proptics\/instances\/package$$empty$.html#emptyArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Empty[Array[A]]", "kind" : "implicit final def"}, {"label" : "emptyString", "tail" : ": Empty[String]", "member" : "proptics.instances.EmptyInstances.emptyString", "link" : "proptics\/instances\/package$$empty$.html#emptyString:proptics.typeclass.Empty[String]", "kind" : "implicit final val"}, {"label" : "empty", "tail" : "(ev: Empty[S]): Prism[S, Unit]", "member" : "proptics.instances.EmptyInstances.empty", "link" : "proptics\/instances\/package$$empty$.html#empty[S](implicitev:proptics.typeclass.Empty[S]):proptics.Prism[S,Unit]", "kind" : "def"}, {"label" : "emptyLazyArraySeq", "tail" : "(arg0: ClassTag[A]): Empty[ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificEmptyInstances.emptyLazyArraySeq", "link" : "proptics\/instances\/package$$empty$.html#emptyLazyArraySeq[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Empty[collection.compat.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "emptyLazyList", "tail" : "(): Empty[LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificEmptyInstances.emptyLazyList", "link" : "proptics\/instances\/package$$empty$.html#emptyLazyList[A]:proptics.typeclass.Empty[LazyList[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$empty$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$empty$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$empty$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$empty$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$empty$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$empty$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$empty$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$empty$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$empty$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$empty$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$empty$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$empty$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$empty$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$empty$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$empty$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$empty$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$empty$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$empty$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$empty$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.EmptyInstances", "trait" : "proptics\/instances\/EmptyInstances.html", "kind" : "trait", "members_trait" : [{"label" : "emptyChain", "tail" : "(): Empty[Chain[A]]", "member" : "proptics.instances.EmptyInstances.emptyChain", "link" : "proptics\/instances\/EmptyInstances.html#emptyChain[A]:proptics.typeclass.Empty[cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "emptySortedMap", "tail" : "(ev: Order[K]): Empty[SortedMap[K, V]]", "member" : "proptics.instances.EmptyInstances.emptySortedMap", "link" : "proptics\/instances\/EmptyInstances.html#emptySortedMap[K,V](implicitev:cats.Order[K]):proptics.typeclass.Empty[scala.collection.immutable.SortedMap[K,V]]", "kind" : "implicit final def"}, {"label" : "emptyMap", "tail" : "(): Empty[Map[K, V]]", "member" : "proptics.instances.EmptyInstances.emptyMap", "link" : "proptics\/instances\/EmptyInstances.html#emptyMap[K,V]:proptics.typeclass.Empty[Map[K,V]]", "kind" : "implicit final def"}, {"label" : "emptyListMap", "tail" : "(): Empty[ListMap[K, V]]", "member" : "proptics.instances.EmptyInstances.emptyListMap", "link" : "proptics\/instances\/EmptyInstances.html#emptyListMap[K,V]:proptics.typeclass.Empty[scala.collection.immutable.ListMap[K,V]]", "kind" : "implicit final def"}, {"label" : "emptySet", "tail" : "(): Empty[Set[A]]", "member" : "proptics.instances.EmptyInstances.emptySet", "link" : "proptics\/instances\/EmptyInstances.html#emptySet[A]:proptics.typeclass.Empty[Set[A]]", "kind" : "implicit final def"}, {"label" : "emptyVector", "tail" : "(): Empty[Vector[A]]", "member" : "proptics.instances.EmptyInstances.emptyVector", "link" : "proptics\/instances\/EmptyInstances.html#emptyVector[A]:proptics.typeclass.Empty[Vector[A]]", "kind" : "implicit final def"}, {"label" : "emptyList", "tail" : "(): Empty[List[A]]", "member" : "proptics.instances.EmptyInstances.emptyList", "link" : "proptics\/instances\/EmptyInstances.html#emptyList[A]:proptics.typeclass.Empty[List[A]]", "kind" : "implicit final def"}, {"label" : "emptyArray", "tail" : "(arg0: ClassTag[A]): Empty[Array[A]]", "member" : "proptics.instances.EmptyInstances.emptyArray", "link" : "proptics\/instances\/EmptyInstances.html#emptyArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Empty[Array[A]]", "kind" : "implicit final def"}, {"label" : "emptyString", "tail" : ": Empty[String]", "member" : "proptics.instances.EmptyInstances.emptyString", "link" : "proptics\/instances\/EmptyInstances.html#emptyString:proptics.typeclass.Empty[String]", "kind" : "implicit final val"}, {"label" : "empty", "tail" : "(ev: Empty[S]): Prism[S, Unit]", "member" : "proptics.instances.EmptyInstances.empty", "link" : "proptics\/instances\/EmptyInstances.html#empty[S](implicitev:proptics.typeclass.Empty[S]):proptics.Prism[S,Unit]", "kind" : "def"}, {"label" : "emptyLazyArraySeq", "tail" : "(arg0: ClassTag[A]): Empty[ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificEmptyInstances.emptyLazyArraySeq", "link" : "proptics\/instances\/EmptyInstances.html#emptyLazyArraySeq[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Empty[collection.compat.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "emptyLazyList", "tail" : "(): Empty[LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificEmptyInstances.emptyLazyList", "link" : "proptics\/instances\/EmptyInstances.html#emptyLazyList[A]:proptics.typeclass.Empty[LazyList[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/EmptyInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/EmptyInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/EmptyInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/EmptyInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/EmptyInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/EmptyInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/EmptyInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/EmptyInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/EmptyInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/EmptyInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/EmptyInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/EmptyInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/EmptyInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/EmptyInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/EmptyInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/EmptyInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/EmptyInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/EmptyInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/EmptyInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.field1", "shortDescription" : "", "object" : "proptics\/instances\/package$$field1$.html", "members_object" : [{"label" : "field1Tuple5", "tail" : "(): Field1[(A, B, C, D, E), A]", "member" : "proptics.instances.Field1Instances.field1Tuple5", "link" : "proptics\/instances\/package$$field1$.html#field1Tuple5[A,B,C,D,E]:proptics.typeclass.Field1[(A,B,C,D,E),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple4", "tail" : "(): Field1[(A, B, C, D), A]", "member" : "proptics.instances.Field1Instances.field1Tuple4", "link" : "proptics\/instances\/package$$field1$.html#field1Tuple4[A,B,C,D]:proptics.typeclass.Field1[(A,B,C,D),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple3", "tail" : "(): Field1[(A, B, C), A]", "member" : "proptics.instances.Field1Instances.field1Tuple3", "link" : "proptics\/instances\/package$$field1$.html#field1Tuple3[A,B,C]:proptics.typeclass.Field1[(A,B,C),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple2", "tail" : "(): Field1[(A, B), A]", "member" : "proptics.instances.Field1Instances.field1Tuple2", "link" : "proptics\/instances\/package$$field1$.html#field1Tuple2[A,B]:proptics.typeclass.Field1[(A,B),A]", "kind" : "implicit final def"}, {"label" : "first", "tail" : "(ev: Field1[(A, B), A]): Lens[(A, B), A]", "member" : "proptics.instances.Field1Instances.first", "link" : "proptics\/instances\/package$$field1$.html#first[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.Lens[(A,B),A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$field1$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$field1$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$field1$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$field1$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$field1$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$field1$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$field1$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field1$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field1$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field1$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$field1$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$field1$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$field1$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$field1$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$field1$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$field1$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$field1$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$field1$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$field1$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.Field1Instances", "trait" : "proptics\/instances\/Field1Instances.html", "kind" : "trait", "members_trait" : [{"label" : "field1Tuple5", "tail" : "(): Field1[(A, B, C, D, E), A]", "member" : "proptics.instances.Field1Instances.field1Tuple5", "link" : "proptics\/instances\/Field1Instances.html#field1Tuple5[A,B,C,D,E]:proptics.typeclass.Field1[(A,B,C,D,E),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple4", "tail" : "(): Field1[(A, B, C, D), A]", "member" : "proptics.instances.Field1Instances.field1Tuple4", "link" : "proptics\/instances\/Field1Instances.html#field1Tuple4[A,B,C,D]:proptics.typeclass.Field1[(A,B,C,D),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple3", "tail" : "(): Field1[(A, B, C), A]", "member" : "proptics.instances.Field1Instances.field1Tuple3", "link" : "proptics\/instances\/Field1Instances.html#field1Tuple3[A,B,C]:proptics.typeclass.Field1[(A,B,C),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple2", "tail" : "(): Field1[(A, B), A]", "member" : "proptics.instances.Field1Instances.field1Tuple2", "link" : "proptics\/instances\/Field1Instances.html#field1Tuple2[A,B]:proptics.typeclass.Field1[(A,B),A]", "kind" : "implicit final def"}, {"label" : "first", "tail" : "(ev: Field1[(A, B), A]): Lens[(A, B), A]", "member" : "proptics.instances.Field1Instances.first", "link" : "proptics\/instances\/Field1Instances.html#first[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.Lens[(A,B),A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/Field1Instances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/Field1Instances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/Field1Instances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/Field1Instances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/Field1Instances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/Field1Instances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/Field1Instances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field1Instances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field1Instances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field1Instances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/Field1Instances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/Field1Instances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/Field1Instances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/Field1Instances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/Field1Instances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/Field1Instances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/Field1Instances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/Field1Instances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/Field1Instances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.field2", "shortDescription" : "", "object" : "proptics\/instances\/package$$field2$.html", "members_object" : [{"label" : "field2Tuple5", "tail" : "(): Field2[(A, B, C, D, E), B]", "member" : "proptics.instances.Field2Instances.field2Tuple5", "link" : "proptics\/instances\/package$$field2$.html#field2Tuple5[A,B,C,D,E]:proptics.typeclass.Field2[(A,B,C,D,E),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple4", "tail" : "(): Field2[(A, B, C, D), B]", "member" : "proptics.instances.Field2Instances.field2Tuple4", "link" : "proptics\/instances\/package$$field2$.html#field2Tuple4[A,B,C,D]:proptics.typeclass.Field2[(A,B,C,D),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple3", "tail" : "(): Field2[(A, B, C), B]", "member" : "proptics.instances.Field2Instances.field2Tuple3", "link" : "proptics\/instances\/package$$field2$.html#field2Tuple3[A,B,C]:proptics.typeclass.Field2[(A,B,C),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple2", "tail" : "(): Field2[(A, B), B]", "member" : "proptics.instances.Field2Instances.field2Tuple2", "link" : "proptics\/instances\/package$$field2$.html#field2Tuple2[A,B]:proptics.typeclass.Field2[(A,B),B]", "kind" : "implicit final def"}, {"label" : "second", "tail" : "(ev: Field2[(A, B), B]): Lens[(A, B), B]", "member" : "proptics.instances.Field2Instances.second", "link" : "proptics\/instances\/package$$field2$.html#second[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.Lens[(A,B),B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$field2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$field2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$field2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$field2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$field2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$field2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$field2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$field2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$field2$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$field2$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$field2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$field2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$field2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$field2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$field2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$field2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.Field2Instances", "trait" : "proptics\/instances\/Field2Instances.html", "kind" : "trait", "members_trait" : [{"label" : "field2Tuple5", "tail" : "(): Field2[(A, B, C, D, E), B]", "member" : "proptics.instances.Field2Instances.field2Tuple5", "link" : "proptics\/instances\/Field2Instances.html#field2Tuple5[A,B,C,D,E]:proptics.typeclass.Field2[(A,B,C,D,E),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple4", "tail" : "(): Field2[(A, B, C, D), B]", "member" : "proptics.instances.Field2Instances.field2Tuple4", "link" : "proptics\/instances\/Field2Instances.html#field2Tuple4[A,B,C,D]:proptics.typeclass.Field2[(A,B,C,D),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple3", "tail" : "(): Field2[(A, B, C), B]", "member" : "proptics.instances.Field2Instances.field2Tuple3", "link" : "proptics\/instances\/Field2Instances.html#field2Tuple3[A,B,C]:proptics.typeclass.Field2[(A,B,C),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple2", "tail" : "(): Field2[(A, B), B]", "member" : "proptics.instances.Field2Instances.field2Tuple2", "link" : "proptics\/instances\/Field2Instances.html#field2Tuple2[A,B]:proptics.typeclass.Field2[(A,B),B]", "kind" : "implicit final def"}, {"label" : "second", "tail" : "(ev: Field2[(A, B), B]): Lens[(A, B), B]", "member" : "proptics.instances.Field2Instances.second", "link" : "proptics\/instances\/Field2Instances.html#second[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.Lens[(A,B),B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/Field2Instances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/Field2Instances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/Field2Instances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/Field2Instances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/Field2Instances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/Field2Instances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/Field2Instances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field2Instances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field2Instances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field2Instances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/Field2Instances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/Field2Instances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/Field2Instances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/Field2Instances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/Field2Instances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/Field2Instances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/Field2Instances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/Field2Instances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/Field2Instances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.field3", "shortDescription" : "", "object" : "proptics\/instances\/package$$field3$.html", "members_object" : [{"label" : "field3Tuple5", "tail" : "(): Field3[(A, B, C, D, E), C]", "member" : "proptics.instances.Field3Instances.field3Tuple5", "link" : "proptics\/instances\/package$$field3$.html#field3Tuple5[A,B,C,D,E]:proptics.typeclass.Field3[(A,B,C,D,E),C]", "kind" : "implicit final def"}, {"label" : "field3Tuple4", "tail" : "(): Field3[(A, B, C, D), C]", "member" : "proptics.instances.Field3Instances.field3Tuple4", "link" : "proptics\/instances\/package$$field3$.html#field3Tuple4[A,B,C,D]:proptics.typeclass.Field3[(A,B,C,D),C]", "kind" : "implicit final def"}, {"label" : "field3Tuple3", "tail" : "(): Field3[(A, B, C), C]", "member" : "proptics.instances.Field3Instances.field3Tuple3", "link" : "proptics\/instances\/package$$field3$.html#field3Tuple3[A,B,C]:proptics.typeclass.Field3[(A,B,C),C]", "kind" : "implicit final def"}, {"label" : "third", "tail" : "(ev: Field3[(A, B, C), C]): Lens[(A, B, C), C]", "member" : "proptics.instances.Field3Instances.third", "link" : "proptics\/instances\/package$$field3$.html#third[A,B,C](implicitev:proptics.typeclass.Field3[(A,B,C),C]):proptics.Lens[(A,B,C),C]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$field3$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$field3$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$field3$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$field3$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$field3$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$field3$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$field3$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field3$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field3$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field3$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$field3$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$field3$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$field3$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$field3$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$field3$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$field3$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$field3$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$field3$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$field3$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.Field3Instances", "trait" : "proptics\/instances\/Field3Instances.html", "kind" : "trait", "members_trait" : [{"label" : "field3Tuple5", "tail" : "(): Field3[(A, B, C, D, E), C]", "member" : "proptics.instances.Field3Instances.field3Tuple5", "link" : "proptics\/instances\/Field3Instances.html#field3Tuple5[A,B,C,D,E]:proptics.typeclass.Field3[(A,B,C,D,E),C]", "kind" : "implicit final def"}, {"label" : "field3Tuple4", "tail" : "(): Field3[(A, B, C, D), C]", "member" : "proptics.instances.Field3Instances.field3Tuple4", "link" : "proptics\/instances\/Field3Instances.html#field3Tuple4[A,B,C,D]:proptics.typeclass.Field3[(A,B,C,D),C]", "kind" : "implicit final def"}, {"label" : "field3Tuple3", "tail" : "(): Field3[(A, B, C), C]", "member" : "proptics.instances.Field3Instances.field3Tuple3", "link" : "proptics\/instances\/Field3Instances.html#field3Tuple3[A,B,C]:proptics.typeclass.Field3[(A,B,C),C]", "kind" : "implicit final def"}, {"label" : "third", "tail" : "(ev: Field3[(A, B, C), C]): Lens[(A, B, C), C]", "member" : "proptics.instances.Field3Instances.third", "link" : "proptics\/instances\/Field3Instances.html#third[A,B,C](implicitev:proptics.typeclass.Field3[(A,B,C),C]):proptics.Lens[(A,B,C),C]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/Field3Instances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/Field3Instances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/Field3Instances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/Field3Instances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/Field3Instances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/Field3Instances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/Field3Instances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field3Instances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field3Instances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field3Instances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/Field3Instances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/Field3Instances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/Field3Instances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/Field3Instances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/Field3Instances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/Field3Instances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/Field3Instances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/Field3Instances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/Field3Instances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.field4", "shortDescription" : "", "object" : "proptics\/instances\/package$$field4$.html", "members_object" : [{"label" : "field4Tuple5", "tail" : "(): Field4[(A, B, C, D, E), D]", "member" : "proptics.instances.Field4Instances.field4Tuple5", "link" : "proptics\/instances\/package$$field4$.html#field4Tuple5[A,B,C,D,E]:proptics.typeclass.Field4[(A,B,C,D,E),D]", "kind" : "implicit final def"}, {"label" : "field4Tuple4", "tail" : "(): Field4[(A, B, C, D), D]", "member" : "proptics.instances.Field4Instances.field4Tuple4", "link" : "proptics\/instances\/package$$field4$.html#field4Tuple4[A,B,C,D]:proptics.typeclass.Field4[(A,B,C,D),D]", "kind" : "implicit final def"}, {"label" : "fourth", "tail" : "(ev: Field4[(A, B, C, D), D]): Lens[(A, B, C, D), D]", "member" : "proptics.instances.Field4Instances.fourth", "link" : "proptics\/instances\/package$$field4$.html#fourth[A,B,C,D](implicitev:proptics.typeclass.Field4[(A,B,C,D),D]):proptics.Lens[(A,B,C,D),D]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$field4$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$field4$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$field4$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$field4$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$field4$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$field4$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$field4$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field4$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field4$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field4$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$field4$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$field4$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$field4$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$field4$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$field4$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$field4$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$field4$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$field4$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$field4$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.Field4Instances", "trait" : "proptics\/instances\/Field4Instances.html", "kind" : "trait", "members_trait" : [{"label" : "field4Tuple5", "tail" : "(): Field4[(A, B, C, D, E), D]", "member" : "proptics.instances.Field4Instances.field4Tuple5", "link" : "proptics\/instances\/Field4Instances.html#field4Tuple5[A,B,C,D,E]:proptics.typeclass.Field4[(A,B,C,D,E),D]", "kind" : "implicit final def"}, {"label" : "field4Tuple4", "tail" : "(): Field4[(A, B, C, D), D]", "member" : "proptics.instances.Field4Instances.field4Tuple4", "link" : "proptics\/instances\/Field4Instances.html#field4Tuple4[A,B,C,D]:proptics.typeclass.Field4[(A,B,C,D),D]", "kind" : "implicit final def"}, {"label" : "fourth", "tail" : "(ev: Field4[(A, B, C, D), D]): Lens[(A, B, C, D), D]", "member" : "proptics.instances.Field4Instances.fourth", "link" : "proptics\/instances\/Field4Instances.html#fourth[A,B,C,D](implicitev:proptics.typeclass.Field4[(A,B,C,D),D]):proptics.Lens[(A,B,C,D),D]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/Field4Instances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/Field4Instances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/Field4Instances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/Field4Instances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/Field4Instances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/Field4Instances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/Field4Instances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field4Instances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field4Instances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field4Instances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/Field4Instances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/Field4Instances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/Field4Instances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/Field4Instances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/Field4Instances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/Field4Instances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/Field4Instances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/Field4Instances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/Field4Instances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.field5", "shortDescription" : "", "object" : "proptics\/instances\/package$$field5$.html", "members_object" : [{"label" : "field5Tuple5", "tail" : "(): Field5[(A, B, C, D, E), E]", "member" : "proptics.instances.Field5Instances.field5Tuple5", "link" : "proptics\/instances\/package$$field5$.html#field5Tuple5[A,B,C,D,E]:proptics.typeclass.Field5[(A,B,C,D,E),E]", "kind" : "implicit final def"}, {"label" : "fifth", "tail" : "(ev: Field5[(A, B, C, D, E), E]): Lens[(A, B, C, D, E), E]", "member" : "proptics.instances.Field5Instances.fifth", "link" : "proptics\/instances\/package$$field5$.html#fifth[A,B,C,D,E](implicitev:proptics.typeclass.Field5[(A,B,C,D,E),E]):proptics.Lens[(A,B,C,D,E),E]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$field5$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$field5$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$field5$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$field5$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$field5$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$field5$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$field5$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field5$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field5$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$field5$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$field5$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$field5$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$field5$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$field5$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$field5$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$field5$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$field5$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$field5$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$field5$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.Field5Instances", "trait" : "proptics\/instances\/Field5Instances.html", "kind" : "trait", "members_trait" : [{"label" : "field5Tuple5", "tail" : "(): Field5[(A, B, C, D, E), E]", "member" : "proptics.instances.Field5Instances.field5Tuple5", "link" : "proptics\/instances\/Field5Instances.html#field5Tuple5[A,B,C,D,E]:proptics.typeclass.Field5[(A,B,C,D,E),E]", "kind" : "implicit final def"}, {"label" : "fifth", "tail" : "(ev: Field5[(A, B, C, D, E), E]): Lens[(A, B, C, D, E), E]", "member" : "proptics.instances.Field5Instances.fifth", "link" : "proptics\/instances\/Field5Instances.html#fifth[A,B,C,D,E](implicitev:proptics.typeclass.Field5[(A,B,C,D,E),E]):proptics.Lens[(A,B,C,D,E),E]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/Field5Instances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/Field5Instances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/Field5Instances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/Field5Instances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/Field5Instances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/Field5Instances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/Field5Instances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field5Instances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field5Instances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/Field5Instances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/Field5Instances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/Field5Instances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/Field5Instances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/Field5Instances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/Field5Instances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/Field5Instances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/Field5Instances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/Field5Instances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/Field5Instances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.fields", "shortDescription" : "", "object" : "proptics\/instances\/package$$fields$.html", "members_object" : [{"label" : "field5Tuple5", "tail" : "(): Field5[(A, B, C, D, E), E]", "member" : "proptics.instances.Field5Instances.field5Tuple5", "link" : "proptics\/instances\/package$$fields$.html#field5Tuple5[A,B,C,D,E]:proptics.typeclass.Field5[(A,B,C,D,E),E]", "kind" : "implicit final def"}, {"label" : "fifth", "tail" : "(ev: Field5[(A, B, C, D, E), E]): Lens[(A, B, C, D, E), E]", "member" : "proptics.instances.Field5Instances.fifth", "link" : "proptics\/instances\/package$$fields$.html#fifth[A,B,C,D,E](implicitev:proptics.typeclass.Field5[(A,B,C,D,E),E]):proptics.Lens[(A,B,C,D,E),E]", "kind" : "final def"}, {"label" : "field4Tuple5", "tail" : "(): Field4[(A, B, C, D, E), D]", "member" : "proptics.instances.Field4Instances.field4Tuple5", "link" : "proptics\/instances\/package$$fields$.html#field4Tuple5[A,B,C,D,E]:proptics.typeclass.Field4[(A,B,C,D,E),D]", "kind" : "implicit final def"}, {"label" : "field4Tuple4", "tail" : "(): Field4[(A, B, C, D), D]", "member" : "proptics.instances.Field4Instances.field4Tuple4", "link" : "proptics\/instances\/package$$fields$.html#field4Tuple4[A,B,C,D]:proptics.typeclass.Field4[(A,B,C,D),D]", "kind" : "implicit final def"}, {"label" : "fourth", "tail" : "(ev: Field4[(A, B, C, D), D]): Lens[(A, B, C, D), D]", "member" : "proptics.instances.Field4Instances.fourth", "link" : "proptics\/instances\/package$$fields$.html#fourth[A,B,C,D](implicitev:proptics.typeclass.Field4[(A,B,C,D),D]):proptics.Lens[(A,B,C,D),D]", "kind" : "final def"}, {"label" : "field3Tuple5", "tail" : "(): Field3[(A, B, C, D, E), C]", "member" : "proptics.instances.Field3Instances.field3Tuple5", "link" : "proptics\/instances\/package$$fields$.html#field3Tuple5[A,B,C,D,E]:proptics.typeclass.Field3[(A,B,C,D,E),C]", "kind" : "implicit final def"}, {"label" : "field3Tuple4", "tail" : "(): Field3[(A, B, C, D), C]", "member" : "proptics.instances.Field3Instances.field3Tuple4", "link" : "proptics\/instances\/package$$fields$.html#field3Tuple4[A,B,C,D]:proptics.typeclass.Field3[(A,B,C,D),C]", "kind" : "implicit final def"}, {"label" : "field3Tuple3", "tail" : "(): Field3[(A, B, C), C]", "member" : "proptics.instances.Field3Instances.field3Tuple3", "link" : "proptics\/instances\/package$$fields$.html#field3Tuple3[A,B,C]:proptics.typeclass.Field3[(A,B,C),C]", "kind" : "implicit final def"}, {"label" : "third", "tail" : "(ev: Field3[(A, B, C), C]): Lens[(A, B, C), C]", "member" : "proptics.instances.Field3Instances.third", "link" : "proptics\/instances\/package$$fields$.html#third[A,B,C](implicitev:proptics.typeclass.Field3[(A,B,C),C]):proptics.Lens[(A,B,C),C]", "kind" : "final def"}, {"label" : "field2Tuple5", "tail" : "(): Field2[(A, B, C, D, E), B]", "member" : "proptics.instances.Field2Instances.field2Tuple5", "link" : "proptics\/instances\/package$$fields$.html#field2Tuple5[A,B,C,D,E]:proptics.typeclass.Field2[(A,B,C,D,E),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple4", "tail" : "(): Field2[(A, B, C, D), B]", "member" : "proptics.instances.Field2Instances.field2Tuple4", "link" : "proptics\/instances\/package$$fields$.html#field2Tuple4[A,B,C,D]:proptics.typeclass.Field2[(A,B,C,D),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple3", "tail" : "(): Field2[(A, B, C), B]", "member" : "proptics.instances.Field2Instances.field2Tuple3", "link" : "proptics\/instances\/package$$fields$.html#field2Tuple3[A,B,C]:proptics.typeclass.Field2[(A,B,C),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple2", "tail" : "(): Field2[(A, B), B]", "member" : "proptics.instances.Field2Instances.field2Tuple2", "link" : "proptics\/instances\/package$$fields$.html#field2Tuple2[A,B]:proptics.typeclass.Field2[(A,B),B]", "kind" : "implicit final def"}, {"label" : "second", "tail" : "(ev: Field2[(A, B), B]): Lens[(A, B), B]", "member" : "proptics.instances.Field2Instances.second", "link" : "proptics\/instances\/package$$fields$.html#second[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.Lens[(A,B),B]", "kind" : "final def"}, {"label" : "field1Tuple5", "tail" : "(): Field1[(A, B, C, D, E), A]", "member" : "proptics.instances.Field1Instances.field1Tuple5", "link" : "proptics\/instances\/package$$fields$.html#field1Tuple5[A,B,C,D,E]:proptics.typeclass.Field1[(A,B,C,D,E),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple4", "tail" : "(): Field1[(A, B, C, D), A]", "member" : "proptics.instances.Field1Instances.field1Tuple4", "link" : "proptics\/instances\/package$$fields$.html#field1Tuple4[A,B,C,D]:proptics.typeclass.Field1[(A,B,C,D),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple3", "tail" : "(): Field1[(A, B, C), A]", "member" : "proptics.instances.Field1Instances.field1Tuple3", "link" : "proptics\/instances\/package$$fields$.html#field1Tuple3[A,B,C]:proptics.typeclass.Field1[(A,B,C),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple2", "tail" : "(): Field1[(A, B), A]", "member" : "proptics.instances.Field1Instances.field1Tuple2", "link" : "proptics\/instances\/package$$fields$.html#field1Tuple2[A,B]:proptics.typeclass.Field1[(A,B),A]", "kind" : "implicit final def"}, {"label" : "first", "tail" : "(ev: Field1[(A, B), A]): Lens[(A, B), A]", "member" : "proptics.instances.Field1Instances.first", "link" : "proptics\/instances\/package$$fields$.html#first[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.Lens[(A,B),A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$fields$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$fields$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$fields$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$fields$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$fields$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$fields$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$fields$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$fields$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$fields$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$fields$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$fields$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$fields$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$fields$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$fields$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$fields$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$fields$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$fields$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$fields$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$fields$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.FieldsInstances", "trait" : "proptics\/instances\/FieldsInstances.html", "kind" : "trait", "members_trait" : [{"label" : "field5Tuple5", "tail" : "(): Field5[(A, B, C, D, E), E]", "member" : "proptics.instances.Field5Instances.field5Tuple5", "link" : "proptics\/instances\/FieldsInstances.html#field5Tuple5[A,B,C,D,E]:proptics.typeclass.Field5[(A,B,C,D,E),E]", "kind" : "implicit final def"}, {"label" : "fifth", "tail" : "(ev: Field5[(A, B, C, D, E), E]): Lens[(A, B, C, D, E), E]", "member" : "proptics.instances.Field5Instances.fifth", "link" : "proptics\/instances\/FieldsInstances.html#fifth[A,B,C,D,E](implicitev:proptics.typeclass.Field5[(A,B,C,D,E),E]):proptics.Lens[(A,B,C,D,E),E]", "kind" : "final def"}, {"label" : "field4Tuple5", "tail" : "(): Field4[(A, B, C, D, E), D]", "member" : "proptics.instances.Field4Instances.field4Tuple5", "link" : "proptics\/instances\/FieldsInstances.html#field4Tuple5[A,B,C,D,E]:proptics.typeclass.Field4[(A,B,C,D,E),D]", "kind" : "implicit final def"}, {"label" : "field4Tuple4", "tail" : "(): Field4[(A, B, C, D), D]", "member" : "proptics.instances.Field4Instances.field4Tuple4", "link" : "proptics\/instances\/FieldsInstances.html#field4Tuple4[A,B,C,D]:proptics.typeclass.Field4[(A,B,C,D),D]", "kind" : "implicit final def"}, {"label" : "fourth", "tail" : "(ev: Field4[(A, B, C, D), D]): Lens[(A, B, C, D), D]", "member" : "proptics.instances.Field4Instances.fourth", "link" : "proptics\/instances\/FieldsInstances.html#fourth[A,B,C,D](implicitev:proptics.typeclass.Field4[(A,B,C,D),D]):proptics.Lens[(A,B,C,D),D]", "kind" : "final def"}, {"label" : "field3Tuple5", "tail" : "(): Field3[(A, B, C, D, E), C]", "member" : "proptics.instances.Field3Instances.field3Tuple5", "link" : "proptics\/instances\/FieldsInstances.html#field3Tuple5[A,B,C,D,E]:proptics.typeclass.Field3[(A,B,C,D,E),C]", "kind" : "implicit final def"}, {"label" : "field3Tuple4", "tail" : "(): Field3[(A, B, C, D), C]", "member" : "proptics.instances.Field3Instances.field3Tuple4", "link" : "proptics\/instances\/FieldsInstances.html#field3Tuple4[A,B,C,D]:proptics.typeclass.Field3[(A,B,C,D),C]", "kind" : "implicit final def"}, {"label" : "field3Tuple3", "tail" : "(): Field3[(A, B, C), C]", "member" : "proptics.instances.Field3Instances.field3Tuple3", "link" : "proptics\/instances\/FieldsInstances.html#field3Tuple3[A,B,C]:proptics.typeclass.Field3[(A,B,C),C]", "kind" : "implicit final def"}, {"label" : "third", "tail" : "(ev: Field3[(A, B, C), C]): Lens[(A, B, C), C]", "member" : "proptics.instances.Field3Instances.third", "link" : "proptics\/instances\/FieldsInstances.html#third[A,B,C](implicitev:proptics.typeclass.Field3[(A,B,C),C]):proptics.Lens[(A,B,C),C]", "kind" : "final def"}, {"label" : "field2Tuple5", "tail" : "(): Field2[(A, B, C, D, E), B]", "member" : "proptics.instances.Field2Instances.field2Tuple5", "link" : "proptics\/instances\/FieldsInstances.html#field2Tuple5[A,B,C,D,E]:proptics.typeclass.Field2[(A,B,C,D,E),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple4", "tail" : "(): Field2[(A, B, C, D), B]", "member" : "proptics.instances.Field2Instances.field2Tuple4", "link" : "proptics\/instances\/FieldsInstances.html#field2Tuple4[A,B,C,D]:proptics.typeclass.Field2[(A,B,C,D),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple3", "tail" : "(): Field2[(A, B, C), B]", "member" : "proptics.instances.Field2Instances.field2Tuple3", "link" : "proptics\/instances\/FieldsInstances.html#field2Tuple3[A,B,C]:proptics.typeclass.Field2[(A,B,C),B]", "kind" : "implicit final def"}, {"label" : "field2Tuple2", "tail" : "(): Field2[(A, B), B]", "member" : "proptics.instances.Field2Instances.field2Tuple2", "link" : "proptics\/instances\/FieldsInstances.html#field2Tuple2[A,B]:proptics.typeclass.Field2[(A,B),B]", "kind" : "implicit final def"}, {"label" : "second", "tail" : "(ev: Field2[(A, B), B]): Lens[(A, B), B]", "member" : "proptics.instances.Field2Instances.second", "link" : "proptics\/instances\/FieldsInstances.html#second[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.Lens[(A,B),B]", "kind" : "final def"}, {"label" : "field1Tuple5", "tail" : "(): Field1[(A, B, C, D, E), A]", "member" : "proptics.instances.Field1Instances.field1Tuple5", "link" : "proptics\/instances\/FieldsInstances.html#field1Tuple5[A,B,C,D,E]:proptics.typeclass.Field1[(A,B,C,D,E),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple4", "tail" : "(): Field1[(A, B, C, D), A]", "member" : "proptics.instances.Field1Instances.field1Tuple4", "link" : "proptics\/instances\/FieldsInstances.html#field1Tuple4[A,B,C,D]:proptics.typeclass.Field1[(A,B,C,D),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple3", "tail" : "(): Field1[(A, B, C), A]", "member" : "proptics.instances.Field1Instances.field1Tuple3", "link" : "proptics\/instances\/FieldsInstances.html#field1Tuple3[A,B,C]:proptics.typeclass.Field1[(A,B,C),A]", "kind" : "implicit final def"}, {"label" : "field1Tuple2", "tail" : "(): Field1[(A, B), A]", "member" : "proptics.instances.Field1Instances.field1Tuple2", "link" : "proptics\/instances\/FieldsInstances.html#field1Tuple2[A,B]:proptics.typeclass.Field1[(A,B),A]", "kind" : "implicit final def"}, {"label" : "first", "tail" : "(ev: Field1[(A, B), A]): Lens[(A, B), A]", "member" : "proptics.instances.Field1Instances.first", "link" : "proptics\/instances\/FieldsInstances.html#first[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.Lens[(A,B),A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/FieldsInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/FieldsInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/FieldsInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/FieldsInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/FieldsInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/FieldsInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/FieldsInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/FieldsInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/FieldsInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/FieldsInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/FieldsInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/FieldsInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/FieldsInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/FieldsInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/FieldsInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/FieldsInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/FieldsInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/FieldsInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/FieldsInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.foldableWithIndex", "shortDescription" : "", "object" : "proptics\/instances\/package$$foldableWithIndex$.html", "members_object" : [{"label" : "foldableWithIndexNonEmptyMap", "tail" : "(): FoldableWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K, β$6$], K]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyMap", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#foldableWithIndexNonEmptyMap[K]:proptics.indices.FoldableWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K,β$6$],K]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexOneAnd", "tail" : "(arg0: Foldable[F]): FoldableWithIndex[[β$4$]OneAnd[F, β$4$], Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexOneAnd", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#foldableWithIndexOneAnd[F[_]](implicitevidence$1:cats.Foldable[F]):proptics.indices.FoldableWithIndex[[β$4$]cats.data.OneAnd[F,β$4$],Int]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexNonEmptyChain", "tail" : ": FoldableWithIndex[NonEmptyChain, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyChain", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#foldableWithIndexNonEmptyChain:proptics.indices.FoldableWithIndex[cats.data.NonEmptyChain,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexNonEmptyList", "tail" : ": FoldableWithIndex[NonEmptyList, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyList", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#foldableWithIndexNonEmptyList:proptics.indices.FoldableWithIndex[cats.data.NonEmptyList,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexNonEmptyVector", "tail" : ": FoldableWithIndex[NonEmptyVector, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyVector", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#foldableWithIndexNonEmptyVector:proptics.indices.FoldableWithIndex[cats.data.NonEmptyVector,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexChain", "tail" : ": FoldableWithIndex[Chain, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexChain", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#foldableWithIndexChain:proptics.indices.FoldableWithIndex[cats.data.Chain,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexMap", "tail" : "(): FoldableWithIndex[[β$2$]Map[K, β$2$], K]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexMap", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#foldableWithIndexMap[K]:proptics.indices.FoldableWithIndex[[β$2$]scala.collection.immutable.Map[K,β$2$],K]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexListMap", "tail" : "(): FoldableWithIndex[[β$0$]ListMap[K, β$0$], K]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexListMap", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#foldableWithIndexListMap[K]:proptics.indices.FoldableWithIndex[[β$0$]scala.collection.immutable.ListMap[K,β$0$],K]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexList", "tail" : ": FoldableWithIndex[List, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexList", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#foldableWithIndexList:proptics.indices.FoldableWithIndex[List,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexVector", "tail" : ": FoldableWithIndex[Vector, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexVector", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#foldableWithIndexVector:proptics.indices.FoldableWithIndex[Vector,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexOption", "tail" : ": FoldableWithIndex[Option, Unit]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexOption", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#foldableWithIndexOption:proptics.indices.FoldableWithIndex[Option,Unit]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexArraySeq", "tail" : ": FoldableWithIndex[ArraySeq, Int]", "member" : "proptics.instances.ScalaVersionSpecificFoldableWithIndexInstances.foldableWithIndexArraySeq", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#foldableWithIndexArraySeq:proptics.indices.FoldableWithIndex[collection.compat.immutable.ArraySeq,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexLazyList", "tail" : ": FoldableWithIndex[LazyList, Int]", "member" : "proptics.instances.ScalaVersionSpecificFoldableWithIndexInstances.foldableWithIndexLazyList", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#foldableWithIndexLazyList:proptics.indices.FoldableWithIndex[LazyList,Int]", "kind" : "implicit final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$foldableWithIndex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$foldableWithIndex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.FoldableWithIndexInstances", "trait" : "proptics\/instances\/FoldableWithIndexInstances.html", "kind" : "trait", "members_trait" : [{"label" : "foldableWithIndexNonEmptyMap", "tail" : "(): FoldableWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K, β$6$], K]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyMap", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#foldableWithIndexNonEmptyMap[K]:proptics.indices.FoldableWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K,β$6$],K]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexOneAnd", "tail" : "(arg0: Foldable[F]): FoldableWithIndex[[β$4$]OneAnd[F, β$4$], Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexOneAnd", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#foldableWithIndexOneAnd[F[_]](implicitevidence$1:cats.Foldable[F]):proptics.indices.FoldableWithIndex[[β$4$]cats.data.OneAnd[F,β$4$],Int]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexNonEmptyChain", "tail" : ": FoldableWithIndex[NonEmptyChain, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyChain", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#foldableWithIndexNonEmptyChain:proptics.indices.FoldableWithIndex[cats.data.NonEmptyChain,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexNonEmptyList", "tail" : ": FoldableWithIndex[NonEmptyList, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyList", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#foldableWithIndexNonEmptyList:proptics.indices.FoldableWithIndex[cats.data.NonEmptyList,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexNonEmptyVector", "tail" : ": FoldableWithIndex[NonEmptyVector, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexNonEmptyVector", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#foldableWithIndexNonEmptyVector:proptics.indices.FoldableWithIndex[cats.data.NonEmptyVector,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexChain", "tail" : ": FoldableWithIndex[Chain, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexChain", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#foldableWithIndexChain:proptics.indices.FoldableWithIndex[cats.data.Chain,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexMap", "tail" : "(): FoldableWithIndex[[β$2$]Map[K, β$2$], K]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexMap", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#foldableWithIndexMap[K]:proptics.indices.FoldableWithIndex[[β$2$]scala.collection.immutable.Map[K,β$2$],K]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexListMap", "tail" : "(): FoldableWithIndex[[β$0$]ListMap[K, β$0$], K]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexListMap", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#foldableWithIndexListMap[K]:proptics.indices.FoldableWithIndex[[β$0$]scala.collection.immutable.ListMap[K,β$0$],K]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexList", "tail" : ": FoldableWithIndex[List, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexList", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#foldableWithIndexList:proptics.indices.FoldableWithIndex[List,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexVector", "tail" : ": FoldableWithIndex[Vector, Int]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexVector", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#foldableWithIndexVector:proptics.indices.FoldableWithIndex[Vector,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexOption", "tail" : ": FoldableWithIndex[Option, Unit]", "member" : "proptics.instances.FoldableWithIndexInstances.foldableWithIndexOption", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#foldableWithIndexOption:proptics.indices.FoldableWithIndex[Option,Unit]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexArraySeq", "tail" : ": FoldableWithIndex[ArraySeq, Int]", "member" : "proptics.instances.ScalaVersionSpecificFoldableWithIndexInstances.foldableWithIndexArraySeq", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#foldableWithIndexArraySeq:proptics.indices.FoldableWithIndex[collection.compat.immutable.ArraySeq,Int]", "kind" : "implicit final val"}, {"label" : "foldableWithIndexLazyList", "tail" : ": FoldableWithIndex[LazyList, Int]", "member" : "proptics.instances.ScalaVersionSpecificFoldableWithIndexInstances.foldableWithIndexLazyList", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#foldableWithIndexLazyList:proptics.indices.FoldableWithIndex[LazyList,Int]", "kind" : "implicit final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/FoldableWithIndexInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/FoldableWithIndexInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.functorWithIndex", "shortDescription" : "", "object" : "proptics\/instances\/package$$functorWithIndex$.html", "members_object" : [{"label" : "functorWithIndexNonEmptyMap", "tail" : "(arg0: Order[K]): FunctorWithIndex[[β$7$]cats.data.NonEmptyMapImpl.Type[K, β$7$], K]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyMap", "link" : "proptics\/instances\/package$$functorWithIndex$.html#functorWithIndexNonEmptyMap[K](implicitevidence$2:cats.Order[K]):proptics.indices.FunctorWithIndex[[β$7$]cats.data.NonEmptyMapImpl.Type[K,β$7$],K]", "kind" : "implicit final def"}, {"label" : "functorWithIndexOneAnd", "tail" : "(arg0: Traverse[F]): FunctorWithIndex[[β$4$]OneAnd[F, β$4$], Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexOneAnd", "link" : "proptics\/instances\/package$$functorWithIndex$.html#functorWithIndexOneAnd[F[_]](implicitevidence$1:cats.Traverse[F]):proptics.indices.FunctorWithIndex[[β$4$]cats.data.OneAnd[F,β$4$],Int]", "kind" : "implicit final def"}, {"label" : "functorWithIndexNonEmptyChain", "tail" : ": FunctorWithIndex[NonEmptyChain, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyChain", "link" : "proptics\/instances\/package$$functorWithIndex$.html#functorWithIndexNonEmptyChain:proptics.indices.FunctorWithIndex[cats.data.NonEmptyChain,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexChain", "tail" : ": FunctorWithIndex[Chain, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexChain", "link" : "proptics\/instances\/package$$functorWithIndex$.html#functorWithIndexChain:proptics.indices.FunctorWithIndex[cats.data.Chain,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexNonEmptyList", "tail" : ": FunctorWithIndex[NonEmptyList, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyList", "link" : "proptics\/instances\/package$$functorWithIndex$.html#functorWithIndexNonEmptyList:proptics.indices.FunctorWithIndex[cats.data.NonEmptyList,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexNonEmptyVector", "tail" : ": FunctorWithIndex[NonEmptyVector, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyVector", "link" : "proptics\/instances\/package$$functorWithIndex$.html#functorWithIndexNonEmptyVector:proptics.indices.FunctorWithIndex[cats.data.NonEmptyVector,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexMap", "tail" : "(): FunctorWithIndex[[β$2$]Map[K, β$2$], K]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexMap", "link" : "proptics\/instances\/package$$functorWithIndex$.html#functorWithIndexMap[K]:proptics.indices.FunctorWithIndex[[β$2$]scala.collection.immutable.Map[K,β$2$],K]", "kind" : "implicit final def"}, {"label" : "functorWithIndexListMap", "tail" : "(): FunctorWithIndex[[β$0$]ListMap[K, β$0$], K]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexListMap", "link" : "proptics\/instances\/package$$functorWithIndex$.html#functorWithIndexListMap[K]:proptics.indices.FunctorWithIndex[[β$0$]scala.collection.immutable.ListMap[K,β$0$],K]", "kind" : "implicit final def"}, {"label" : "functorWithIndexList", "tail" : ": FunctorWithIndex[List, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexList", "link" : "proptics\/instances\/package$$functorWithIndex$.html#functorWithIndexList:proptics.indices.FunctorWithIndex[List,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexVector", "tail" : ": FunctorWithIndex[Vector, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexVector", "link" : "proptics\/instances\/package$$functorWithIndex$.html#functorWithIndexVector:proptics.indices.FunctorWithIndex[Vector,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexOption", "tail" : ": FunctorWithIndex[Option, Unit]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexOption", "link" : "proptics\/instances\/package$$functorWithIndex$.html#functorWithIndexOption:proptics.indices.FunctorWithIndex[Option,Unit]", "kind" : "implicit final val"}, {"label" : "functorWithIndexArraySeq", "tail" : ": FunctorWithIndex[ArraySeq, Int]", "member" : "proptics.instances.ScalaVersionSpecificFunctorWithIndexInstances.functorWithIndexArraySeq", "link" : "proptics\/instances\/package$$functorWithIndex$.html#functorWithIndexArraySeq:proptics.indices.FunctorWithIndex[collection.compat.immutable.ArraySeq,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexLazyList", "tail" : ": FunctorWithIndex[LazyList, Int]", "member" : "proptics.instances.ScalaVersionSpecificFunctorWithIndexInstances.functorWithIndexLazyList", "link" : "proptics\/instances\/package$$functorWithIndex$.html#functorWithIndexLazyList:proptics.indices.FunctorWithIndex[LazyList,Int]", "kind" : "implicit final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$functorWithIndex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$functorWithIndex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$functorWithIndex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$functorWithIndex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$functorWithIndex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$functorWithIndex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$functorWithIndex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$functorWithIndex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$functorWithIndex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$functorWithIndex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$functorWithIndex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$functorWithIndex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$functorWithIndex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$functorWithIndex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$functorWithIndex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$functorWithIndex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$functorWithIndex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$functorWithIndex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$functorWithIndex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.FunctorWithIndexInstances", "trait" : "proptics\/instances\/FunctorWithIndexInstances.html", "kind" : "trait", "members_trait" : [{"label" : "functorWithIndexNonEmptyMap", "tail" : "(arg0: Order[K]): FunctorWithIndex[[β$7$]cats.data.NonEmptyMapImpl.Type[K, β$7$], K]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyMap", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#functorWithIndexNonEmptyMap[K](implicitevidence$2:cats.Order[K]):proptics.indices.FunctorWithIndex[[β$7$]cats.data.NonEmptyMapImpl.Type[K,β$7$],K]", "kind" : "implicit final def"}, {"label" : "functorWithIndexOneAnd", "tail" : "(arg0: Traverse[F]): FunctorWithIndex[[β$4$]OneAnd[F, β$4$], Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexOneAnd", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#functorWithIndexOneAnd[F[_]](implicitevidence$1:cats.Traverse[F]):proptics.indices.FunctorWithIndex[[β$4$]cats.data.OneAnd[F,β$4$],Int]", "kind" : "implicit final def"}, {"label" : "functorWithIndexNonEmptyChain", "tail" : ": FunctorWithIndex[NonEmptyChain, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyChain", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#functorWithIndexNonEmptyChain:proptics.indices.FunctorWithIndex[cats.data.NonEmptyChain,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexChain", "tail" : ": FunctorWithIndex[Chain, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexChain", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#functorWithIndexChain:proptics.indices.FunctorWithIndex[cats.data.Chain,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexNonEmptyList", "tail" : ": FunctorWithIndex[NonEmptyList, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyList", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#functorWithIndexNonEmptyList:proptics.indices.FunctorWithIndex[cats.data.NonEmptyList,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexNonEmptyVector", "tail" : ": FunctorWithIndex[NonEmptyVector, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexNonEmptyVector", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#functorWithIndexNonEmptyVector:proptics.indices.FunctorWithIndex[cats.data.NonEmptyVector,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexMap", "tail" : "(): FunctorWithIndex[[β$2$]Map[K, β$2$], K]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexMap", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#functorWithIndexMap[K]:proptics.indices.FunctorWithIndex[[β$2$]scala.collection.immutable.Map[K,β$2$],K]", "kind" : "implicit final def"}, {"label" : "functorWithIndexListMap", "tail" : "(): FunctorWithIndex[[β$0$]ListMap[K, β$0$], K]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexListMap", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#functorWithIndexListMap[K]:proptics.indices.FunctorWithIndex[[β$0$]scala.collection.immutable.ListMap[K,β$0$],K]", "kind" : "implicit final def"}, {"label" : "functorWithIndexList", "tail" : ": FunctorWithIndex[List, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexList", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#functorWithIndexList:proptics.indices.FunctorWithIndex[List,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexVector", "tail" : ": FunctorWithIndex[Vector, Int]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexVector", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#functorWithIndexVector:proptics.indices.FunctorWithIndex[Vector,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexOption", "tail" : ": FunctorWithIndex[Option, Unit]", "member" : "proptics.instances.FunctorWithIndexInstances.functorWithIndexOption", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#functorWithIndexOption:proptics.indices.FunctorWithIndex[Option,Unit]", "kind" : "implicit final val"}, {"label" : "functorWithIndexArraySeq", "tail" : ": FunctorWithIndex[ArraySeq, Int]", "member" : "proptics.instances.ScalaVersionSpecificFunctorWithIndexInstances.functorWithIndexArraySeq", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#functorWithIndexArraySeq:proptics.indices.FunctorWithIndex[collection.compat.immutable.ArraySeq,Int]", "kind" : "implicit final val"}, {"label" : "functorWithIndexLazyList", "tail" : ": FunctorWithIndex[LazyList, Int]", "member" : "proptics.instances.ScalaVersionSpecificFunctorWithIndexInstances.functorWithIndexLazyList", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#functorWithIndexLazyList:proptics.indices.FunctorWithIndex[LazyList,Int]", "kind" : "implicit final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/FunctorWithIndexInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/FunctorWithIndexInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.index", "shortDescription" : "", "object" : "proptics\/instances\/package$$index$.html", "members_object" : [{"label" : "indexNonEmptyChain", "tail" : "(): Index[NonEmptyChain[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexNonEmptyChain", "link" : "proptics\/instances\/package$$index$.html#indexNonEmptyChain[A]:proptics.typeclass.Index[cats.data.NonEmptyChain[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexNonEmptyMap", "tail" : "(): Index[NonEmptyMap[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexNonEmptyMap", "link" : "proptics\/instances\/package$$index$.html#indexNonEmptyMap[K,V]:proptics.typeclass.Index[cats.data.NonEmptyMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexNonEmptySet", "tail" : "(arg0: Eq[A]): Index[NonEmptySet[A], A, Unit]", "member" : "proptics.instances.IndexInstances.indexNonEmptySet", "link" : "proptics\/instances\/package$$index$.html#indexNonEmptySet[A](implicitevidence$3:cats.Eq[A]):proptics.typeclass.Index[cats.data.NonEmptySet[A],A,Unit]", "kind" : "implicit final def"}, {"label" : "indexNonEmptyList", "tail" : "(): Index[NonEmptyList[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexNonEmptyList", "link" : "proptics\/instances\/package$$index$.html#indexNonEmptyList[A]:proptics.typeclass.Index[cats.data.NonEmptyList[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexNonEmptyVector", "tail" : "(): Index[NonEmptyVector[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexNonEmptyVector", "link" : "proptics\/instances\/package$$index$.html#indexNonEmptyVector[A]:proptics.typeclass.Index[cats.data.NonEmptyVector[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexChain", "tail" : "(): Index[Chain[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexChain", "link" : "proptics\/instances\/package$$index$.html#indexChain[A]:proptics.typeclass.Index[cats.data.Chain[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexMap", "tail" : "(): Index[Map[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexMap", "link" : "proptics\/instances\/package$$index$.html#indexMap[K,V]:proptics.typeclass.Index[Map[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexSortedMap", "tail" : "(): Index[SortedMap[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexSortedMap", "link" : "proptics\/instances\/package$$index$.html#indexSortedMap[K,V]:proptics.typeclass.Index[scala.collection.immutable.SortedMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexSet", "tail" : "(): Index[Set[A], A, Unit]", "member" : "proptics.instances.IndexInstances.indexSet", "link" : "proptics\/instances\/package$$index$.html#indexSet[A]:proptics.typeclass.Index[Set[A],A,Unit]", "kind" : "implicit final def"}, {"label" : "indexListMap", "tail" : "(): Index[ListMap[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexListMap", "link" : "proptics\/instances\/package$$index$.html#indexListMap[K,V]:proptics.typeclass.Index[scala.collection.immutable.ListMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexList", "tail" : "(): Index[List[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexList", "link" : "proptics\/instances\/package$$index$.html#indexList[A]:proptics.typeclass.Index[List[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexVector", "tail" : "(): Index[Vector[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexVector", "link" : "proptics\/instances\/package$$index$.html#indexVector[A]:proptics.typeclass.Index[Vector[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexArray", "tail" : "(arg0: ClassTag[A]): Index[Array[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexArray", "link" : "proptics\/instances\/package$$index$.html#indexArray[A](implicitevidence$2:scala.reflect.ClassTag[A]):proptics.typeclass.Index[Array[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexOption", "tail" : "(): Index[Option[A], Unit, A]", "member" : "proptics.instances.IndexInstances.indexOption", "link" : "proptics\/instances\/package$$index$.html#indexOption[A]:proptics.typeclass.Index[Option[A],Unit,A]", "kind" : "implicit final def"}, {"label" : "indexArrow", "tail" : "(arg0: Eq[I]): Index[(I) => A, I, A]", "member" : "proptics.instances.IndexInstances.indexArrow", "link" : "proptics\/instances\/package$$index$.html#indexArrow[I,A](implicitevidence$1:cats.Eq[I]):proptics.typeclass.Index[I=>A,I,A]", "kind" : "implicit final def"}, {"label" : "fromAt", "tail" : "(ev: At[S, I, A]): Index[S, I, A]", "member" : "proptics.instances.IndexInstances.fromAt", "link" : "proptics\/instances\/package$$index$.html#fromAt[S,I,A](implicitev:proptics.typeclass.At[S,I,A]):proptics.typeclass.Index[S,I,A]", "kind" : "final def"}, {"label" : "index", "tail" : "(i: I)(ev: Index[S, I, A]): AffineTraversal[S, A]", "member" : "proptics.instances.IndexInstances.index", "link" : "proptics\/instances\/package$$index$.html#index[S,I,A](i:I)(implicitev:proptics.typeclass.Index[S,I,A]):proptics.AffineTraversal[S,A]", "kind" : "final def"}, {"label" : "indexArraySeq", "tail" : "(): Index[ArraySeq[A], Int, A]", "member" : "proptics.instances.ScalaVersionSpecificIndexInstances.indexArraySeq", "link" : "proptics\/instances\/package$$index$.html#indexArraySeq[A]:proptics.typeclass.Index[scala.collection.immutable.ArraySeq[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexLazyList", "tail" : "(): Index[LazyList[A], Int, A]", "member" : "proptics.instances.ScalaVersionSpecificIndexInstances.indexLazyList", "link" : "proptics\/instances\/package$$index$.html#indexLazyList[A]:proptics.typeclass.Index[scala.collection.immutable.LazyList[A],Int,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$index$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$index$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$index$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$index$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$index$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$index$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$index$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$index$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$index$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$index$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$index$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$index$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$index$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$index$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$index$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$index$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$index$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$index$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$index$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.IndexInstances", "trait" : "proptics\/instances\/IndexInstances.html", "kind" : "trait", "members_trait" : [{"label" : "indexNonEmptyChain", "tail" : "(): Index[NonEmptyChain[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexNonEmptyChain", "link" : "proptics\/instances\/IndexInstances.html#indexNonEmptyChain[A]:proptics.typeclass.Index[cats.data.NonEmptyChain[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexNonEmptyMap", "tail" : "(): Index[NonEmptyMap[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexNonEmptyMap", "link" : "proptics\/instances\/IndexInstances.html#indexNonEmptyMap[K,V]:proptics.typeclass.Index[cats.data.NonEmptyMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexNonEmptySet", "tail" : "(arg0: Eq[A]): Index[NonEmptySet[A], A, Unit]", "member" : "proptics.instances.IndexInstances.indexNonEmptySet", "link" : "proptics\/instances\/IndexInstances.html#indexNonEmptySet[A](implicitevidence$3:cats.Eq[A]):proptics.typeclass.Index[cats.data.NonEmptySet[A],A,Unit]", "kind" : "implicit final def"}, {"label" : "indexNonEmptyList", "tail" : "(): Index[NonEmptyList[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexNonEmptyList", "link" : "proptics\/instances\/IndexInstances.html#indexNonEmptyList[A]:proptics.typeclass.Index[cats.data.NonEmptyList[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexNonEmptyVector", "tail" : "(): Index[NonEmptyVector[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexNonEmptyVector", "link" : "proptics\/instances\/IndexInstances.html#indexNonEmptyVector[A]:proptics.typeclass.Index[cats.data.NonEmptyVector[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexChain", "tail" : "(): Index[Chain[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexChain", "link" : "proptics\/instances\/IndexInstances.html#indexChain[A]:proptics.typeclass.Index[cats.data.Chain[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexMap", "tail" : "(): Index[Map[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexMap", "link" : "proptics\/instances\/IndexInstances.html#indexMap[K,V]:proptics.typeclass.Index[Map[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexSortedMap", "tail" : "(): Index[SortedMap[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexSortedMap", "link" : "proptics\/instances\/IndexInstances.html#indexSortedMap[K,V]:proptics.typeclass.Index[scala.collection.immutable.SortedMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexSet", "tail" : "(): Index[Set[A], A, Unit]", "member" : "proptics.instances.IndexInstances.indexSet", "link" : "proptics\/instances\/IndexInstances.html#indexSet[A]:proptics.typeclass.Index[Set[A],A,Unit]", "kind" : "implicit final def"}, {"label" : "indexListMap", "tail" : "(): Index[ListMap[K, V], K, V]", "member" : "proptics.instances.IndexInstances.indexListMap", "link" : "proptics\/instances\/IndexInstances.html#indexListMap[K,V]:proptics.typeclass.Index[scala.collection.immutable.ListMap[K,V],K,V]", "kind" : "implicit final def"}, {"label" : "indexList", "tail" : "(): Index[List[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexList", "link" : "proptics\/instances\/IndexInstances.html#indexList[A]:proptics.typeclass.Index[List[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexVector", "tail" : "(): Index[Vector[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexVector", "link" : "proptics\/instances\/IndexInstances.html#indexVector[A]:proptics.typeclass.Index[Vector[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexArray", "tail" : "(arg0: ClassTag[A]): Index[Array[A], Int, A]", "member" : "proptics.instances.IndexInstances.indexArray", "link" : "proptics\/instances\/IndexInstances.html#indexArray[A](implicitevidence$2:scala.reflect.ClassTag[A]):proptics.typeclass.Index[Array[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexOption", "tail" : "(): Index[Option[A], Unit, A]", "member" : "proptics.instances.IndexInstances.indexOption", "link" : "proptics\/instances\/IndexInstances.html#indexOption[A]:proptics.typeclass.Index[Option[A],Unit,A]", "kind" : "implicit final def"}, {"label" : "indexArrow", "tail" : "(arg0: Eq[I]): Index[(I) => A, I, A]", "member" : "proptics.instances.IndexInstances.indexArrow", "link" : "proptics\/instances\/IndexInstances.html#indexArrow[I,A](implicitevidence$1:cats.Eq[I]):proptics.typeclass.Index[I=>A,I,A]", "kind" : "implicit final def"}, {"label" : "fromAt", "tail" : "(ev: At[S, I, A]): Index[S, I, A]", "member" : "proptics.instances.IndexInstances.fromAt", "link" : "proptics\/instances\/IndexInstances.html#fromAt[S,I,A](implicitev:proptics.typeclass.At[S,I,A]):proptics.typeclass.Index[S,I,A]", "kind" : "final def"}, {"label" : "index", "tail" : "(i: I)(ev: Index[S, I, A]): AffineTraversal[S, A]", "member" : "proptics.instances.IndexInstances.index", "link" : "proptics\/instances\/IndexInstances.html#index[S,I,A](i:I)(implicitev:proptics.typeclass.Index[S,I,A]):proptics.AffineTraversal[S,A]", "kind" : "final def"}, {"label" : "indexArraySeq", "tail" : "(): Index[ArraySeq[A], Int, A]", "member" : "proptics.instances.ScalaVersionSpecificIndexInstances.indexArraySeq", "link" : "proptics\/instances\/IndexInstances.html#indexArraySeq[A]:proptics.typeclass.Index[scala.collection.immutable.ArraySeq[A],Int,A]", "kind" : "implicit final def"}, {"label" : "indexLazyList", "tail" : "(): Index[LazyList[A], Int, A]", "member" : "proptics.instances.ScalaVersionSpecificIndexInstances.indexLazyList", "link" : "proptics\/instances\/IndexInstances.html#indexLazyList[A]:proptics.typeclass.Index[scala.collection.immutable.LazyList[A],Int,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/IndexInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/IndexInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/IndexInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/IndexInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/IndexInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/IndexInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/IndexInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/IndexInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/IndexInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/IndexInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/IndexInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/IndexInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/IndexInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/IndexInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/IndexInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/IndexInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/IndexInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/IndexInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/IndexInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.nonEmptyCons", "shortDescription" : "", "object" : "proptics\/instances\/package$$nonEmptyCons$.html", "members_object" : [{"label" : "nonEmptyConsOneAnd", "tail" : "(): NonEmptyCons[OneAnd[F, A], A, F[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsOneAnd", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#nonEmptyConsOneAnd[F[_],A]:proptics.typeclass.NonEmptyCons[cats.data.OneAnd[F,A],A,F[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsNonEmptyChain", "tail" : "(): NonEmptyCons[NonEmptyChain[A], A, Chain[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsNonEmptyChain", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#nonEmptyConsNonEmptyChain[A]:proptics.typeclass.NonEmptyCons[cats.data.NonEmptyChain[A],A,cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsNoneEmptyList", "tail" : "(): NonEmptyCons[NonEmptyList[A], A, List[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsNoneEmptyList", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#nonEmptyConsNoneEmptyList[A]:proptics.typeclass.NonEmptyCons[cats.data.NonEmptyList[A],A,List[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsNonEmptyVector", "tail" : "(): NonEmptyCons[NonEmptyVector[A], A, Vector[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsNonEmptyVector", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#nonEmptyConsNonEmptyVector[A]:proptics.typeclass.NonEmptyCons[cats.data.NonEmptyVector[A],A,Vector[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple5", "tail" : "(): NonEmptyCons[(A, B, C, D, E), A, (B, C, D, E)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple5", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#nonEmptyConsTuple5[A,B,C,D,E]:proptics.typeclass.NonEmptyCons[(A,B,C,D,E),A,(B,C,D,E)]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple4", "tail" : "(): NonEmptyCons[(A, B, C, D), A, (B, C, D)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple4", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#nonEmptyConsTuple4[A,B,C,D]:proptics.typeclass.NonEmptyCons[(A,B,C,D),A,(B,C,D)]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple3", "tail" : "(): NonEmptyCons[(A, B, C), A, (B, C)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple3", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#nonEmptyConsTuple3[A,B,C]:proptics.typeclass.NonEmptyCons[(A,B,C),A,(B,C)]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple2", "tail" : "(): NonEmptyCons[(A, B), A, B]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple2", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#nonEmptyConsTuple2[A,B]:proptics.typeclass.NonEmptyCons[(A,B),A,B]", "kind" : "implicit def"}, {"label" : "tail", "tail" : "(ev: NonEmptyCons[S, H, T]): Lens[S, T]", "member" : "proptics.instances.NonEmptyConsInstances.tail", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#tail[S,H,T](implicitev:proptics.typeclass.NonEmptyCons[S,H,T]):proptics.Lens[S,T]", "kind" : "final def"}, {"label" : "head", "tail" : "(ev: NonEmptyCons[S, H, T]): Lens[S, H]", "member" : "proptics.instances.NonEmptyConsInstances.head", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#head[S,H,T](implicitev:proptics.typeclass.NonEmptyCons[S,H,T]):proptics.Lens[S,H]", "kind" : "final def"}, {"label" : "nonEmptyCons", "tail" : "(ev: NonEmptyCons[S, H, T]): Iso[S, (H, T)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyCons", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#nonEmptyCons[S,H,T](implicitev:proptics.typeclass.NonEmptyCons[S,H,T]):proptics.Iso[S,(H,T)]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$nonEmptyCons$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$nonEmptyCons$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.NonEmptyConsInstances", "trait" : "proptics\/instances\/NonEmptyConsInstances.html", "kind" : "trait", "members_trait" : [{"label" : "nonEmptyConsOneAnd", "tail" : "(): NonEmptyCons[OneAnd[F, A], A, F[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsOneAnd", "link" : "proptics\/instances\/NonEmptyConsInstances.html#nonEmptyConsOneAnd[F[_],A]:proptics.typeclass.NonEmptyCons[cats.data.OneAnd[F,A],A,F[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsNonEmptyChain", "tail" : "(): NonEmptyCons[NonEmptyChain[A], A, Chain[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsNonEmptyChain", "link" : "proptics\/instances\/NonEmptyConsInstances.html#nonEmptyConsNonEmptyChain[A]:proptics.typeclass.NonEmptyCons[cats.data.NonEmptyChain[A],A,cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsNoneEmptyList", "tail" : "(): NonEmptyCons[NonEmptyList[A], A, List[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsNoneEmptyList", "link" : "proptics\/instances\/NonEmptyConsInstances.html#nonEmptyConsNoneEmptyList[A]:proptics.typeclass.NonEmptyCons[cats.data.NonEmptyList[A],A,List[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsNonEmptyVector", "tail" : "(): NonEmptyCons[NonEmptyVector[A], A, Vector[A]]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsNonEmptyVector", "link" : "proptics\/instances\/NonEmptyConsInstances.html#nonEmptyConsNonEmptyVector[A]:proptics.typeclass.NonEmptyCons[cats.data.NonEmptyVector[A],A,Vector[A]]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple5", "tail" : "(): NonEmptyCons[(A, B, C, D, E), A, (B, C, D, E)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple5", "link" : "proptics\/instances\/NonEmptyConsInstances.html#nonEmptyConsTuple5[A,B,C,D,E]:proptics.typeclass.NonEmptyCons[(A,B,C,D,E),A,(B,C,D,E)]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple4", "tail" : "(): NonEmptyCons[(A, B, C, D), A, (B, C, D)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple4", "link" : "proptics\/instances\/NonEmptyConsInstances.html#nonEmptyConsTuple4[A,B,C,D]:proptics.typeclass.NonEmptyCons[(A,B,C,D),A,(B,C,D)]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple3", "tail" : "(): NonEmptyCons[(A, B, C), A, (B, C)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple3", "link" : "proptics\/instances\/NonEmptyConsInstances.html#nonEmptyConsTuple3[A,B,C]:proptics.typeclass.NonEmptyCons[(A,B,C),A,(B,C)]", "kind" : "implicit final def"}, {"label" : "nonEmptyConsTuple2", "tail" : "(): NonEmptyCons[(A, B), A, B]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyConsTuple2", "link" : "proptics\/instances\/NonEmptyConsInstances.html#nonEmptyConsTuple2[A,B]:proptics.typeclass.NonEmptyCons[(A,B),A,B]", "kind" : "implicit def"}, {"label" : "tail", "tail" : "(ev: NonEmptyCons[S, H, T]): Lens[S, T]", "member" : "proptics.instances.NonEmptyConsInstances.tail", "link" : "proptics\/instances\/NonEmptyConsInstances.html#tail[S,H,T](implicitev:proptics.typeclass.NonEmptyCons[S,H,T]):proptics.Lens[S,T]", "kind" : "final def"}, {"label" : "head", "tail" : "(ev: NonEmptyCons[S, H, T]): Lens[S, H]", "member" : "proptics.instances.NonEmptyConsInstances.head", "link" : "proptics\/instances\/NonEmptyConsInstances.html#head[S,H,T](implicitev:proptics.typeclass.NonEmptyCons[S,H,T]):proptics.Lens[S,H]", "kind" : "final def"}, {"label" : "nonEmptyCons", "tail" : "(ev: NonEmptyCons[S, H, T]): Iso[S, (H, T)]", "member" : "proptics.instances.NonEmptyConsInstances.nonEmptyCons", "link" : "proptics\/instances\/NonEmptyConsInstances.html#nonEmptyCons[S,H,T](implicitev:proptics.typeclass.NonEmptyCons[S,H,T]):proptics.Iso[S,(H,T)]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/NonEmptyConsInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/NonEmptyConsInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/NonEmptyConsInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/NonEmptyConsInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/NonEmptyConsInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/NonEmptyConsInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/NonEmptyConsInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/NonEmptyConsInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/NonEmptyConsInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/NonEmptyConsInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/NonEmptyConsInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/NonEmptyConsInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/NonEmptyConsInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/NonEmptyConsInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/NonEmptyConsInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/NonEmptyConsInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/NonEmptyConsInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/NonEmptyConsInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/NonEmptyConsInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.partsOf", "shortDescription" : "", "object" : "proptics\/instances\/package$$partsOf$.html", "members_object" : [{"label" : "partsOfSellable", "tail" : "(ev: Aux[[α$2$, β$3$](α$2$) => β$3$, [ε$4$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, List[A], List[A], Unit, ε$4$]]): Sellable[[α$7$, β$8$](α$7$) => β$8$, [β$9$, γ$10$, ε$11$]Bazaar[[α$5$, β$6$](α$5$) => β$6$, β$9$, γ$10$, Unit, ε$11$]]", "member" : "proptics.instances.PartsOf.partsOfSellable", "link" : "proptics\/instances\/package$$partsOf$.html#partsOfSellable[A](implicitev:proptics.profunctor.Corepresentable.Aux[[α$2$,β$3$]α$2$=>β$3$,[ε$4$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,List[A],List[A],Unit,ε$4$]]):proptics.internal.Sellable[[α$7$,β$8$]α$7$=>β$8$,[β$9$,γ$10$,ε$11$]proptics.internal.Bazaar[[α$5$,β$6$]α$5$=>β$6$,β$9$,γ$10$,Unit,ε$11$]]", "kind" : "implicit def"}, {"label" : "corepresentableState", "tail" : "(): Aux[[α$20$, β$21$](α$20$) => β$21$, [β$22$]IndexedStateT[Eval, List[C], List[C], β$22$]]", "member" : "proptics.internal.CorepresentableInstances.corepresentableState", "link" : "proptics\/instances\/package$$partsOf$.html#corepresentableState[C]:proptics.profunctor.Corepresentable.Aux[[α$20$,β$21$]α$20$=>β$21$,[β$22$]cats.data.IndexedStateT[cats.Eval,List[C],List[C],β$22$]]", "kind" : "implicit def"}, {"label" : "corepresentableBazaar", "tail" : "(): Aux[[α$2$, β$3$](α$2$) => β$3$, [ε$4$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, List[C], List[D], Unit, ε$4$]]", "member" : "proptics.internal.CorepresentableInstances.corepresentableBazaar", "link" : "proptics\/instances\/package$$partsOf$.html#corepresentableBazaar[C,D]:proptics.profunctor.Corepresentable.Aux[[α$2$,β$3$]α$2$=>β$3$,[ε$4$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,List[C],List[D],Unit,ε$4$]]", "kind" : "implicit def"}, {"label" : "sellableBazaar", "tail" : "(arg0: Profunctor[P], ev1: Aux[P, G]): Sellable[P, [β$0$, γ$1$, ε$2$]Bazaar[P, β$0$, γ$1$, Unit, ε$2$]]", "member" : "proptics.internal.SellableInstances.sellableBazaar", "link" : "proptics\/instances\/package$$partsOf$.html#sellableBazaar[P[_,_],G[_]](implicitevidence$1:cats.arrow.Profunctor[P],implicitev1:proptics.profunctor.Corepresentable.Aux[P,G]):proptics.internal.Sellable[P,[β$0$,γ$1$,ε$2$]proptics.internal.Bazaar[P,β$0$,γ$1$,Unit,ε$2$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$partsOf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$partsOf$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$partsOf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$partsOf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$partsOf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$partsOf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$partsOf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$partsOf$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$partsOf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$partsOf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$partsOf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$partsOf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$partsOf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$partsOf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$partsOf$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$partsOf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$partsOf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$partsOf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$partsOf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.PartsOf", "trait" : "proptics\/instances\/PartsOf.html", "kind" : "trait", "members_trait" : [{"label" : "partsOfSellable", "tail" : "(ev: Aux[[α$2$, β$3$](α$2$) => β$3$, [ε$4$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, List[A], List[A], Unit, ε$4$]]): Sellable[[α$7$, β$8$](α$7$) => β$8$, [β$9$, γ$10$, ε$11$]Bazaar[[α$5$, β$6$](α$5$) => β$6$, β$9$, γ$10$, Unit, ε$11$]]", "member" : "proptics.instances.PartsOf.partsOfSellable", "link" : "proptics\/instances\/PartsOf.html#partsOfSellable[A](implicitev:proptics.profunctor.Corepresentable.Aux[[α$2$,β$3$]α$2$=>β$3$,[ε$4$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,List[A],List[A],Unit,ε$4$]]):proptics.internal.Sellable[[α$7$,β$8$]α$7$=>β$8$,[β$9$,γ$10$,ε$11$]proptics.internal.Bazaar[[α$5$,β$6$]α$5$=>β$6$,β$9$,γ$10$,Unit,ε$11$]]", "kind" : "implicit def"}, {"label" : "corepresentableState", "tail" : "(): Aux[[α$20$, β$21$](α$20$) => β$21$, [β$22$]IndexedStateT[Eval, List[C], List[C], β$22$]]", "member" : "proptics.internal.CorepresentableInstances.corepresentableState", "link" : "proptics\/instances\/PartsOf.html#corepresentableState[C]:proptics.profunctor.Corepresentable.Aux[[α$20$,β$21$]α$20$=>β$21$,[β$22$]cats.data.IndexedStateT[cats.Eval,List[C],List[C],β$22$]]", "kind" : "implicit def"}, {"label" : "corepresentableBazaar", "tail" : "(): Aux[[α$2$, β$3$](α$2$) => β$3$, [ε$4$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, List[C], List[D], Unit, ε$4$]]", "member" : "proptics.internal.CorepresentableInstances.corepresentableBazaar", "link" : "proptics\/instances\/PartsOf.html#corepresentableBazaar[C,D]:proptics.profunctor.Corepresentable.Aux[[α$2$,β$3$]α$2$=>β$3$,[ε$4$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,List[C],List[D],Unit,ε$4$]]", "kind" : "implicit def"}, {"label" : "sellableBazaar", "tail" : "(arg0: Profunctor[P], ev1: Aux[P, G]): Sellable[P, [β$0$, γ$1$, ε$2$]Bazaar[P, β$0$, γ$1$, Unit, ε$2$]]", "member" : "proptics.internal.SellableInstances.sellableBazaar", "link" : "proptics\/instances\/PartsOf.html#sellableBazaar[P[_,_],G[_]](implicitevidence$1:cats.arrow.Profunctor[P],implicitev1:proptics.profunctor.Corepresentable.Aux[P,G]):proptics.internal.Sellable[P,[β$0$,γ$1$,ε$2$]proptics.internal.Bazaar[P,β$0$,γ$1$,Unit,ε$2$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/PartsOf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/PartsOf.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/PartsOf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/PartsOf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/PartsOf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/PartsOf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/PartsOf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/PartsOf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/PartsOf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/PartsOf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/PartsOf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/PartsOf.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/PartsOf.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/PartsOf.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/PartsOf.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/PartsOf.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/PartsOf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/PartsOf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/PartsOf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.prefixed", "shortDescription" : "", "object" : "proptics\/instances\/package$$prefixed$.html", "members_object" : [{"label" : "prefixedOneAnd", "tail" : "(arg0: Alternative[F], arg1: Eq[A], ev: Prefixed[F[A], F[A]]): Prefixed[OneAnd[F, A], F[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedOneAnd", "link" : "proptics\/instances\/package$$prefixed$.html#prefixedOneAnd[F[_],A](implicitevidence$9:cats.Alternative[F],implicitevidence$10:cats.Eq[A],implicitev:proptics.typeclass.Prefixed[F[A],F[A]]):proptics.typeclass.Prefixed[cats.data.OneAnd[F,A],F[A]]", "kind" : "implicit final def"}, {"label" : "prefixedNonEmptyChain", "tail" : "(arg0: Eq[A]): Prefixed[NonEmptyChain[A], Chain[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedNonEmptyChain", "link" : "proptics\/instances\/package$$prefixed$.html#prefixedNonEmptyChain[A](implicitevidence$8:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.NonEmptyChain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "prefixedNonEmptyList", "tail" : "(arg0: Eq[A]): Prefixed[NonEmptyList[A], List[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedNonEmptyList", "link" : "proptics\/instances\/package$$prefixed$.html#prefixedNonEmptyList[A](implicitevidence$7:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.NonEmptyList[A],List[A]]", "kind" : "implicit final def"}, {"label" : "prefixedNonEmptyVector", "tail" : "(arg0: Eq[A]): Prefixed[NonEmptyVector[A], Vector[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedNonEmptyVector", "link" : "proptics\/instances\/package$$prefixed$.html#prefixedNonEmptyVector[A](implicitevidence$6:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.NonEmptyVector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "prefixedChain", "tail" : "(arg0: Eq[A]): Prefixed[Chain[A], Chain[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedChain", "link" : "proptics\/instances\/package$$prefixed$.html#prefixedChain[A](implicitevidence$5:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.Chain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "prefixedList", "tail" : "(arg0: Eq[A]): Prefixed[List[A], List[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedList", "link" : "proptics\/instances\/package$$prefixed$.html#prefixedList[A](implicitevidence$4:cats.Eq[A]):proptics.typeclass.Prefixed[List[A],List[A]]", "kind" : "implicit final def"}, {"label" : "prefixedVector", "tail" : "(arg0: Eq[A]): Prefixed[Vector[A], Vector[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedVector", "link" : "proptics\/instances\/package$$prefixed$.html#prefixedVector[A](implicitevidence$3:cats.Eq[A]):proptics.typeclass.Prefixed[Vector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "prefixedArray", "tail" : "(arg0: Eq[A], arg1: ClassTag[A]): Prefixed[Array[A], Array[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedArray", "link" : "proptics\/instances\/package$$prefixed$.html#prefixedArray[A](implicitevidence$1:cats.Eq[A],implicitevidence$2:scala.reflect.ClassTag[A]):proptics.typeclass.Prefixed[Array[A],Array[A]]", "kind" : "implicit final def"}, {"label" : "prefixedString", "tail" : "(): Prefixed[String, String]", "member" : "proptics.instances.PrefixedInstances.prefixedString", "link" : "proptics\/instances\/package$$prefixed$.html#prefixedString:proptics.typeclass.Prefixed[String,String]", "kind" : "implicit final def"}, {"label" : "prefixed", "tail" : "(s: S)(ev: Prefixed[S, T]): Prism[S, T]", "member" : "proptics.instances.PrefixedInstances.prefixed", "link" : "proptics\/instances\/package$$prefixed$.html#prefixed[S,T](s:S)(implicitev:proptics.typeclass.Prefixed[S,T]):proptics.Prism[S,T]", "kind" : "final def"}, {"label" : "prefixedArraySeq", "tail" : "(arg0: Eq[A]): Prefixed[ArraySeq[A], ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificPrefixedInstances.prefixedArraySeq", "link" : "proptics\/instances\/package$$prefixed$.html#prefixedArraySeq[A](implicitevidence$2:cats.Eq[A]):proptics.typeclass.Prefixed[scala.collection.immutable.ArraySeq[A],scala.collection.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "prefixedLazyList", "tail" : "(arg0: Eq[A]): Prefixed[LazyList[A], LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificPrefixedInstances.prefixedLazyList", "link" : "proptics\/instances\/package$$prefixed$.html#prefixedLazyList[A](implicitevidence$1:cats.Eq[A]):proptics.typeclass.Prefixed[LazyList[A],LazyList[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$prefixed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$prefixed$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$prefixed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$prefixed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$prefixed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$prefixed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$prefixed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$prefixed$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$prefixed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$prefixed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$prefixed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$prefixed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$prefixed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$prefixed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$prefixed$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$prefixed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$prefixed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$prefixed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$prefixed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.PrefixedInstances", "trait" : "proptics\/instances\/PrefixedInstances.html", "kind" : "trait", "members_trait" : [{"label" : "prefixedOneAnd", "tail" : "(arg0: Alternative[F], arg1: Eq[A], ev: Prefixed[F[A], F[A]]): Prefixed[OneAnd[F, A], F[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedOneAnd", "link" : "proptics\/instances\/PrefixedInstances.html#prefixedOneAnd[F[_],A](implicitevidence$9:cats.Alternative[F],implicitevidence$10:cats.Eq[A],implicitev:proptics.typeclass.Prefixed[F[A],F[A]]):proptics.typeclass.Prefixed[cats.data.OneAnd[F,A],F[A]]", "kind" : "implicit final def"}, {"label" : "prefixedNonEmptyChain", "tail" : "(arg0: Eq[A]): Prefixed[NonEmptyChain[A], Chain[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedNonEmptyChain", "link" : "proptics\/instances\/PrefixedInstances.html#prefixedNonEmptyChain[A](implicitevidence$8:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.NonEmptyChain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "prefixedNonEmptyList", "tail" : "(arg0: Eq[A]): Prefixed[NonEmptyList[A], List[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedNonEmptyList", "link" : "proptics\/instances\/PrefixedInstances.html#prefixedNonEmptyList[A](implicitevidence$7:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.NonEmptyList[A],List[A]]", "kind" : "implicit final def"}, {"label" : "prefixedNonEmptyVector", "tail" : "(arg0: Eq[A]): Prefixed[NonEmptyVector[A], Vector[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedNonEmptyVector", "link" : "proptics\/instances\/PrefixedInstances.html#prefixedNonEmptyVector[A](implicitevidence$6:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.NonEmptyVector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "prefixedChain", "tail" : "(arg0: Eq[A]): Prefixed[Chain[A], Chain[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedChain", "link" : "proptics\/instances\/PrefixedInstances.html#prefixedChain[A](implicitevidence$5:cats.Eq[A]):proptics.typeclass.Prefixed[cats.data.Chain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "prefixedList", "tail" : "(arg0: Eq[A]): Prefixed[List[A], List[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedList", "link" : "proptics\/instances\/PrefixedInstances.html#prefixedList[A](implicitevidence$4:cats.Eq[A]):proptics.typeclass.Prefixed[List[A],List[A]]", "kind" : "implicit final def"}, {"label" : "prefixedVector", "tail" : "(arg0: Eq[A]): Prefixed[Vector[A], Vector[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedVector", "link" : "proptics\/instances\/PrefixedInstances.html#prefixedVector[A](implicitevidence$3:cats.Eq[A]):proptics.typeclass.Prefixed[Vector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "prefixedArray", "tail" : "(arg0: Eq[A], arg1: ClassTag[A]): Prefixed[Array[A], Array[A]]", "member" : "proptics.instances.PrefixedInstances.prefixedArray", "link" : "proptics\/instances\/PrefixedInstances.html#prefixedArray[A](implicitevidence$1:cats.Eq[A],implicitevidence$2:scala.reflect.ClassTag[A]):proptics.typeclass.Prefixed[Array[A],Array[A]]", "kind" : "implicit final def"}, {"label" : "prefixedString", "tail" : "(): Prefixed[String, String]", "member" : "proptics.instances.PrefixedInstances.prefixedString", "link" : "proptics\/instances\/PrefixedInstances.html#prefixedString:proptics.typeclass.Prefixed[String,String]", "kind" : "implicit final def"}, {"label" : "prefixed", "tail" : "(s: S)(ev: Prefixed[S, T]): Prism[S, T]", "member" : "proptics.instances.PrefixedInstances.prefixed", "link" : "proptics\/instances\/PrefixedInstances.html#prefixed[S,T](s:S)(implicitev:proptics.typeclass.Prefixed[S,T]):proptics.Prism[S,T]", "kind" : "final def"}, {"label" : "prefixedArraySeq", "tail" : "(arg0: Eq[A]): Prefixed[ArraySeq[A], ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificPrefixedInstances.prefixedArraySeq", "link" : "proptics\/instances\/PrefixedInstances.html#prefixedArraySeq[A](implicitevidence$2:cats.Eq[A]):proptics.typeclass.Prefixed[scala.collection.immutable.ArraySeq[A],scala.collection.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "prefixedLazyList", "tail" : "(arg0: Eq[A]): Prefixed[LazyList[A], LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificPrefixedInstances.prefixedLazyList", "link" : "proptics\/instances\/PrefixedInstances.html#prefixedLazyList[A](implicitevidence$1:cats.Eq[A]):proptics.typeclass.Prefixed[LazyList[A],LazyList[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/PrefixedInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/PrefixedInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/PrefixedInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/PrefixedInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/PrefixedInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/PrefixedInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/PrefixedInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/PrefixedInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/PrefixedInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/PrefixedInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/PrefixedInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/PrefixedInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/PrefixedInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/PrefixedInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/PrefixedInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/PrefixedInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/PrefixedInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/PrefixedInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/PrefixedInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.reverse", "shortDescription" : "", "object" : "proptics\/instances\/package$$reverse$.html", "members_object" : [{"label" : "reverseNonEmptyChain", "tail" : "(): Reverse[NonEmptyChain[A], NonEmptyChain[A]]", "member" : "proptics.instances.ReverseInstances.reverseNonEmptyChain", "link" : "proptics\/instances\/package$$reverse$.html#reverseNonEmptyChain[A]:proptics.typeclass.Reverse[cats.data.NonEmptyChain[A],cats.data.NonEmptyChain[A]]", "kind" : "implicit final def"}, {"label" : "reverseNonEmptyList", "tail" : "(): Reverse[NonEmptyList[A], NonEmptyList[A]]", "member" : "proptics.instances.ReverseInstances.reverseNonEmptyList", "link" : "proptics\/instances\/package$$reverse$.html#reverseNonEmptyList[A]:proptics.typeclass.Reverse[cats.data.NonEmptyList[A],cats.data.NonEmptyList[A]]", "kind" : "implicit final def"}, {"label" : "reverseNonEmptyVector", "tail" : "(): Reverse[NonEmptyVector[A], NonEmptyVector[A]]", "member" : "proptics.instances.ReverseInstances.reverseNonEmptyVector", "link" : "proptics\/instances\/package$$reverse$.html#reverseNonEmptyVector[A]:proptics.typeclass.Reverse[cats.data.NonEmptyVector[A],cats.data.NonEmptyVector[A]]", "kind" : "implicit final def"}, {"label" : "reverseChain", "tail" : "(): Reverse[Chain[A], Chain[A]]", "member" : "proptics.instances.ReverseInstances.reverseChain", "link" : "proptics\/instances\/package$$reverse$.html#reverseChain[A]:proptics.typeclass.Reverse[cats.data.Chain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "reverseList", "tail" : "(): Reverse[List[A], List[A]]", "member" : "proptics.instances.ReverseInstances.reverseList", "link" : "proptics\/instances\/package$$reverse$.html#reverseList[A]:proptics.typeclass.Reverse[List[A],List[A]]", "kind" : "implicit final def"}, {"label" : "reverseVector", "tail" : "(): Reverse[Vector[A], Vector[A]]", "member" : "proptics.instances.ReverseInstances.reverseVector", "link" : "proptics\/instances\/package$$reverse$.html#reverseVector[A]:proptics.typeclass.Reverse[Vector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "reverseArray", "tail" : "(arg0: ClassTag[A]): Reverse[Array[A], Array[A]]", "member" : "proptics.instances.ReverseInstances.reverseArray", "link" : "proptics\/instances\/package$$reverse$.html#reverseArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Reverse[Array[A],Array[A]]", "kind" : "implicit final def"}, {"label" : "reverseTuple5", "tail" : "(): Reverse[(A, B, C, D, E), (E, D, C, B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple5", "link" : "proptics\/instances\/package$$reverse$.html#reverseTuple5[A,B,C,D,E]:proptics.typeclass.Reverse[(A,B,C,D,E),(E,D,C,B,A)]", "kind" : "implicit def"}, {"label" : "reverseTuple4", "tail" : "(): Reverse[(A, B, C, D), (D, C, B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple4", "link" : "proptics\/instances\/package$$reverse$.html#reverseTuple4[A,B,C,D]:proptics.typeclass.Reverse[(A,B,C,D),(D,C,B,A)]", "kind" : "implicit def"}, {"label" : "reverseTuple3", "tail" : "(): Reverse[(A, B, C), (C, B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple3", "link" : "proptics\/instances\/package$$reverse$.html#reverseTuple3[A,B,C]:proptics.typeclass.Reverse[(A,B,C),(C,B,A)]", "kind" : "implicit def"}, {"label" : "reverseTuple2", "tail" : "(): Reverse[(A, B), (B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple2", "link" : "proptics\/instances\/package$$reverse$.html#reverseTuple2[A,B]:proptics.typeclass.Reverse[(A,B),(B,A)]", "kind" : "implicit def"}, {"label" : "reverseString", "tail" : ": Reverse[String, String]", "member" : "proptics.instances.ReverseInstances.reverseString", "link" : "proptics\/instances\/package$$reverse$.html#reverseString:proptics.typeclass.Reverse[String,String]", "kind" : "implicit final val"}, {"label" : "reverse", "tail" : "(ev: Reverse[S, T]): Iso[S, T]", "member" : "proptics.instances.ReverseInstances.reverse", "link" : "proptics\/instances\/package$$reverse$.html#reverse[S,T](implicitev:proptics.typeclass.Reverse[S,T]):proptics.Iso[S,T]", "kind" : "final def"}, {"label" : "reverseArraySeq", "tail" : "(arg0: ClassTag[A]): Reverse[ArraySeq[A], ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificReverseInstances.reverseArraySeq", "link" : "proptics\/instances\/package$$reverse$.html#reverseArraySeq[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Reverse[collection.compat.immutable.ArraySeq[A],collection.compat.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "reverseLazyList", "tail" : "(): Reverse[LazyList[A], LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificReverseInstances.reverseLazyList", "link" : "proptics\/instances\/package$$reverse$.html#reverseLazyList[A]:proptics.typeclass.Reverse[LazyList[A],LazyList[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$reverse$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$reverse$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$reverse$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$reverse$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$reverse$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$reverse$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$reverse$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$reverse$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$reverse$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$reverse$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$reverse$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$reverse$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$reverse$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$reverse$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$reverse$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$reverse$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$reverse$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$reverse$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$reverse$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.ReverseInstances", "trait" : "proptics\/instances\/ReverseInstances.html", "kind" : "trait", "members_trait" : [{"label" : "reverseNonEmptyChain", "tail" : "(): Reverse[NonEmptyChain[A], NonEmptyChain[A]]", "member" : "proptics.instances.ReverseInstances.reverseNonEmptyChain", "link" : "proptics\/instances\/ReverseInstances.html#reverseNonEmptyChain[A]:proptics.typeclass.Reverse[cats.data.NonEmptyChain[A],cats.data.NonEmptyChain[A]]", "kind" : "implicit final def"}, {"label" : "reverseNonEmptyList", "tail" : "(): Reverse[NonEmptyList[A], NonEmptyList[A]]", "member" : "proptics.instances.ReverseInstances.reverseNonEmptyList", "link" : "proptics\/instances\/ReverseInstances.html#reverseNonEmptyList[A]:proptics.typeclass.Reverse[cats.data.NonEmptyList[A],cats.data.NonEmptyList[A]]", "kind" : "implicit final def"}, {"label" : "reverseNonEmptyVector", "tail" : "(): Reverse[NonEmptyVector[A], NonEmptyVector[A]]", "member" : "proptics.instances.ReverseInstances.reverseNonEmptyVector", "link" : "proptics\/instances\/ReverseInstances.html#reverseNonEmptyVector[A]:proptics.typeclass.Reverse[cats.data.NonEmptyVector[A],cats.data.NonEmptyVector[A]]", "kind" : "implicit final def"}, {"label" : "reverseChain", "tail" : "(): Reverse[Chain[A], Chain[A]]", "member" : "proptics.instances.ReverseInstances.reverseChain", "link" : "proptics\/instances\/ReverseInstances.html#reverseChain[A]:proptics.typeclass.Reverse[cats.data.Chain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "reverseList", "tail" : "(): Reverse[List[A], List[A]]", "member" : "proptics.instances.ReverseInstances.reverseList", "link" : "proptics\/instances\/ReverseInstances.html#reverseList[A]:proptics.typeclass.Reverse[List[A],List[A]]", "kind" : "implicit final def"}, {"label" : "reverseVector", "tail" : "(): Reverse[Vector[A], Vector[A]]", "member" : "proptics.instances.ReverseInstances.reverseVector", "link" : "proptics\/instances\/ReverseInstances.html#reverseVector[A]:proptics.typeclass.Reverse[Vector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "reverseArray", "tail" : "(arg0: ClassTag[A]): Reverse[Array[A], Array[A]]", "member" : "proptics.instances.ReverseInstances.reverseArray", "link" : "proptics\/instances\/ReverseInstances.html#reverseArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Reverse[Array[A],Array[A]]", "kind" : "implicit final def"}, {"label" : "reverseTuple5", "tail" : "(): Reverse[(A, B, C, D, E), (E, D, C, B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple5", "link" : "proptics\/instances\/ReverseInstances.html#reverseTuple5[A,B,C,D,E]:proptics.typeclass.Reverse[(A,B,C,D,E),(E,D,C,B,A)]", "kind" : "implicit def"}, {"label" : "reverseTuple4", "tail" : "(): Reverse[(A, B, C, D), (D, C, B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple4", "link" : "proptics\/instances\/ReverseInstances.html#reverseTuple4[A,B,C,D]:proptics.typeclass.Reverse[(A,B,C,D),(D,C,B,A)]", "kind" : "implicit def"}, {"label" : "reverseTuple3", "tail" : "(): Reverse[(A, B, C), (C, B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple3", "link" : "proptics\/instances\/ReverseInstances.html#reverseTuple3[A,B,C]:proptics.typeclass.Reverse[(A,B,C),(C,B,A)]", "kind" : "implicit def"}, {"label" : "reverseTuple2", "tail" : "(): Reverse[(A, B), (B, A)]", "member" : "proptics.instances.ReverseInstances.reverseTuple2", "link" : "proptics\/instances\/ReverseInstances.html#reverseTuple2[A,B]:proptics.typeclass.Reverse[(A,B),(B,A)]", "kind" : "implicit def"}, {"label" : "reverseString", "tail" : ": Reverse[String, String]", "member" : "proptics.instances.ReverseInstances.reverseString", "link" : "proptics\/instances\/ReverseInstances.html#reverseString:proptics.typeclass.Reverse[String,String]", "kind" : "implicit final val"}, {"label" : "reverse", "tail" : "(ev: Reverse[S, T]): Iso[S, T]", "member" : "proptics.instances.ReverseInstances.reverse", "link" : "proptics\/instances\/ReverseInstances.html#reverse[S,T](implicitev:proptics.typeclass.Reverse[S,T]):proptics.Iso[S,T]", "kind" : "final def"}, {"label" : "reverseArraySeq", "tail" : "(arg0: ClassTag[A]): Reverse[ArraySeq[A], ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificReverseInstances.reverseArraySeq", "link" : "proptics\/instances\/ReverseInstances.html#reverseArraySeq[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.typeclass.Reverse[collection.compat.immutable.ArraySeq[A],collection.compat.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "reverseLazyList", "tail" : "(): Reverse[LazyList[A], LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificReverseInstances.reverseLazyList", "link" : "proptics\/instances\/ReverseInstances.html#reverseLazyList[A]:proptics.typeclass.Reverse[LazyList[A],LazyList[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/ReverseInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/ReverseInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/ReverseInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/ReverseInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/ReverseInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/ReverseInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/ReverseInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/ReverseInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/ReverseInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/ReverseInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/ReverseInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/ReverseInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/ReverseInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/ReverseInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/ReverseInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/ReverseInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/ReverseInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/ReverseInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/ReverseInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.suffixed", "shortDescription" : "", "object" : "proptics\/instances\/package$$suffixed$.html", "members_object" : [{"label" : "vectorStripSuffix", "tail" : "(qs: Vector[A])(xs0: Vector[A])(arg0: Eq[A]): Option[Vector[A]]", "member" : "proptics.instances.SuffixedInstances.vectorStripSuffix", "link" : "proptics\/instances\/package$$suffixed$.html#vectorStripSuffix[A](qs:Vector[A])(xs0:Vector[A])(implicitevidence$14:cats.Eq[A]):Option[Vector[A]]", "kind" : "def"}, {"label" : "suffixedOneAnd", "tail" : "(arg0: Alternative[F], arg1: Foldable[F], arg2: Eq[A], ev: Suffixed[F[A], F[A]]): Suffixed[OneAnd[F, A], F[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedOneAnd", "link" : "proptics\/instances\/package$$suffixed$.html#suffixedOneAnd[F[_],A](implicitevidence$9:cats.Alternative[F],implicitevidence$10:cats.Foldable[F],implicitevidence$11:cats.Eq[A],implicitev:proptics.typeclass.Suffixed[F[A],F[A]]):proptics.typeclass.Suffixed[cats.data.OneAnd[F,A],F[A]]", "kind" : "implicit final def"}, {"label" : "suffixedNonEmptyChain", "tail" : "(arg0: Eq[A]): Suffixed[NonEmptyChain[A], Chain[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedNonEmptyChain", "link" : "proptics\/instances\/package$$suffixed$.html#suffixedNonEmptyChain[A](implicitevidence$8:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.NonEmptyChain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "suffixedNonEmptyList", "tail" : "(arg0: Eq[A]): Suffixed[NonEmptyList[A], List[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedNonEmptyList", "link" : "proptics\/instances\/package$$suffixed$.html#suffixedNonEmptyList[A](implicitevidence$7:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.NonEmptyList[A],List[A]]", "kind" : "implicit final def"}, {"label" : "suffixedNonEmptyVector", "tail" : "(arg0: Eq[A]): Suffixed[NonEmptyVector[A], Vector[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedNonEmptyVector", "link" : "proptics\/instances\/package$$suffixed$.html#suffixedNonEmptyVector[A](implicitevidence$6:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.NonEmptyVector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "suffixedChain", "tail" : "(arg0: Eq[A]): Suffixed[Chain[A], Chain[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedChain", "link" : "proptics\/instances\/package$$suffixed$.html#suffixedChain[A](implicitevidence$5:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.Chain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "suffixedList", "tail" : "(arg0: Eq[A]): Suffixed[List[A], List[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedList", "link" : "proptics\/instances\/package$$suffixed$.html#suffixedList[A](implicitevidence$4:cats.Eq[A]):proptics.typeclass.Suffixed[List[A],List[A]]", "kind" : "implicit final def"}, {"label" : "suffixedVector", "tail" : "(arg0: Eq[A]): Suffixed[Vector[A], Vector[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedVector", "link" : "proptics\/instances\/package$$suffixed$.html#suffixedVector[A](implicitevidence$3:cats.Eq[A]):proptics.typeclass.Suffixed[Vector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "suffixedArray", "tail" : "(arg0: Eq[A], arg1: ClassTag[A]): Suffixed[Array[A], Array[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedArray", "link" : "proptics\/instances\/package$$suffixed$.html#suffixedArray[A](implicitevidence$1:cats.Eq[A],implicitevidence$2:scala.reflect.ClassTag[A]):proptics.typeclass.Suffixed[Array[A],Array[A]]", "kind" : "implicit final def"}, {"label" : "suffixedString", "tail" : "(): Suffixed[String, String]", "member" : "proptics.instances.SuffixedInstances.suffixedString", "link" : "proptics\/instances\/package$$suffixed$.html#suffixedString:proptics.typeclass.Suffixed[String,String]", "kind" : "implicit final def"}, {"label" : "suffixed", "tail" : "(s: S)(ev: Suffixed[S, T]): Prism[S, T]", "member" : "proptics.instances.SuffixedInstances.suffixed", "link" : "proptics\/instances\/package$$suffixed$.html#suffixed[S,T](s:S)(implicitev:proptics.typeclass.Suffixed[S,T]):proptics.Prism[S,T]", "kind" : "final def"}, {"label" : "suffixedArraySeq", "tail" : "(arg0: Eq[A], arg1: ClassTag[A]): Suffixed[ArraySeq[A], ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificSuffixedInstances.suffixedArraySeq", "link" : "proptics\/instances\/package$$suffixed$.html#suffixedArraySeq[A](implicitevidence$2:cats.Eq[A],implicitevidence$3:scala.reflect.ClassTag[A]):proptics.typeclass.Suffixed[collection.compat.immutable.ArraySeq[A],collection.compat.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "suffixedLazyList", "tail" : "(arg0: Eq[A]): Suffixed[LazyList[A], LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificSuffixedInstances.suffixedLazyList", "link" : "proptics\/instances\/package$$suffixed$.html#suffixedLazyList[A](implicitevidence$1:cats.Eq[A]):proptics.typeclass.Suffixed[LazyList[A],LazyList[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$suffixed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$suffixed$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$suffixed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$suffixed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$suffixed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$suffixed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$suffixed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$suffixed$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$suffixed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$suffixed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$suffixed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$suffixed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$suffixed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$suffixed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$suffixed$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$suffixed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$suffixed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$suffixed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$suffixed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.SuffixedInstances", "trait" : "proptics\/instances\/SuffixedInstances.html", "kind" : "trait", "members_trait" : [{"label" : "vectorStripSuffix", "tail" : "(qs: Vector[A])(xs0: Vector[A])(arg0: Eq[A]): Option[Vector[A]]", "member" : "proptics.instances.SuffixedInstances.vectorStripSuffix", "link" : "proptics\/instances\/SuffixedInstances.html#vectorStripSuffix[A](qs:Vector[A])(xs0:Vector[A])(implicitevidence$14:cats.Eq[A]):Option[Vector[A]]", "kind" : "def"}, {"label" : "suffixedOneAnd", "tail" : "(arg0: Alternative[F], arg1: Foldable[F], arg2: Eq[A], ev: Suffixed[F[A], F[A]]): Suffixed[OneAnd[F, A], F[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedOneAnd", "link" : "proptics\/instances\/SuffixedInstances.html#suffixedOneAnd[F[_],A](implicitevidence$9:cats.Alternative[F],implicitevidence$10:cats.Foldable[F],implicitevidence$11:cats.Eq[A],implicitev:proptics.typeclass.Suffixed[F[A],F[A]]):proptics.typeclass.Suffixed[cats.data.OneAnd[F,A],F[A]]", "kind" : "implicit final def"}, {"label" : "suffixedNonEmptyChain", "tail" : "(arg0: Eq[A]): Suffixed[NonEmptyChain[A], Chain[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedNonEmptyChain", "link" : "proptics\/instances\/SuffixedInstances.html#suffixedNonEmptyChain[A](implicitevidence$8:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.NonEmptyChain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "suffixedNonEmptyList", "tail" : "(arg0: Eq[A]): Suffixed[NonEmptyList[A], List[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedNonEmptyList", "link" : "proptics\/instances\/SuffixedInstances.html#suffixedNonEmptyList[A](implicitevidence$7:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.NonEmptyList[A],List[A]]", "kind" : "implicit final def"}, {"label" : "suffixedNonEmptyVector", "tail" : "(arg0: Eq[A]): Suffixed[NonEmptyVector[A], Vector[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedNonEmptyVector", "link" : "proptics\/instances\/SuffixedInstances.html#suffixedNonEmptyVector[A](implicitevidence$6:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.NonEmptyVector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "suffixedChain", "tail" : "(arg0: Eq[A]): Suffixed[Chain[A], Chain[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedChain", "link" : "proptics\/instances\/SuffixedInstances.html#suffixedChain[A](implicitevidence$5:cats.Eq[A]):proptics.typeclass.Suffixed[cats.data.Chain[A],cats.data.Chain[A]]", "kind" : "implicit final def"}, {"label" : "suffixedList", "tail" : "(arg0: Eq[A]): Suffixed[List[A], List[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedList", "link" : "proptics\/instances\/SuffixedInstances.html#suffixedList[A](implicitevidence$4:cats.Eq[A]):proptics.typeclass.Suffixed[List[A],List[A]]", "kind" : "implicit final def"}, {"label" : "suffixedVector", "tail" : "(arg0: Eq[A]): Suffixed[Vector[A], Vector[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedVector", "link" : "proptics\/instances\/SuffixedInstances.html#suffixedVector[A](implicitevidence$3:cats.Eq[A]):proptics.typeclass.Suffixed[Vector[A],Vector[A]]", "kind" : "implicit final def"}, {"label" : "suffixedArray", "tail" : "(arg0: Eq[A], arg1: ClassTag[A]): Suffixed[Array[A], Array[A]]", "member" : "proptics.instances.SuffixedInstances.suffixedArray", "link" : "proptics\/instances\/SuffixedInstances.html#suffixedArray[A](implicitevidence$1:cats.Eq[A],implicitevidence$2:scala.reflect.ClassTag[A]):proptics.typeclass.Suffixed[Array[A],Array[A]]", "kind" : "implicit final def"}, {"label" : "suffixedString", "tail" : "(): Suffixed[String, String]", "member" : "proptics.instances.SuffixedInstances.suffixedString", "link" : "proptics\/instances\/SuffixedInstances.html#suffixedString:proptics.typeclass.Suffixed[String,String]", "kind" : "implicit final def"}, {"label" : "suffixed", "tail" : "(s: S)(ev: Suffixed[S, T]): Prism[S, T]", "member" : "proptics.instances.SuffixedInstances.suffixed", "link" : "proptics\/instances\/SuffixedInstances.html#suffixed[S,T](s:S)(implicitev:proptics.typeclass.Suffixed[S,T]):proptics.Prism[S,T]", "kind" : "final def"}, {"label" : "suffixedArraySeq", "tail" : "(arg0: Eq[A], arg1: ClassTag[A]): Suffixed[ArraySeq[A], ArraySeq[A]]", "member" : "proptics.instances.ScalaVersionSpecificSuffixedInstances.suffixedArraySeq", "link" : "proptics\/instances\/SuffixedInstances.html#suffixedArraySeq[A](implicitevidence$2:cats.Eq[A],implicitevidence$3:scala.reflect.ClassTag[A]):proptics.typeclass.Suffixed[collection.compat.immutable.ArraySeq[A],collection.compat.immutable.ArraySeq[A]]", "kind" : "implicit final def"}, {"label" : "suffixedLazyList", "tail" : "(arg0: Eq[A]): Suffixed[LazyList[A], LazyList[A]]", "member" : "proptics.instances.ScalaVersionSpecificSuffixedInstances.suffixedLazyList", "link" : "proptics\/instances\/SuffixedInstances.html#suffixedLazyList[A](implicitevidence$1:cats.Eq[A]):proptics.typeclass.Suffixed[LazyList[A],LazyList[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/SuffixedInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/SuffixedInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/SuffixedInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/SuffixedInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/SuffixedInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/SuffixedInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/SuffixedInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/SuffixedInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/SuffixedInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/SuffixedInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/SuffixedInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/SuffixedInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/SuffixedInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/SuffixedInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/SuffixedInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/SuffixedInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/SuffixedInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/SuffixedInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/SuffixedInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.instances.traverseWithIndex", "shortDescription" : "", "object" : "proptics\/instances\/package$$traverseWithIndex$.html", "members_object" : [{"label" : "traverseWithIndexNonEmptyMap", "tail" : "(arg0: Order[K]): TraverseWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K, β$6$], K]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyMap", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#traverseWithIndexNonEmptyMap[K](implicitevidence$2:cats.Order[K]):proptics.indices.TraverseWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K,β$6$],K]", "kind" : "implicit def"}, {"label" : "traverseWithIndexOneAnd", "tail" : "(arg0: Traverse[F]): TraverseWithIndex[[β$4$]OneAnd[F, β$4$], Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexOneAnd", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#traverseWithIndexOneAnd[F[_]](implicitevidence$1:cats.Traverse[F]):proptics.indices.TraverseWithIndex[[β$4$]cats.data.OneAnd[F,β$4$],Int]", "kind" : "implicit def"}, {"label" : "traverseWithIndexNonEmptyChain", "tail" : "(): TraverseWithIndex[NonEmptyChain, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyChain", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#traverseWithIndexNonEmptyChain:proptics.indices.TraverseWithIndex[cats.data.NonEmptyChain,Int]", "kind" : "implicit final def"}, {"label" : "traverseWithIndexNonEmptyList", "tail" : ": TraverseWithIndex[NonEmptyList, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyList", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#traverseWithIndexNonEmptyList:proptics.indices.TraverseWithIndex[cats.data.NonEmptyList,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexNonEmptyVector", "tail" : ": TraverseWithIndex[NonEmptyVector, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyVector", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#traverseWithIndexNonEmptyVector:proptics.indices.TraverseWithIndex[cats.data.NonEmptyVector,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexChain", "tail" : ": TraverseWithIndex[Chain, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexChain", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#traverseWithIndexChain:proptics.indices.TraverseWithIndex[cats.data.Chain,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexMap", "tail" : "(): TraverseWithIndex[[β$2$]Map[K, β$2$], K]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexMap", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#traverseWithIndexMap[K]:proptics.indices.TraverseWithIndex[[β$2$]scala.collection.immutable.Map[K,β$2$],K]", "kind" : "implicit final def"}, {"label" : "traverseWithIndexListMap", "tail" : "(): TraverseWithIndex[[β$0$]ListMap[K, β$0$], K]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexListMap", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#traverseWithIndexListMap[K]:proptics.indices.TraverseWithIndex[[β$0$]scala.collection.immutable.ListMap[K,β$0$],K]", "kind" : "implicit final def"}, {"label" : "traverseWithIndexList", "tail" : ": TraverseWithIndex[List, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexList", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#traverseWithIndexList:proptics.indices.TraverseWithIndex[List,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexVector", "tail" : ": TraverseWithIndex[Vector, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexVector", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#traverseWithIndexVector:proptics.indices.TraverseWithIndex[Vector,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexOption", "tail" : ": TraverseWithIndex[Option, Unit]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexOption", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#traverseWithIndexOption:proptics.indices.TraverseWithIndex[Option,Unit]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexArraySeq", "tail" : ": TraverseWithIndex[ArraySeq, Int]", "member" : "proptics.instances.ScalaVersionSpecificTraverseWithIndexInstances.traverseWithIndexArraySeq", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#traverseWithIndexArraySeq:proptics.indices.TraverseWithIndex[scala.collection.immutable.ArraySeq,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexLazyList", "tail" : ": TraverseWithIndex[LazyList, Int]", "member" : "proptics.instances.ScalaVersionSpecificTraverseWithIndexInstances.traverseWithIndexLazyList", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#traverseWithIndexLazyList:proptics.indices.TraverseWithIndex[LazyList,Int]", "kind" : "implicit final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/package$$traverseWithIndex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/package$$traverseWithIndex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.instances.TraverseWithIndexInstances", "trait" : "proptics\/instances\/TraverseWithIndexInstances.html", "kind" : "trait", "members_trait" : [{"label" : "traverseWithIndexNonEmptyMap", "tail" : "(arg0: Order[K]): TraverseWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K, β$6$], K]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyMap", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#traverseWithIndexNonEmptyMap[K](implicitevidence$2:cats.Order[K]):proptics.indices.TraverseWithIndex[[β$6$]cats.data.NonEmptyMapImpl.Type[K,β$6$],K]", "kind" : "implicit def"}, {"label" : "traverseWithIndexOneAnd", "tail" : "(arg0: Traverse[F]): TraverseWithIndex[[β$4$]OneAnd[F, β$4$], Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexOneAnd", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#traverseWithIndexOneAnd[F[_]](implicitevidence$1:cats.Traverse[F]):proptics.indices.TraverseWithIndex[[β$4$]cats.data.OneAnd[F,β$4$],Int]", "kind" : "implicit def"}, {"label" : "traverseWithIndexNonEmptyChain", "tail" : "(): TraverseWithIndex[NonEmptyChain, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyChain", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#traverseWithIndexNonEmptyChain:proptics.indices.TraverseWithIndex[cats.data.NonEmptyChain,Int]", "kind" : "implicit final def"}, {"label" : "traverseWithIndexNonEmptyList", "tail" : ": TraverseWithIndex[NonEmptyList, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyList", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#traverseWithIndexNonEmptyList:proptics.indices.TraverseWithIndex[cats.data.NonEmptyList,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexNonEmptyVector", "tail" : ": TraverseWithIndex[NonEmptyVector, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexNonEmptyVector", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#traverseWithIndexNonEmptyVector:proptics.indices.TraverseWithIndex[cats.data.NonEmptyVector,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexChain", "tail" : ": TraverseWithIndex[Chain, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexChain", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#traverseWithIndexChain:proptics.indices.TraverseWithIndex[cats.data.Chain,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexMap", "tail" : "(): TraverseWithIndex[[β$2$]Map[K, β$2$], K]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexMap", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#traverseWithIndexMap[K]:proptics.indices.TraverseWithIndex[[β$2$]scala.collection.immutable.Map[K,β$2$],K]", "kind" : "implicit final def"}, {"label" : "traverseWithIndexListMap", "tail" : "(): TraverseWithIndex[[β$0$]ListMap[K, β$0$], K]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexListMap", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#traverseWithIndexListMap[K]:proptics.indices.TraverseWithIndex[[β$0$]scala.collection.immutable.ListMap[K,β$0$],K]", "kind" : "implicit final def"}, {"label" : "traverseWithIndexList", "tail" : ": TraverseWithIndex[List, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexList", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#traverseWithIndexList:proptics.indices.TraverseWithIndex[List,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexVector", "tail" : ": TraverseWithIndex[Vector, Int]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexVector", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#traverseWithIndexVector:proptics.indices.TraverseWithIndex[Vector,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexOption", "tail" : ": TraverseWithIndex[Option, Unit]", "member" : "proptics.instances.TraverseWithIndexInstances.traverseWithIndexOption", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#traverseWithIndexOption:proptics.indices.TraverseWithIndex[Option,Unit]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexArraySeq", "tail" : ": TraverseWithIndex[ArraySeq, Int]", "member" : "proptics.instances.ScalaVersionSpecificTraverseWithIndexInstances.traverseWithIndexArraySeq", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#traverseWithIndexArraySeq:proptics.indices.TraverseWithIndex[scala.collection.immutable.ArraySeq,Int]", "kind" : "implicit final val"}, {"label" : "traverseWithIndexLazyList", "tail" : ": TraverseWithIndex[LazyList, Int]", "member" : "proptics.instances.ScalaVersionSpecificTraverseWithIndexInstances.traverseWithIndexLazyList", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#traverseWithIndexLazyList:proptics.indices.TraverseWithIndex[LazyList,Int]", "kind" : "implicit final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/instances\/TraverseWithIndexInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/instances\/TraverseWithIndexInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "proptics.typeclass" : [{"name" : "proptics.typeclass.At", "object" : "proptics\/typeclass\/At$.html", "members_object" : [{"label" : "at", "tail" : "(view: (I) => (S) => Option[A])(set: (I) => (S) => (Option[A]) => S): At[S, I, A]", "member" : "proptics.typeclass.At.at", "link" : "proptics\/typeclass\/At$.html#at[S,I,A](view:I=>(S=>Option[A]))(set:I=>(S=>(Option[A]=>S))):proptics.typeclass.At[S,I,A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(ev: At[S, I, A]): At[S, I, A]", "member" : "proptics.typeclass.At.apply", "link" : "proptics\/typeclass\/At$.html#apply[S,I,A](implicitev:proptics.typeclass.At[S,I,A]):proptics.typeclass.At[S,I,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/At$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/At$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/At$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/At$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/At$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/At$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/At$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/At$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/At$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/At$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/At$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/At$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/At$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/At$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/At$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/At$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/At$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/At$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/At$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/At.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/At.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/At.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/At.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/At.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/At.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/At.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/At.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/At.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/At.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/At.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/At.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/At.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/At.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/At.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/At.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/At.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/At.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/At.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/At.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "at", "tail" : "(i: I): Lens[S, Option[A]]", "member" : "proptics.typeclass.At.at", "link" : "proptics\/typeclass\/At.html#at(i:I):proptics.Lens[S,Option[A]]", "kind" : "abstract def"}, {"label" : "ix", "tail" : "(i: I): AffineTraversal[S, A]", "member" : "proptics.typeclass.Index.ix", "link" : "proptics\/typeclass\/At.html#ix(i:I):proptics.AffineTraversal[S,A]", "kind" : "abstract def"}], "shortDescription" : "The At typeclass provides a Lens that can be used to read, write or delete the value associated with a key in a Map-like container"}, {"name" : "proptics.typeclass.Cons", "object" : "proptics\/typeclass\/Cons$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Cons[S, A]): Cons[S, A]", "member" : "proptics.typeclass.Cons.apply", "link" : "proptics\/typeclass\/Cons$.html#apply[S,A](implicitev:proptics.typeclass.Cons[S,A]):proptics.typeclass.Cons[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Cons$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Cons$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Cons$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Cons$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Cons$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Cons$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Cons$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Cons$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Cons$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Cons$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Cons$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Cons$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Cons$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Cons$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Cons$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Cons$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Cons$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Cons$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Cons$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/Cons.html", "kind" : "trait", "members_trait" : [{"label" : "tailOption", "tail" : "(): AffineTraversal[S, S]", "member" : "proptics.typeclass.Cons.tailOption", "link" : "proptics\/typeclass\/Cons.html#tailOption:proptics.AffineTraversal[S,S]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): AffineTraversal[S, A]", "member" : "proptics.typeclass.Cons.headOption", "link" : "proptics\/typeclass\/Cons.html#headOption:proptics.AffineTraversal[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Cons.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Cons.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Cons.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Cons.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Cons.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Cons.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Cons.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Cons.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Cons.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Cons.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Cons.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Cons.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Cons.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Cons.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Cons.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Cons.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Cons.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Cons.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Cons.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cons", "tail" : "(): Prism[S, (A, S)]", "member" : "proptics.typeclass.Cons.cons", "link" : "proptics\/typeclass\/Cons.html#cons:proptics.Prism[S,(A,S)]", "kind" : "abstract def"}], "shortDescription" : "The Cons typeclass provides a Prism for a way to attach or detach elements on the left side of a structure."}, {"name" : "proptics.typeclass.Each", "object" : "proptics\/typeclass\/Each$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Each[S, A]): Each[S, A]", "member" : "proptics.typeclass.Each.apply", "link" : "proptics\/typeclass\/Each$.html#apply[S,A](implicitev:proptics.typeclass.Each[S,A]):proptics.typeclass.Each[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Each$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Each$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Each$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Each$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Each$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Each$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Each$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Each$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Each$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Each$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Each$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Each$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Each$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Each$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Each$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Each$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Each$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Each$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Each$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/Each.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Each.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Each.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Each.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Each.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Each.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Each.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Each.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Each.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Each.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Each.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Each.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Each.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Each.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Each.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Each.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Each.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Each.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Each.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Each.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "each", "tail" : "(): Traversal[S, A]", "member" : "proptics.typeclass.Each.each", "link" : "proptics\/typeclass\/Each.html#each:proptics.Traversal[S,A]", "kind" : "abstract def"}], "shortDescription" : "The Each typeclass provides a Traversal that can extract each element of a monomorphic container."}, {"name" : "proptics.typeclass.Empty", "object" : "proptics\/typeclass\/Empty$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Empty[S]): Empty[S]", "member" : "proptics.typeclass.Empty.apply", "link" : "proptics\/typeclass\/Empty$.html#apply[S](implicitev:proptics.typeclass.Empty[S]):proptics.typeclass.Empty[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Empty$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Empty$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Empty$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Empty$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Empty$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Empty$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Empty$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Empty$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Empty$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Empty$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Empty$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Empty$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Empty$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Empty$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Empty$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Empty$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Empty$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Empty$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Empty$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/Empty.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Empty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Empty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Empty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Empty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Empty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Empty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Empty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Empty.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Empty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Empty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Empty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Empty.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Empty.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Empty.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Empty.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Empty.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Empty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Empty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Empty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "empty", "tail" : "(): Prism[S, Unit]", "member" : "proptics.typeclass.Empty.empty", "link" : "proptics\/typeclass\/Empty.html#empty:proptics.Prism[S,Unit]", "kind" : "abstract def"}], "shortDescription" : "The Empty typeclass provides a Prism that can tell whether a structure is empty."}, {"name" : "proptics.typeclass.Field1", "object" : "proptics\/typeclass\/Field1$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Field1[S, A]): Field1[S, A]", "member" : "proptics.typeclass.Field1.apply", "link" : "proptics\/typeclass\/Field1$.html#apply[S,A](implicitev:proptics.typeclass.Field1[S,A]):proptics.typeclass.Field1[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Field1$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Field1$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Field1$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Field1$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Field1$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Field1$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Field1$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field1$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field1$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field1$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Field1$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Field1$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Field1$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Field1$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Field1$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Field1$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Field1$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Field1$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Field1$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/Field1.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Field1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Field1.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Field1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Field1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Field1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Field1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Field1.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field1.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Field1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Field1.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Field1.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Field1.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Field1.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Field1.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Field1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Field1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Field1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "first", "tail" : "(): Lens[S, A]", "member" : "proptics.typeclass.Field1.first", "link" : "proptics\/typeclass\/Field1.html#first:proptics.Lens[S,A]", "kind" : "abstract def"}], "shortDescription" : "The Field1 typeclass provides a Lens for a way to get the first element of structure."}, {"name" : "proptics.typeclass.Field2", "object" : "proptics\/typeclass\/Field2$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Field2[S, A]): Field2[S, A]", "member" : "proptics.typeclass.Field2.apply", "link" : "proptics\/typeclass\/Field2$.html#apply[S,A](implicitev:proptics.typeclass.Field2[S,A]):proptics.typeclass.Field2[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Field2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Field2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Field2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Field2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Field2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Field2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Field2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Field2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Field2$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Field2$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Field2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Field2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Field2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Field2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Field2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Field2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/Field2.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Field2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Field2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Field2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Field2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Field2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Field2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Field2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Field2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Field2.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Field2.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Field2.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Field2.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Field2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Field2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Field2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Field2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "second", "tail" : "(): Lens[S, A]", "member" : "proptics.typeclass.Field2.second", "link" : "proptics\/typeclass\/Field2.html#second:proptics.Lens[S,A]", "kind" : "abstract def"}], "shortDescription" : "The Field2 typeclass provides a Lens for a way to get the second element of structure."}, {"name" : "proptics.typeclass.Field3", "object" : "proptics\/typeclass\/Field3$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Field3[S, A]): Field3[S, A]", "member" : "proptics.typeclass.Field3.apply", "link" : "proptics\/typeclass\/Field3$.html#apply[S,A](implicitev:proptics.typeclass.Field3[S,A]):proptics.typeclass.Field3[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Field3$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Field3$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Field3$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Field3$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Field3$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Field3$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Field3$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field3$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field3$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field3$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Field3$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Field3$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Field3$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Field3$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Field3$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Field3$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Field3$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Field3$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Field3$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/Field3.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Field3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Field3.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Field3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Field3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Field3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Field3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Field3.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field3.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Field3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Field3.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Field3.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Field3.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Field3.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Field3.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Field3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Field3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Field3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "third", "tail" : "(): Lens[S, A]", "member" : "proptics.typeclass.Field3.third", "link" : "proptics\/typeclass\/Field3.html#third:proptics.Lens[S,A]", "kind" : "abstract def"}], "shortDescription" : "The Field3 typeclass provides a Lens for a way to get the third element of structure."}, {"name" : "proptics.typeclass.Field4", "object" : "proptics\/typeclass\/Field4$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Field4[S, A]): Field4[S, A]", "member" : "proptics.typeclass.Field4.apply", "link" : "proptics\/typeclass\/Field4$.html#apply[S,A](implicitev:proptics.typeclass.Field4[S,A]):proptics.typeclass.Field4[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Field4$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Field4$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Field4$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Field4$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Field4$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Field4$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Field4$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field4$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field4$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field4$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Field4$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Field4$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Field4$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Field4$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Field4$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Field4$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Field4$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Field4$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Field4$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/Field4.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Field4.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Field4.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Field4.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Field4.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Field4.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Field4.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Field4.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field4.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field4.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field4.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Field4.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Field4.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Field4.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Field4.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Field4.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Field4.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Field4.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Field4.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Field4.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fourth", "tail" : "(): Lens[S, A]", "member" : "proptics.typeclass.Field4.fourth", "link" : "proptics\/typeclass\/Field4.html#fourth:proptics.Lens[S,A]", "kind" : "abstract def"}], "shortDescription" : "The Field4 typeclass provides a Lens for a way to get the fourth element of structure."}, {"name" : "proptics.typeclass.Field5", "object" : "proptics\/typeclass\/Field5$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Field5[S, A]): Field5[S, A]", "member" : "proptics.typeclass.Field5.apply", "link" : "proptics\/typeclass\/Field5$.html#apply[S,A](implicitev:proptics.typeclass.Field5[S,A]):proptics.typeclass.Field5[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Field5$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Field5$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Field5$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Field5$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Field5$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Field5$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Field5$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field5$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field5$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field5$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Field5$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Field5$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Field5$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Field5$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Field5$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Field5$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Field5$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Field5$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Field5$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/Field5.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Field5.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Field5.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Field5.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Field5.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Field5.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Field5.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Field5.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field5.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field5.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Field5.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Field5.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Field5.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Field5.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Field5.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Field5.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Field5.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Field5.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Field5.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Field5.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fifth", "tail" : "(): Lens[S, A]", "member" : "proptics.typeclass.Field5.fifth", "link" : "proptics\/typeclass\/Field5.html#fifth:proptics.Lens[S,A]", "kind" : "abstract def"}], "shortDescription" : "The Field5 typeclass provides a Lens for a way to get the fifth element of structure."}, {"name" : "proptics.typeclass.Index", "object" : "proptics\/typeclass\/Index$.html", "members_object" : [{"label" : "fromPartial", "tail" : "(preview: (I) => PartialFunction[S, A])(set: (I) => (S) => (A) => S): Index[S, I, A]", "member" : "proptics.typeclass.Index.fromPartial", "link" : "proptics\/typeclass\/Index$.html#fromPartial[S,I,A](preview:I=>PartialFunction[S,A])(set:I=>(S=>(A=>S))):proptics.typeclass.Index[S,I,A]", "kind" : "def"}, {"label" : "fromPreview", "tail" : "(preview: (I) => (S) => Option[A])(set: (I) => (S) => (A) => S): Index[S, I, A]", "member" : "proptics.typeclass.Index.fromPreview", "link" : "proptics\/typeclass\/Index$.html#fromPreview[S,I,A](preview:I=>(S=>Option[A]))(set:I=>(S=>(A=>S))):proptics.typeclass.Index[S,I,A]", "kind" : "def"}, {"label" : "index", "tail" : "(viewOrModify: (I) => (S) => Either[S, A])(set: (I) => (S) => (A) => S): Index[S, I, A]", "member" : "proptics.typeclass.Index.index", "link" : "proptics\/typeclass\/Index$.html#index[S,I,A](viewOrModify:I=>(S=>Either[S,A]))(set:I=>(S=>(A=>S))):proptics.typeclass.Index[S,I,A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(ev: Index[S, I, A]): Index[S, I, A]", "member" : "proptics.typeclass.Index.apply", "link" : "proptics\/typeclass\/Index$.html#apply[S,I,A](implicitev:proptics.typeclass.Index[S,I,A]):proptics.typeclass.Index[S,I,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Index$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Index$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Index$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Index$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Index$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Index$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Index$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Index$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Index$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Index$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Index$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Index$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Index$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Index$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Index$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Index$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Index$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Index$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Index$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/Index.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Index.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Index.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Index.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Index.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Index.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Index.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Index.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Index.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Index.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Index.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Index.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Index.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Index.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Index.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Index.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Index.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Index.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Index.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Index.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ix", "tail" : "(i: I): AffineTraversal[S, A]", "member" : "proptics.typeclass.Index.ix", "link" : "proptics\/typeclass\/Index.html#ix(i:I):proptics.AffineTraversal[S,A]", "kind" : "abstract def"}], "shortDescription" : "The Index typeclass provides an AffineTraversal that can be used to when you either cannot or do not want to add new elements or delete existing ones"}, {"name" : "proptics.typeclass.NonEmptyCons", "object" : "proptics\/typeclass\/NonEmptyCons$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: NonEmptyCons[S, H, T]): NonEmptyCons[S, H, T]", "member" : "proptics.typeclass.NonEmptyCons.apply", "link" : "proptics\/typeclass\/NonEmptyCons$.html#apply[S,H,T](implicitev:proptics.typeclass.NonEmptyCons[S,H,T]):proptics.typeclass.NonEmptyCons[S,H,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/NonEmptyCons$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/NonEmptyCons$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/NonEmptyCons$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/NonEmptyCons$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/NonEmptyCons$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/NonEmptyCons$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/NonEmptyCons$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/NonEmptyCons$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/NonEmptyCons$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/NonEmptyCons$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/NonEmptyCons$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/NonEmptyCons$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/NonEmptyCons$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/NonEmptyCons$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/NonEmptyCons$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/NonEmptyCons$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/NonEmptyCons$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/NonEmptyCons$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/NonEmptyCons$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/NonEmptyCons.html", "kind" : "trait", "members_trait" : [{"label" : "tail", "tail" : "(): Lens[S, T]", "member" : "proptics.typeclass.NonEmptyCons.tail", "link" : "proptics\/typeclass\/NonEmptyCons.html#tail:proptics.Lens[S,T]", "kind" : "def"}, {"label" : "head", "tail" : "(): Lens[S, H]", "member" : "proptics.typeclass.NonEmptyCons.head", "link" : "proptics\/typeclass\/NonEmptyCons.html#head:proptics.Lens[S,H]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/NonEmptyCons.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/NonEmptyCons.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/NonEmptyCons.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/NonEmptyCons.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/NonEmptyCons.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/NonEmptyCons.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/NonEmptyCons.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/NonEmptyCons.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/NonEmptyCons.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/NonEmptyCons.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/NonEmptyCons.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/NonEmptyCons.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/NonEmptyCons.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/NonEmptyCons.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/NonEmptyCons.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/NonEmptyCons.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/NonEmptyCons.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/NonEmptyCons.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/NonEmptyCons.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "nonEmptyCons", "tail" : "(): Iso[S, (H, T)]", "member" : "proptics.typeclass.NonEmptyCons.nonEmptyCons", "link" : "proptics\/typeclass\/NonEmptyCons.html#nonEmptyCons:proptics.Iso[S,(H,T)]", "kind" : "abstract def"}], "shortDescription" : "The NonEmptyCons typeclass provides an Iso for a way to attach or detach elements on the left side of a structure."}, {"name" : "proptics.typeclass.Prefixed", "object" : "proptics\/typeclass\/Prefixed$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Prefixed[S, T]): Prefixed[S, T]", "member" : "proptics.typeclass.Prefixed.apply", "link" : "proptics\/typeclass\/Prefixed$.html#apply[S,T](implicitev:proptics.typeclass.Prefixed[S,T]):proptics.typeclass.Prefixed[S,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Prefixed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Prefixed$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Prefixed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Prefixed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Prefixed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Prefixed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Prefixed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Prefixed$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Prefixed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Prefixed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Prefixed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Prefixed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Prefixed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Prefixed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Prefixed$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Prefixed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Prefixed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Prefixed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Prefixed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/Prefixed.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Prefixed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Prefixed.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Prefixed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Prefixed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Prefixed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Prefixed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Prefixed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Prefixed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Prefixed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Prefixed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Prefixed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Prefixed.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Prefixed.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Prefixed.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Prefixed.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Prefixed.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Prefixed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Prefixed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Prefixed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "prefixed", "tail" : "(s: S): Prism[S, T]", "member" : "proptics.typeclass.Prefixed.prefixed", "link" : "proptics\/typeclass\/Prefixed.html#prefixed(s:S):proptics.Prism[S,T]", "kind" : "abstract def"}], "shortDescription" : "The Prefixed typeclass provides a Prism for a way to prepend or remove elements on the left side of a structure."}, {"name" : "proptics.typeclass.Reverse", "object" : "proptics\/typeclass\/Reverse$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Reverse[S, T]): Reverse[S, T]", "member" : "proptics.typeclass.Reverse.apply", "link" : "proptics\/typeclass\/Reverse$.html#apply[S,T](implicitev:proptics.typeclass.Reverse[S,T]):proptics.typeclass.Reverse[S,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Reverse$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Reverse$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Reverse$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Reverse$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Reverse$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Reverse$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Reverse$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Reverse$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Reverse$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Reverse$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Reverse$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Reverse$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Reverse$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Reverse$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Reverse$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Reverse$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Reverse$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Reverse$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Reverse$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/Reverse.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Reverse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Reverse.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Reverse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Reverse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Reverse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Reverse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Reverse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Reverse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Reverse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Reverse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Reverse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Reverse.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Reverse.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Reverse.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Reverse.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Reverse.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Reverse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Reverse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Reverse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reverse", "tail" : "(): Iso[S, T]", "member" : "proptics.typeclass.Reverse.reverse", "link" : "proptics\/typeclass\/Reverse.html#reverse:proptics.Iso[S,T]", "kind" : "abstract def"}], "shortDescription" : "The Reverse typeclass provides an Iso for a way to reverse the elements of a structure."}, {"name" : "proptics.typeclass.Suffixed", "object" : "proptics\/typeclass\/Suffixed$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Suffixed[S, T]): Suffixed[S, T]", "member" : "proptics.typeclass.Suffixed.apply", "link" : "proptics\/typeclass\/Suffixed$.html#apply[S,T](implicitev:proptics.typeclass.Suffixed[S,T]):proptics.typeclass.Suffixed[S,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Suffixed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Suffixed$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Suffixed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Suffixed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Suffixed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Suffixed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Suffixed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Suffixed$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Suffixed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Suffixed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Suffixed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Suffixed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Suffixed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Suffixed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Suffixed$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Suffixed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Suffixed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Suffixed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Suffixed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/typeclass\/Suffixed.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/typeclass\/Suffixed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/typeclass\/Suffixed.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/typeclass\/Suffixed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/typeclass\/Suffixed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/typeclass\/Suffixed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/typeclass\/Suffixed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/typeclass\/Suffixed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Suffixed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Suffixed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/typeclass\/Suffixed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/typeclass\/Suffixed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/typeclass\/Suffixed.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/typeclass\/Suffixed.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/typeclass\/Suffixed.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/typeclass\/Suffixed.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/typeclass\/Suffixed.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/typeclass\/Suffixed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/typeclass\/Suffixed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/typeclass\/Suffixed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "suffixed", "tail" : "(s: S): Prism[S, T]", "member" : "proptics.typeclass.Suffixed.suffixed", "link" : "proptics\/typeclass\/Suffixed.html#suffixed(s:S):proptics.Prism[S,T]", "kind" : "abstract def"}], "shortDescription" : "The Suffixed typeclass provides a Prism for a way to append or truncate elements on the right side of a structure."}], "proptics.std" : [{"name" : "proptics.std.all", "shortDescription" : "", "object" : "proptics\/std\/package$$all$.html", "members_object" : [{"label" : "unit", "tail" : "(): Lens[A, Unit]", "member" : "proptics.std.UnitOptics.unit", "link" : "proptics\/std\/package$$all$.html#unit[A]:proptics.Lens[A,Unit]", "kind" : "final def"}, {"label" : "secondA", "tail" : "(ev: Field2[(A, B), B]): ALens[(A, B), B]", "member" : "proptics.std.ALensTupleOptics.secondA", "link" : "proptics\/std\/package$$all$.html#secondA[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.ALens[(A,B),B]", "kind" : "final def"}, {"label" : "_2A", "tail" : "(ev: Field2[(A, B), B]): ALens[(A, B), B]", "member" : "proptics.std.ALensTupleOptics._2A", "link" : "proptics\/std\/package$$all$.html#_2A[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.ALens[(A,B),B]", "kind" : "final def"}, {"label" : "secondPA", "tail" : "(): ALens_[(C, A), (C, B), A, B]", "member" : "proptics.std.ALensTupleOptics.secondPA", "link" : "proptics\/std\/package$$all$.html#secondPA[A,B,C]:proptics.ALens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_2PA", "tail" : "(): ALens_[(C, A), (C, B), A, B]", "member" : "proptics.std.ALensTupleOptics._2PA", "link" : "proptics\/std\/package$$all$.html#_2PA[A,B,C]:proptics.ALens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_1A", "tail" : "(ev: Field1[(A, B), A]): ALens[(A, B), A]", "member" : "proptics.std.ALensTupleOptics._1A", "link" : "proptics\/std\/package$$all$.html#_1A[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.ALens[(A,B),A]", "kind" : "final def"}, {"label" : "fstPA", "tail" : "(): ALens_[(A, C), (B, C), A, B]", "member" : "proptics.std.ALensTupleOptics.fstPA", "link" : "proptics\/std\/package$$all$.html#fstPA[A,B,C]:proptics.ALens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "_1PA", "tail" : "(): ALens_[(A, C), (B, C), A, B]", "member" : "proptics.std.ALensTupleOptics._1PA", "link" : "proptics\/std\/package$$all$.html#_1PA[A,B,C]:proptics.ALens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "swapTuple", "tail" : "(): Iso[(A, B), (B, A)]", "member" : "proptics.std.LensTupleOptics.swapTuple", "link" : "proptics\/std\/package$$all$.html#swapTuple[A,B]:proptics.Iso[(A,B),(B,A)]", "kind" : "final def"}, {"label" : "_2", "tail" : "(ev: Field2[(A, B), B]): Lens[(A, B), B]", "member" : "proptics.std.LensTupleOptics._2", "link" : "proptics\/std\/package$$all$.html#_2[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.Lens[(A,B),B]", "kind" : "final def"}, {"label" : "secondP", "tail" : "(): Lens_[(C, A), (C, B), A, B]", "member" : "proptics.std.LensTupleOptics.secondP", "link" : "proptics\/std\/package$$all$.html#secondP[A,B,C]:proptics.Lens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_2P", "tail" : "(): Lens_[(C, A), (C, B), A, B]", "member" : "proptics.std.LensTupleOptics._2P", "link" : "proptics\/std\/package$$all$.html#_2P[A,B,C]:proptics.Lens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_1", "tail" : "(ev: Field1[(A, B), A]): Lens[(A, B), A]", "member" : "proptics.std.LensTupleOptics._1", "link" : "proptics\/std\/package$$all$.html#_1[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.Lens[(A,B),A]", "kind" : "final def"}, {"label" : "firstP", "tail" : "(): Lens_[(A, C), (B, C), A, B]", "member" : "proptics.std.LensTupleOptics.firstP", "link" : "proptics\/std\/package$$all$.html#firstP[A,B,C]:proptics.Lens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "_1P", "tail" : "(): Lens_[(A, C), (B, C), A, B]", "member" : "proptics.std.LensTupleOptics._1P", "link" : "proptics\/std\/package$$all$.html#_1P[A,B,C]:proptics.Lens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "split", "tail" : "(regex: String): Traversal_[String, List[String], String, String]", "member" : "proptics.std.StringOptics.split", "link" : "proptics\/std\/package$$all$.html#split(regex:String):proptics.Traversal_[String,List[String],String,String]", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): Iso_[String, String, String, List[String]]", "member" : "proptics.std.StringOptics.mkString", "link" : "proptics\/std\/package$$all$.html#mkString(sep:String):proptics.Iso_[String,String,String,List[String]]", "kind" : "def"}, {"label" : "words", "tail" : ": Traversal[String, String]", "member" : "proptics.std.StringOptics.words", "link" : "proptics\/std\/package$$all$.html#words:proptics.Traversal[String,String]", "kind" : "val"}, {"label" : "stringToChars", "tail" : ": Iso[String, List[Char]]", "member" : "proptics.std.StringOptics.stringToChars", "link" : "proptics\/std\/package$$all$.html#stringToChars:proptics.Iso[String,List[Char]]", "kind" : "final val"}, {"label" : "snd2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[F, H, A], G[A], H[A]]", "member" : "proptics.std.ProductOptics.snd2K", "link" : "proptics\/std\/package$$all$.html#snd2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[F,H,A],G[A],H[A]]", "kind" : "final def"}, {"label" : "_2T2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[F, H, A], G[A], H[A]]", "member" : "proptics.std.ProductOptics._2T2K", "link" : "proptics\/std\/package$$all$.html#_2T2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[F,H,A],G[A],H[A]]", "kind" : "final def"}, {"label" : "fst2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[H, G, A], F[A], H[A]]", "member" : "proptics.std.ProductOptics.fst2K", "link" : "proptics\/std\/package$$all$.html#fst2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[H,G,A],F[A],H[A]]", "kind" : "final def"}, {"label" : "_1T2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[H, G, A], F[A], H[A]]", "member" : "proptics.std.ProductOptics._1T2K", "link" : "proptics\/std\/package$$all$.html#_1T2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[H,G,A],F[A],H[A]]", "kind" : "final def"}, {"label" : "some", "tail" : "(): Prism[Option[A], A]", "member" : "proptics.std.OptionOptics.some", "link" : "proptics\/std\/package$$all$.html#some[A]:proptics.Prism[Option[A],A]", "kind" : "final def"}, {"label" : "none", "tail" : "(): Prism[Option[A], Unit]", "member" : "proptics.std.OptionOptics.none", "link" : "proptics\/std\/package$$all$.html#none[A]:proptics.Prism[Option[A],Unit]", "kind" : "final def"}, {"label" : "someP", "tail" : "(): Prism_[Option[A], Option[B], A, B]", "member" : "proptics.std.OptionOptics.someP", "link" : "proptics\/std\/package$$all$.html#someP[A,B]:proptics.Prism_[Option[A],Option[B],A,B]", "kind" : "final def"}, {"label" : "noneP", "tail" : "(): Prism_[Option[A], Option[B], Unit, Unit]", "member" : "proptics.std.OptionOptics.noneP", "link" : "proptics\/std\/package$$all$.html#noneP[A,B]:proptics.Prism_[Option[A],Option[B],Unit,Unit]", "kind" : "final def"}, {"label" : "charsToString", "tail" : ": Iso[List[Char], String]", "member" : "proptics.std.ListOptics.charsToString", "link" : "proptics\/std\/package$$all$.html#charsToString:proptics.Iso[List[Char],String]", "kind" : "final val"}, {"label" : "listToNonEmptyList", "tail" : "(): Prism[List[A], NonEmptyList[A]]", "member" : "proptics.std.ListOptics.listToNonEmptyList", "link" : "proptics\/std\/package$$all$.html#listToNonEmptyList[A]:proptics.Prism[List[A],cats.data.NonEmptyList[A]]", "kind" : "final def"}, {"label" : "listToVector", "tail" : "(): Iso[List[A], Vector[A]]", "member" : "proptics.std.ListOptics.listToVector", "link" : "proptics\/std\/package$$all$.html#listToVector[A]:proptics.Iso[List[A],Vector[A]]", "kind" : "final def"}, {"label" : "listToArray", "tail" : "(arg0: ClassTag[A]): Iso[List[A], Array[A]]", "member" : "proptics.std.ListOptics.listToArray", "link" : "proptics\/std\/package$$all$.html#listToArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.Iso[List[A],Array[A]]", "kind" : "final def"}, {"label" : "flip", "tail" : "(): Iso[(A) => (B) => C, (B) => (A) => C]", "member" : "proptics.std.FunctionOptics.flip", "link" : "proptics\/std\/package$$all$.html#flip[A,B,C]:proptics.Iso[A=>(B=>C),B=>(A=>C)]", "kind" : "final def"}, {"label" : "uncurried", "tail" : "(): Iso[(A) => (B) => C, (A, B) => C]", "member" : "proptics.std.FunctionOptics.uncurried", "link" : "proptics\/std\/package$$all$.html#uncurried[A,B,C]:proptics.Iso[A=>(B=>C),(A,B)=>C]", "kind" : "final def"}, {"label" : "curried", "tail" : "(): Iso[(A, B) => C, (A) => (B) => C]", "member" : "proptics.std.FunctionOptics.curried", "link" : "proptics\/std\/package$$all$.html#curried[A,B,C]:proptics.Iso[(A,B)=>C,A=>(B=>C)]", "kind" : "final def"}, {"label" : "flipP", "tail" : "(): Iso_[(A) => (B) => C, (D) => (E) => F, (B) => (A) => C, (E) => (D) => F]", "member" : "proptics.std.FunctionOptics.flipP", "link" : "proptics\/std\/package$$all$.html#flipP[A,B,C,D,E,F]:proptics.Iso_[A=>(B=>C),D=>(E=>F),B=>(A=>C),E=>(D=>F)]", "kind" : "final def"}, {"label" : "uncurriedP", "tail" : "(): Iso_[(A) => (B) => C, (D) => (E) => F, (A, B) => C, (D, E) => F]", "member" : "proptics.std.FunctionOptics.uncurriedP", "link" : "proptics\/std\/package$$all$.html#uncurriedP[A,B,C,D,E,F]:proptics.Iso_[A=>(B=>C),D=>(E=>F),(A,B)=>C,(D,E)=>F]", "kind" : "final def"}, {"label" : "curriedP", "tail" : "(): Iso_[(A, B) => C, (D, E) => F, (A) => (B) => C, (D) => (E) => F]", "member" : "proptics.std.FunctionOptics.curriedP", "link" : "proptics\/std\/package$$all$.html#curriedP[A,B,C,D,E,F]:proptics.Iso_[(A,B)=>C,(D,E)=>F,A=>(B=>C),D=>(E=>F)]", "kind" : "final def"}, {"label" : "swapEither", "tail" : "(): Iso[Either[A, B], Either[B, A]]", "member" : "proptics.std.EitherOptics.swapEither", "link" : "proptics\/std\/package$$all$.html#swapEither[A,B]:proptics.Iso[Either[A,B],Either[B,A]]", "kind" : "final def"}, {"label" : "right", "tail" : "(): Prism[Either[A, B], B]", "member" : "proptics.std.EitherOptics.right", "link" : "proptics\/std\/package$$all$.html#right[A,B]:proptics.Prism[Either[A,B],B]", "kind" : "final def"}, {"label" : "rightP", "tail" : "(): Prism_[Either[C, A], Either[C, B], A, B]", "member" : "proptics.std.EitherOptics.rightP", "link" : "proptics\/std\/package$$all$.html#rightP[A,B,C]:proptics.Prism_[Either[C,A],Either[C,B],A,B]", "kind" : "final def"}, {"label" : "left", "tail" : "(): Prism[Either[A, B], A]", "member" : "proptics.std.EitherOptics.left", "link" : "proptics\/std\/package$$all$.html#left[A,B]:proptics.Prism[Either[A,B],A]", "kind" : "final def"}, {"label" : "leftP", "tail" : "(): Prism_[Either[A, C], Either[B, C], A, B]", "member" : "proptics.std.EitherOptics.leftP", "link" : "proptics\/std\/package$$all$.html#leftP[A,B,C]:proptics.Prism_[Either[A,C],Either[B,C],A,B]", "kind" : "final def"}, {"label" : "rightK", "tail" : "(): Prism_[EitherK[F, G, A], EitherK[F, H, A], G[A], H[A]]", "member" : "proptics.std.CoproductOptics.rightK", "link" : "proptics\/std\/package$$all$.html#rightK[F[_],G[_],H[_],A]:proptics.Prism_[cats.data.EitherK[F,G,A],cats.data.EitherK[F,H,A],G[A],H[A]]", "kind" : "final def"}, {"label" : "leftK", "tail" : "(): Prism_[EitherK[F, G, A], EitherK[H, G, A], F[A], H[A]]", "member" : "proptics.std.CoproductOptics.leftK", "link" : "proptics\/std\/package$$all$.html#leftK[F[_],G[_],H[_],A]:proptics.Prism_[cats.data.EitherK[F,G,A],cats.data.EitherK[H,G,A],F[A],H[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/package$$all$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/package$$all$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/package$$all$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/package$$all$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/package$$all$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/package$$all$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/package$$all$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$all$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$all$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$all$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/package$$all$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/package$$all$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/package$$all$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/package$$all$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/package$$all$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/package$$all$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/package$$all$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/package$$all$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/package$$all$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.std.AllOptics", "trait" : "proptics\/std\/AllOptics.html", "kind" : "trait", "members_trait" : [{"label" : "unit", "tail" : "(): Lens[A, Unit]", "member" : "proptics.std.UnitOptics.unit", "link" : "proptics\/std\/AllOptics.html#unit[A]:proptics.Lens[A,Unit]", "kind" : "final def"}, {"label" : "secondA", "tail" : "(ev: Field2[(A, B), B]): ALens[(A, B), B]", "member" : "proptics.std.ALensTupleOptics.secondA", "link" : "proptics\/std\/AllOptics.html#secondA[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.ALens[(A,B),B]", "kind" : "final def"}, {"label" : "_2A", "tail" : "(ev: Field2[(A, B), B]): ALens[(A, B), B]", "member" : "proptics.std.ALensTupleOptics._2A", "link" : "proptics\/std\/AllOptics.html#_2A[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.ALens[(A,B),B]", "kind" : "final def"}, {"label" : "secondPA", "tail" : "(): ALens_[(C, A), (C, B), A, B]", "member" : "proptics.std.ALensTupleOptics.secondPA", "link" : "proptics\/std\/AllOptics.html#secondPA[A,B,C]:proptics.ALens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_2PA", "tail" : "(): ALens_[(C, A), (C, B), A, B]", "member" : "proptics.std.ALensTupleOptics._2PA", "link" : "proptics\/std\/AllOptics.html#_2PA[A,B,C]:proptics.ALens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_1A", "tail" : "(ev: Field1[(A, B), A]): ALens[(A, B), A]", "member" : "proptics.std.ALensTupleOptics._1A", "link" : "proptics\/std\/AllOptics.html#_1A[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.ALens[(A,B),A]", "kind" : "final def"}, {"label" : "fstPA", "tail" : "(): ALens_[(A, C), (B, C), A, B]", "member" : "proptics.std.ALensTupleOptics.fstPA", "link" : "proptics\/std\/AllOptics.html#fstPA[A,B,C]:proptics.ALens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "_1PA", "tail" : "(): ALens_[(A, C), (B, C), A, B]", "member" : "proptics.std.ALensTupleOptics._1PA", "link" : "proptics\/std\/AllOptics.html#_1PA[A,B,C]:proptics.ALens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "swapTuple", "tail" : "(): Iso[(A, B), (B, A)]", "member" : "proptics.std.LensTupleOptics.swapTuple", "link" : "proptics\/std\/AllOptics.html#swapTuple[A,B]:proptics.Iso[(A,B),(B,A)]", "kind" : "final def"}, {"label" : "_2", "tail" : "(ev: Field2[(A, B), B]): Lens[(A, B), B]", "member" : "proptics.std.LensTupleOptics._2", "link" : "proptics\/std\/AllOptics.html#_2[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.Lens[(A,B),B]", "kind" : "final def"}, {"label" : "secondP", "tail" : "(): Lens_[(C, A), (C, B), A, B]", "member" : "proptics.std.LensTupleOptics.secondP", "link" : "proptics\/std\/AllOptics.html#secondP[A,B,C]:proptics.Lens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_2P", "tail" : "(): Lens_[(C, A), (C, B), A, B]", "member" : "proptics.std.LensTupleOptics._2P", "link" : "proptics\/std\/AllOptics.html#_2P[A,B,C]:proptics.Lens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_1", "tail" : "(ev: Field1[(A, B), A]): Lens[(A, B), A]", "member" : "proptics.std.LensTupleOptics._1", "link" : "proptics\/std\/AllOptics.html#_1[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.Lens[(A,B),A]", "kind" : "final def"}, {"label" : "firstP", "tail" : "(): Lens_[(A, C), (B, C), A, B]", "member" : "proptics.std.LensTupleOptics.firstP", "link" : "proptics\/std\/AllOptics.html#firstP[A,B,C]:proptics.Lens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "_1P", "tail" : "(): Lens_[(A, C), (B, C), A, B]", "member" : "proptics.std.LensTupleOptics._1P", "link" : "proptics\/std\/AllOptics.html#_1P[A,B,C]:proptics.Lens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "split", "tail" : "(regex: String): Traversal_[String, List[String], String, String]", "member" : "proptics.std.StringOptics.split", "link" : "proptics\/std\/AllOptics.html#split(regex:String):proptics.Traversal_[String,List[String],String,String]", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): Iso_[String, String, String, List[String]]", "member" : "proptics.std.StringOptics.mkString", "link" : "proptics\/std\/AllOptics.html#mkString(sep:String):proptics.Iso_[String,String,String,List[String]]", "kind" : "def"}, {"label" : "words", "tail" : ": Traversal[String, String]", "member" : "proptics.std.StringOptics.words", "link" : "proptics\/std\/AllOptics.html#words:proptics.Traversal[String,String]", "kind" : "val"}, {"label" : "stringToChars", "tail" : ": Iso[String, List[Char]]", "member" : "proptics.std.StringOptics.stringToChars", "link" : "proptics\/std\/AllOptics.html#stringToChars:proptics.Iso[String,List[Char]]", "kind" : "final val"}, {"label" : "snd2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[F, H, A], G[A], H[A]]", "member" : "proptics.std.ProductOptics.snd2K", "link" : "proptics\/std\/AllOptics.html#snd2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[F,H,A],G[A],H[A]]", "kind" : "final def"}, {"label" : "_2T2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[F, H, A], G[A], H[A]]", "member" : "proptics.std.ProductOptics._2T2K", "link" : "proptics\/std\/AllOptics.html#_2T2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[F,H,A],G[A],H[A]]", "kind" : "final def"}, {"label" : "fst2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[H, G, A], F[A], H[A]]", "member" : "proptics.std.ProductOptics.fst2K", "link" : "proptics\/std\/AllOptics.html#fst2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[H,G,A],F[A],H[A]]", "kind" : "final def"}, {"label" : "_1T2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[H, G, A], F[A], H[A]]", "member" : "proptics.std.ProductOptics._1T2K", "link" : "proptics\/std\/AllOptics.html#_1T2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[H,G,A],F[A],H[A]]", "kind" : "final def"}, {"label" : "some", "tail" : "(): Prism[Option[A], A]", "member" : "proptics.std.OptionOptics.some", "link" : "proptics\/std\/AllOptics.html#some[A]:proptics.Prism[Option[A],A]", "kind" : "final def"}, {"label" : "none", "tail" : "(): Prism[Option[A], Unit]", "member" : "proptics.std.OptionOptics.none", "link" : "proptics\/std\/AllOptics.html#none[A]:proptics.Prism[Option[A],Unit]", "kind" : "final def"}, {"label" : "someP", "tail" : "(): Prism_[Option[A], Option[B], A, B]", "member" : "proptics.std.OptionOptics.someP", "link" : "proptics\/std\/AllOptics.html#someP[A,B]:proptics.Prism_[Option[A],Option[B],A,B]", "kind" : "final def"}, {"label" : "noneP", "tail" : "(): Prism_[Option[A], Option[B], Unit, Unit]", "member" : "proptics.std.OptionOptics.noneP", "link" : "proptics\/std\/AllOptics.html#noneP[A,B]:proptics.Prism_[Option[A],Option[B],Unit,Unit]", "kind" : "final def"}, {"label" : "charsToString", "tail" : ": Iso[List[Char], String]", "member" : "proptics.std.ListOptics.charsToString", "link" : "proptics\/std\/AllOptics.html#charsToString:proptics.Iso[List[Char],String]", "kind" : "final val"}, {"label" : "listToNonEmptyList", "tail" : "(): Prism[List[A], NonEmptyList[A]]", "member" : "proptics.std.ListOptics.listToNonEmptyList", "link" : "proptics\/std\/AllOptics.html#listToNonEmptyList[A]:proptics.Prism[List[A],cats.data.NonEmptyList[A]]", "kind" : "final def"}, {"label" : "listToVector", "tail" : "(): Iso[List[A], Vector[A]]", "member" : "proptics.std.ListOptics.listToVector", "link" : "proptics\/std\/AllOptics.html#listToVector[A]:proptics.Iso[List[A],Vector[A]]", "kind" : "final def"}, {"label" : "listToArray", "tail" : "(arg0: ClassTag[A]): Iso[List[A], Array[A]]", "member" : "proptics.std.ListOptics.listToArray", "link" : "proptics\/std\/AllOptics.html#listToArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.Iso[List[A],Array[A]]", "kind" : "final def"}, {"label" : "flip", "tail" : "(): Iso[(A) => (B) => C, (B) => (A) => C]", "member" : "proptics.std.FunctionOptics.flip", "link" : "proptics\/std\/AllOptics.html#flip[A,B,C]:proptics.Iso[A=>(B=>C),B=>(A=>C)]", "kind" : "final def"}, {"label" : "uncurried", "tail" : "(): Iso[(A) => (B) => C, (A, B) => C]", "member" : "proptics.std.FunctionOptics.uncurried", "link" : "proptics\/std\/AllOptics.html#uncurried[A,B,C]:proptics.Iso[A=>(B=>C),(A,B)=>C]", "kind" : "final def"}, {"label" : "curried", "tail" : "(): Iso[(A, B) => C, (A) => (B) => C]", "member" : "proptics.std.FunctionOptics.curried", "link" : "proptics\/std\/AllOptics.html#curried[A,B,C]:proptics.Iso[(A,B)=>C,A=>(B=>C)]", "kind" : "final def"}, {"label" : "flipP", "tail" : "(): Iso_[(A) => (B) => C, (D) => (E) => F, (B) => (A) => C, (E) => (D) => F]", "member" : "proptics.std.FunctionOptics.flipP", "link" : "proptics\/std\/AllOptics.html#flipP[A,B,C,D,E,F]:proptics.Iso_[A=>(B=>C),D=>(E=>F),B=>(A=>C),E=>(D=>F)]", "kind" : "final def"}, {"label" : "uncurriedP", "tail" : "(): Iso_[(A) => (B) => C, (D) => (E) => F, (A, B) => C, (D, E) => F]", "member" : "proptics.std.FunctionOptics.uncurriedP", "link" : "proptics\/std\/AllOptics.html#uncurriedP[A,B,C,D,E,F]:proptics.Iso_[A=>(B=>C),D=>(E=>F),(A,B)=>C,(D,E)=>F]", "kind" : "final def"}, {"label" : "curriedP", "tail" : "(): Iso_[(A, B) => C, (D, E) => F, (A) => (B) => C, (D) => (E) => F]", "member" : "proptics.std.FunctionOptics.curriedP", "link" : "proptics\/std\/AllOptics.html#curriedP[A,B,C,D,E,F]:proptics.Iso_[(A,B)=>C,(D,E)=>F,A=>(B=>C),D=>(E=>F)]", "kind" : "final def"}, {"label" : "swapEither", "tail" : "(): Iso[Either[A, B], Either[B, A]]", "member" : "proptics.std.EitherOptics.swapEither", "link" : "proptics\/std\/AllOptics.html#swapEither[A,B]:proptics.Iso[Either[A,B],Either[B,A]]", "kind" : "final def"}, {"label" : "right", "tail" : "(): Prism[Either[A, B], B]", "member" : "proptics.std.EitherOptics.right", "link" : "proptics\/std\/AllOptics.html#right[A,B]:proptics.Prism[Either[A,B],B]", "kind" : "final def"}, {"label" : "rightP", "tail" : "(): Prism_[Either[C, A], Either[C, B], A, B]", "member" : "proptics.std.EitherOptics.rightP", "link" : "proptics\/std\/AllOptics.html#rightP[A,B,C]:proptics.Prism_[Either[C,A],Either[C,B],A,B]", "kind" : "final def"}, {"label" : "left", "tail" : "(): Prism[Either[A, B], A]", "member" : "proptics.std.EitherOptics.left", "link" : "proptics\/std\/AllOptics.html#left[A,B]:proptics.Prism[Either[A,B],A]", "kind" : "final def"}, {"label" : "leftP", "tail" : "(): Prism_[Either[A, C], Either[B, C], A, B]", "member" : "proptics.std.EitherOptics.leftP", "link" : "proptics\/std\/AllOptics.html#leftP[A,B,C]:proptics.Prism_[Either[A,C],Either[B,C],A,B]", "kind" : "final def"}, {"label" : "rightK", "tail" : "(): Prism_[EitherK[F, G, A], EitherK[F, H, A], G[A], H[A]]", "member" : "proptics.std.CoproductOptics.rightK", "link" : "proptics\/std\/AllOptics.html#rightK[F[_],G[_],H[_],A]:proptics.Prism_[cats.data.EitherK[F,G,A],cats.data.EitherK[F,H,A],G[A],H[A]]", "kind" : "final def"}, {"label" : "leftK", "tail" : "(): Prism_[EitherK[F, G, A], EitherK[H, G, A], F[A], H[A]]", "member" : "proptics.std.CoproductOptics.leftK", "link" : "proptics\/std\/AllOptics.html#leftK[F[_],G[_],H[_],A]:proptics.Prism_[cats.data.EitherK[F,G,A],cats.data.EitherK[H,G,A],F[A],H[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/AllOptics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/AllOptics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/AllOptics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/AllOptics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/AllOptics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/AllOptics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/AllOptics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/AllOptics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/AllOptics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/AllOptics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/AllOptics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/AllOptics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/AllOptics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/AllOptics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/AllOptics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/AllOptics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/AllOptics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/AllOptics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/AllOptics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.std.CoproductOptics", "trait" : "proptics\/std\/CoproductOptics.html", "kind" : "trait", "members_trait" : [{"label" : "rightK", "tail" : "(): Prism_[EitherK[F, G, A], EitherK[F, H, A], G[A], H[A]]", "member" : "proptics.std.CoproductOptics.rightK", "link" : "proptics\/std\/CoproductOptics.html#rightK[F[_],G[_],H[_],A]:proptics.Prism_[cats.data.EitherK[F,G,A],cats.data.EitherK[F,H,A],G[A],H[A]]", "kind" : "final def"}, {"label" : "leftK", "tail" : "(): Prism_[EitherK[F, G, A], EitherK[H, G, A], F[A], H[A]]", "member" : "proptics.std.CoproductOptics.leftK", "link" : "proptics\/std\/CoproductOptics.html#leftK[F[_],G[_],H[_],A]:proptics.Prism_[cats.data.EitherK[F,G,A],cats.data.EitherK[H,G,A],F[A],H[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/CoproductOptics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/CoproductOptics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/CoproductOptics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/CoproductOptics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/CoproductOptics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/CoproductOptics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/CoproductOptics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/CoproductOptics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/CoproductOptics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/CoproductOptics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/CoproductOptics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/CoproductOptics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/CoproductOptics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/CoproductOptics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/CoproductOptics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/CoproductOptics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/CoproductOptics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/CoproductOptics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/CoproductOptics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.std.either", "shortDescription" : "", "object" : "proptics\/std\/package$$either$.html", "members_object" : [{"label" : "swapEither", "tail" : "(): Iso[Either[A, B], Either[B, A]]", "member" : "proptics.std.EitherOptics.swapEither", "link" : "proptics\/std\/package$$either$.html#swapEither[A,B]:proptics.Iso[Either[A,B],Either[B,A]]", "kind" : "final def"}, {"label" : "right", "tail" : "(): Prism[Either[A, B], B]", "member" : "proptics.std.EitherOptics.right", "link" : "proptics\/std\/package$$either$.html#right[A,B]:proptics.Prism[Either[A,B],B]", "kind" : "final def"}, {"label" : "rightP", "tail" : "(): Prism_[Either[C, A], Either[C, B], A, B]", "member" : "proptics.std.EitherOptics.rightP", "link" : "proptics\/std\/package$$either$.html#rightP[A,B,C]:proptics.Prism_[Either[C,A],Either[C,B],A,B]", "kind" : "final def"}, {"label" : "left", "tail" : "(): Prism[Either[A, B], A]", "member" : "proptics.std.EitherOptics.left", "link" : "proptics\/std\/package$$either$.html#left[A,B]:proptics.Prism[Either[A,B],A]", "kind" : "final def"}, {"label" : "leftP", "tail" : "(): Prism_[Either[A, C], Either[B, C], A, B]", "member" : "proptics.std.EitherOptics.leftP", "link" : "proptics\/std\/package$$either$.html#leftP[A,B,C]:proptics.Prism_[Either[A,C],Either[B,C],A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/package$$either$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/package$$either$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/package$$either$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/package$$either$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/package$$either$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/package$$either$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/package$$either$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$either$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$either$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$either$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/package$$either$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/package$$either$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/package$$either$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/package$$either$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/package$$either$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/package$$either$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/package$$either$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/package$$either$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/package$$either$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.std.eitherK", "shortDescription" : "", "object" : "proptics\/std\/package$$eitherK$.html", "members_object" : [{"label" : "rightK", "tail" : "(): Prism_[EitherK[F, G, A], EitherK[F, H, A], G[A], H[A]]", "member" : "proptics.std.CoproductOptics.rightK", "link" : "proptics\/std\/package$$eitherK$.html#rightK[F[_],G[_],H[_],A]:proptics.Prism_[cats.data.EitherK[F,G,A],cats.data.EitherK[F,H,A],G[A],H[A]]", "kind" : "final def"}, {"label" : "leftK", "tail" : "(): Prism_[EitherK[F, G, A], EitherK[H, G, A], F[A], H[A]]", "member" : "proptics.std.CoproductOptics.leftK", "link" : "proptics\/std\/package$$eitherK$.html#leftK[F[_],G[_],H[_],A]:proptics.Prism_[cats.data.EitherK[F,G,A],cats.data.EitherK[H,G,A],F[A],H[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/package$$eitherK$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/package$$eitherK$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/package$$eitherK$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/package$$eitherK$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/package$$eitherK$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/package$$eitherK$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/package$$eitherK$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$eitherK$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$eitherK$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$eitherK$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/package$$eitherK$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/package$$eitherK$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/package$$eitherK$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/package$$eitherK$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/package$$eitherK$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/package$$eitherK$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/package$$eitherK$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/package$$eitherK$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/package$$eitherK$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.std.EitherOptics", "trait" : "proptics\/std\/EitherOptics.html", "kind" : "trait", "members_trait" : [{"label" : "swapEither", "tail" : "(): Iso[Either[A, B], Either[B, A]]", "member" : "proptics.std.EitherOptics.swapEither", "link" : "proptics\/std\/EitherOptics.html#swapEither[A,B]:proptics.Iso[Either[A,B],Either[B,A]]", "kind" : "final def"}, {"label" : "right", "tail" : "(): Prism[Either[A, B], B]", "member" : "proptics.std.EitherOptics.right", "link" : "proptics\/std\/EitherOptics.html#right[A,B]:proptics.Prism[Either[A,B],B]", "kind" : "final def"}, {"label" : "rightP", "tail" : "(): Prism_[Either[C, A], Either[C, B], A, B]", "member" : "proptics.std.EitherOptics.rightP", "link" : "proptics\/std\/EitherOptics.html#rightP[A,B,C]:proptics.Prism_[Either[C,A],Either[C,B],A,B]", "kind" : "final def"}, {"label" : "left", "tail" : "(): Prism[Either[A, B], A]", "member" : "proptics.std.EitherOptics.left", "link" : "proptics\/std\/EitherOptics.html#left[A,B]:proptics.Prism[Either[A,B],A]", "kind" : "final def"}, {"label" : "leftP", "tail" : "(): Prism_[Either[A, C], Either[B, C], A, B]", "member" : "proptics.std.EitherOptics.leftP", "link" : "proptics\/std\/EitherOptics.html#leftP[A,B,C]:proptics.Prism_[Either[A,C],Either[B,C],A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/EitherOptics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/EitherOptics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/EitherOptics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/EitherOptics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/EitherOptics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/EitherOptics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/EitherOptics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/EitherOptics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/EitherOptics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/EitherOptics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/EitherOptics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/EitherOptics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/EitherOptics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/EitherOptics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/EitherOptics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/EitherOptics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/EitherOptics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/EitherOptics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/EitherOptics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.std.function", "shortDescription" : "", "object" : "proptics\/std\/package$$function$.html", "members_object" : [{"label" : "flip", "tail" : "(): Iso[(A) => (B) => C, (B) => (A) => C]", "member" : "proptics.std.FunctionOptics.flip", "link" : "proptics\/std\/package$$function$.html#flip[A,B,C]:proptics.Iso[A=>(B=>C),B=>(A=>C)]", "kind" : "final def"}, {"label" : "uncurried", "tail" : "(): Iso[(A) => (B) => C, (A, B) => C]", "member" : "proptics.std.FunctionOptics.uncurried", "link" : "proptics\/std\/package$$function$.html#uncurried[A,B,C]:proptics.Iso[A=>(B=>C),(A,B)=>C]", "kind" : "final def"}, {"label" : "curried", "tail" : "(): Iso[(A, B) => C, (A) => (B) => C]", "member" : "proptics.std.FunctionOptics.curried", "link" : "proptics\/std\/package$$function$.html#curried[A,B,C]:proptics.Iso[(A,B)=>C,A=>(B=>C)]", "kind" : "final def"}, {"label" : "flipP", "tail" : "(): Iso_[(A) => (B) => C, (D) => (E) => F, (B) => (A) => C, (E) => (D) => F]", "member" : "proptics.std.FunctionOptics.flipP", "link" : "proptics\/std\/package$$function$.html#flipP[A,B,C,D,E,F]:proptics.Iso_[A=>(B=>C),D=>(E=>F),B=>(A=>C),E=>(D=>F)]", "kind" : "final def"}, {"label" : "uncurriedP", "tail" : "(): Iso_[(A) => (B) => C, (D) => (E) => F, (A, B) => C, (D, E) => F]", "member" : "proptics.std.FunctionOptics.uncurriedP", "link" : "proptics\/std\/package$$function$.html#uncurriedP[A,B,C,D,E,F]:proptics.Iso_[A=>(B=>C),D=>(E=>F),(A,B)=>C,(D,E)=>F]", "kind" : "final def"}, {"label" : "curriedP", "tail" : "(): Iso_[(A, B) => C, (D, E) => F, (A) => (B) => C, (D) => (E) => F]", "member" : "proptics.std.FunctionOptics.curriedP", "link" : "proptics\/std\/package$$function$.html#curriedP[A,B,C,D,E,F]:proptics.Iso_[(A,B)=>C,(D,E)=>F,A=>(B=>C),D=>(E=>F)]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/package$$function$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/package$$function$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/package$$function$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/package$$function$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/package$$function$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/package$$function$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/package$$function$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$function$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$function$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$function$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/package$$function$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/package$$function$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/package$$function$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/package$$function$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/package$$function$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/package$$function$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/package$$function$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/package$$function$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/package$$function$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.std.FunctionOptics", "trait" : "proptics\/std\/FunctionOptics.html", "kind" : "trait", "members_trait" : [{"label" : "flip", "tail" : "(): Iso[(A) => (B) => C, (B) => (A) => C]", "member" : "proptics.std.FunctionOptics.flip", "link" : "proptics\/std\/FunctionOptics.html#flip[A,B,C]:proptics.Iso[A=>(B=>C),B=>(A=>C)]", "kind" : "final def"}, {"label" : "uncurried", "tail" : "(): Iso[(A) => (B) => C, (A, B) => C]", "member" : "proptics.std.FunctionOptics.uncurried", "link" : "proptics\/std\/FunctionOptics.html#uncurried[A,B,C]:proptics.Iso[A=>(B=>C),(A,B)=>C]", "kind" : "final def"}, {"label" : "curried", "tail" : "(): Iso[(A, B) => C, (A) => (B) => C]", "member" : "proptics.std.FunctionOptics.curried", "link" : "proptics\/std\/FunctionOptics.html#curried[A,B,C]:proptics.Iso[(A,B)=>C,A=>(B=>C)]", "kind" : "final def"}, {"label" : "flipP", "tail" : "(): Iso_[(A) => (B) => C, (D) => (E) => F, (B) => (A) => C, (E) => (D) => F]", "member" : "proptics.std.FunctionOptics.flipP", "link" : "proptics\/std\/FunctionOptics.html#flipP[A,B,C,D,E,F]:proptics.Iso_[A=>(B=>C),D=>(E=>F),B=>(A=>C),E=>(D=>F)]", "kind" : "final def"}, {"label" : "uncurriedP", "tail" : "(): Iso_[(A) => (B) => C, (D) => (E) => F, (A, B) => C, (D, E) => F]", "member" : "proptics.std.FunctionOptics.uncurriedP", "link" : "proptics\/std\/FunctionOptics.html#uncurriedP[A,B,C,D,E,F]:proptics.Iso_[A=>(B=>C),D=>(E=>F),(A,B)=>C,(D,E)=>F]", "kind" : "final def"}, {"label" : "curriedP", "tail" : "(): Iso_[(A, B) => C, (D, E) => F, (A) => (B) => C, (D) => (E) => F]", "member" : "proptics.std.FunctionOptics.curriedP", "link" : "proptics\/std\/FunctionOptics.html#curriedP[A,B,C,D,E,F]:proptics.Iso_[(A,B)=>C,(D,E)=>F,A=>(B=>C),D=>(E=>F)]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/FunctionOptics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/FunctionOptics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/FunctionOptics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/FunctionOptics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/FunctionOptics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/FunctionOptics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/FunctionOptics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/FunctionOptics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/FunctionOptics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/FunctionOptics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/FunctionOptics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/FunctionOptics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/FunctionOptics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/FunctionOptics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/FunctionOptics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/FunctionOptics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/FunctionOptics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/FunctionOptics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/FunctionOptics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.std.list", "shortDescription" : "", "object" : "proptics\/std\/package$$list$.html", "members_object" : [{"label" : "charsToString", "tail" : ": Iso[List[Char], String]", "member" : "proptics.std.ListOptics.charsToString", "link" : "proptics\/std\/package$$list$.html#charsToString:proptics.Iso[List[Char],String]", "kind" : "final val"}, {"label" : "listToNonEmptyList", "tail" : "(): Prism[List[A], NonEmptyList[A]]", "member" : "proptics.std.ListOptics.listToNonEmptyList", "link" : "proptics\/std\/package$$list$.html#listToNonEmptyList[A]:proptics.Prism[List[A],cats.data.NonEmptyList[A]]", "kind" : "final def"}, {"label" : "listToVector", "tail" : "(): Iso[List[A], Vector[A]]", "member" : "proptics.std.ListOptics.listToVector", "link" : "proptics\/std\/package$$list$.html#listToVector[A]:proptics.Iso[List[A],Vector[A]]", "kind" : "final def"}, {"label" : "listToArray", "tail" : "(arg0: ClassTag[A]): Iso[List[A], Array[A]]", "member" : "proptics.std.ListOptics.listToArray", "link" : "proptics\/std\/package$$list$.html#listToArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.Iso[List[A],Array[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/package$$list$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/package$$list$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/package$$list$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/package$$list$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/package$$list$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/package$$list$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/package$$list$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$list$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$list$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$list$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/package$$list$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/package$$list$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/package$$list$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/package$$list$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/package$$list$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/package$$list$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/package$$list$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/package$$list$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/package$$list$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.std.ListOptics", "trait" : "proptics\/std\/ListOptics.html", "kind" : "trait", "members_trait" : [{"label" : "charsToString", "tail" : ": Iso[List[Char], String]", "member" : "proptics.std.ListOptics.charsToString", "link" : "proptics\/std\/ListOptics.html#charsToString:proptics.Iso[List[Char],String]", "kind" : "final val"}, {"label" : "listToNonEmptyList", "tail" : "(): Prism[List[A], NonEmptyList[A]]", "member" : "proptics.std.ListOptics.listToNonEmptyList", "link" : "proptics\/std\/ListOptics.html#listToNonEmptyList[A]:proptics.Prism[List[A],cats.data.NonEmptyList[A]]", "kind" : "final def"}, {"label" : "listToVector", "tail" : "(): Iso[List[A], Vector[A]]", "member" : "proptics.std.ListOptics.listToVector", "link" : "proptics\/std\/ListOptics.html#listToVector[A]:proptics.Iso[List[A],Vector[A]]", "kind" : "final def"}, {"label" : "listToArray", "tail" : "(arg0: ClassTag[A]): Iso[List[A], Array[A]]", "member" : "proptics.std.ListOptics.listToArray", "link" : "proptics\/std\/ListOptics.html#listToArray[A](implicitevidence$1:scala.reflect.ClassTag[A]):proptics.Iso[List[A],Array[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/ListOptics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/ListOptics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/ListOptics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/ListOptics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/ListOptics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/ListOptics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/ListOptics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/ListOptics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/ListOptics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/ListOptics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/ListOptics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/ListOptics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/ListOptics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/ListOptics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/ListOptics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/ListOptics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/ListOptics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/ListOptics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/ListOptics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.std.option", "shortDescription" : "", "object" : "proptics\/std\/package$$option$.html", "members_object" : [{"label" : "some", "tail" : "(): Prism[Option[A], A]", "member" : "proptics.std.OptionOptics.some", "link" : "proptics\/std\/package$$option$.html#some[A]:proptics.Prism[Option[A],A]", "kind" : "final def"}, {"label" : "none", "tail" : "(): Prism[Option[A], Unit]", "member" : "proptics.std.OptionOptics.none", "link" : "proptics\/std\/package$$option$.html#none[A]:proptics.Prism[Option[A],Unit]", "kind" : "final def"}, {"label" : "someP", "tail" : "(): Prism_[Option[A], Option[B], A, B]", "member" : "proptics.std.OptionOptics.someP", "link" : "proptics\/std\/package$$option$.html#someP[A,B]:proptics.Prism_[Option[A],Option[B],A,B]", "kind" : "final def"}, {"label" : "noneP", "tail" : "(): Prism_[Option[A], Option[B], Unit, Unit]", "member" : "proptics.std.OptionOptics.noneP", "link" : "proptics\/std\/package$$option$.html#noneP[A,B]:proptics.Prism_[Option[A],Option[B],Unit,Unit]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/package$$option$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/package$$option$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/package$$option$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/package$$option$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/package$$option$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/package$$option$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/package$$option$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$option$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$option$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$option$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/package$$option$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/package$$option$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/package$$option$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/package$$option$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/package$$option$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/package$$option$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/package$$option$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/package$$option$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/package$$option$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.std.OptionOptics", "trait" : "proptics\/std\/OptionOptics.html", "kind" : "trait", "members_trait" : [{"label" : "some", "tail" : "(): Prism[Option[A], A]", "member" : "proptics.std.OptionOptics.some", "link" : "proptics\/std\/OptionOptics.html#some[A]:proptics.Prism[Option[A],A]", "kind" : "final def"}, {"label" : "none", "tail" : "(): Prism[Option[A], Unit]", "member" : "proptics.std.OptionOptics.none", "link" : "proptics\/std\/OptionOptics.html#none[A]:proptics.Prism[Option[A],Unit]", "kind" : "final def"}, {"label" : "someP", "tail" : "(): Prism_[Option[A], Option[B], A, B]", "member" : "proptics.std.OptionOptics.someP", "link" : "proptics\/std\/OptionOptics.html#someP[A,B]:proptics.Prism_[Option[A],Option[B],A,B]", "kind" : "final def"}, {"label" : "noneP", "tail" : "(): Prism_[Option[A], Option[B], Unit, Unit]", "member" : "proptics.std.OptionOptics.noneP", "link" : "proptics\/std\/OptionOptics.html#noneP[A,B]:proptics.Prism_[Option[A],Option[B],Unit,Unit]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/OptionOptics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/OptionOptics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/OptionOptics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/OptionOptics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/OptionOptics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/OptionOptics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/OptionOptics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/OptionOptics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/OptionOptics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/OptionOptics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/OptionOptics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/OptionOptics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/OptionOptics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/OptionOptics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/OptionOptics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/OptionOptics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/OptionOptics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/OptionOptics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/OptionOptics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.std.ProductOptics", "trait" : "proptics\/std\/ProductOptics.html", "kind" : "trait", "members_trait" : [{"label" : "snd2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[F, H, A], G[A], H[A]]", "member" : "proptics.std.ProductOptics.snd2K", "link" : "proptics\/std\/ProductOptics.html#snd2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[F,H,A],G[A],H[A]]", "kind" : "final def"}, {"label" : "_2T2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[F, H, A], G[A], H[A]]", "member" : "proptics.std.ProductOptics._2T2K", "link" : "proptics\/std\/ProductOptics.html#_2T2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[F,H,A],G[A],H[A]]", "kind" : "final def"}, {"label" : "fst2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[H, G, A], F[A], H[A]]", "member" : "proptics.std.ProductOptics.fst2K", "link" : "proptics\/std\/ProductOptics.html#fst2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[H,G,A],F[A],H[A]]", "kind" : "final def"}, {"label" : "_1T2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[H, G, A], F[A], H[A]]", "member" : "proptics.std.ProductOptics._1T2K", "link" : "proptics\/std\/ProductOptics.html#_1T2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[H,G,A],F[A],H[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/ProductOptics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/ProductOptics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/ProductOptics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/ProductOptics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/ProductOptics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/ProductOptics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/ProductOptics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/ProductOptics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/ProductOptics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/ProductOptics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/ProductOptics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/ProductOptics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/ProductOptics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/ProductOptics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/ProductOptics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/ProductOptics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/ProductOptics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/ProductOptics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/ProductOptics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.std.string", "shortDescription" : "", "object" : "proptics\/std\/package$$string$.html", "members_object" : [{"label" : "split", "tail" : "(regex: String): Traversal_[String, List[String], String, String]", "member" : "proptics.std.StringOptics.split", "link" : "proptics\/std\/package$$string$.html#split(regex:String):proptics.Traversal_[String,List[String],String,String]", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): Iso_[String, String, String, List[String]]", "member" : "proptics.std.StringOptics.mkString", "link" : "proptics\/std\/package$$string$.html#mkString(sep:String):proptics.Iso_[String,String,String,List[String]]", "kind" : "def"}, {"label" : "words", "tail" : ": Traversal[String, String]", "member" : "proptics.std.StringOptics.words", "link" : "proptics\/std\/package$$string$.html#words:proptics.Traversal[String,String]", "kind" : "val"}, {"label" : "stringToChars", "tail" : ": Iso[String, List[Char]]", "member" : "proptics.std.StringOptics.stringToChars", "link" : "proptics\/std\/package$$string$.html#stringToChars:proptics.Iso[String,List[Char]]", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/package$$string$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/package$$string$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/package$$string$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/package$$string$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/package$$string$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/package$$string$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/package$$string$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$string$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$string$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$string$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/package$$string$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/package$$string$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/package$$string$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/package$$string$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/package$$string$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/package$$string$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/package$$string$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/package$$string$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/package$$string$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.std.StringOptics", "trait" : "proptics\/std\/StringOptics.html", "kind" : "trait", "members_trait" : [{"label" : "split", "tail" : "(regex: String): Traversal_[String, List[String], String, String]", "member" : "proptics.std.StringOptics.split", "link" : "proptics\/std\/StringOptics.html#split(regex:String):proptics.Traversal_[String,List[String],String,String]", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): Iso_[String, String, String, List[String]]", "member" : "proptics.std.StringOptics.mkString", "link" : "proptics\/std\/StringOptics.html#mkString(sep:String):proptics.Iso_[String,String,String,List[String]]", "kind" : "def"}, {"label" : "words", "tail" : ": Traversal[String, String]", "member" : "proptics.std.StringOptics.words", "link" : "proptics\/std\/StringOptics.html#words:proptics.Traversal[String,String]", "kind" : "val"}, {"label" : "stringToChars", "tail" : ": Iso[String, List[Char]]", "member" : "proptics.std.StringOptics.stringToChars", "link" : "proptics\/std\/StringOptics.html#stringToChars:proptics.Iso[String,List[Char]]", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/StringOptics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/StringOptics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/StringOptics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/StringOptics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/StringOptics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/StringOptics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/StringOptics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/StringOptics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/StringOptics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/StringOptics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/StringOptics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/StringOptics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/StringOptics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/StringOptics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/StringOptics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/StringOptics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/StringOptics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/StringOptics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/StringOptics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.std.tuple", "shortDescription" : "", "object" : "proptics\/std\/package$$tuple$.html", "members_object" : [{"label" : "secondA", "tail" : "(ev: Field2[(A, B), B]): ALens[(A, B), B]", "member" : "proptics.std.ALensTupleOptics.secondA", "link" : "proptics\/std\/package$$tuple$.html#secondA[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.ALens[(A,B),B]", "kind" : "final def"}, {"label" : "_2A", "tail" : "(ev: Field2[(A, B), B]): ALens[(A, B), B]", "member" : "proptics.std.ALensTupleOptics._2A", "link" : "proptics\/std\/package$$tuple$.html#_2A[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.ALens[(A,B),B]", "kind" : "final def"}, {"label" : "secondPA", "tail" : "(): ALens_[(C, A), (C, B), A, B]", "member" : "proptics.std.ALensTupleOptics.secondPA", "link" : "proptics\/std\/package$$tuple$.html#secondPA[A,B,C]:proptics.ALens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_2PA", "tail" : "(): ALens_[(C, A), (C, B), A, B]", "member" : "proptics.std.ALensTupleOptics._2PA", "link" : "proptics\/std\/package$$tuple$.html#_2PA[A,B,C]:proptics.ALens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_1A", "tail" : "(ev: Field1[(A, B), A]): ALens[(A, B), A]", "member" : "proptics.std.ALensTupleOptics._1A", "link" : "proptics\/std\/package$$tuple$.html#_1A[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.ALens[(A,B),A]", "kind" : "final def"}, {"label" : "fstPA", "tail" : "(): ALens_[(A, C), (B, C), A, B]", "member" : "proptics.std.ALensTupleOptics.fstPA", "link" : "proptics\/std\/package$$tuple$.html#fstPA[A,B,C]:proptics.ALens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "_1PA", "tail" : "(): ALens_[(A, C), (B, C), A, B]", "member" : "proptics.std.ALensTupleOptics._1PA", "link" : "proptics\/std\/package$$tuple$.html#_1PA[A,B,C]:proptics.ALens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "swapTuple", "tail" : "(): Iso[(A, B), (B, A)]", "member" : "proptics.std.LensTupleOptics.swapTuple", "link" : "proptics\/std\/package$$tuple$.html#swapTuple[A,B]:proptics.Iso[(A,B),(B,A)]", "kind" : "final def"}, {"label" : "_2", "tail" : "(ev: Field2[(A, B), B]): Lens[(A, B), B]", "member" : "proptics.std.LensTupleOptics._2", "link" : "proptics\/std\/package$$tuple$.html#_2[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.Lens[(A,B),B]", "kind" : "final def"}, {"label" : "secondP", "tail" : "(): Lens_[(C, A), (C, B), A, B]", "member" : "proptics.std.LensTupleOptics.secondP", "link" : "proptics\/std\/package$$tuple$.html#secondP[A,B,C]:proptics.Lens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_2P", "tail" : "(): Lens_[(C, A), (C, B), A, B]", "member" : "proptics.std.LensTupleOptics._2P", "link" : "proptics\/std\/package$$tuple$.html#_2P[A,B,C]:proptics.Lens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_1", "tail" : "(ev: Field1[(A, B), A]): Lens[(A, B), A]", "member" : "proptics.std.LensTupleOptics._1", "link" : "proptics\/std\/package$$tuple$.html#_1[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.Lens[(A,B),A]", "kind" : "final def"}, {"label" : "firstP", "tail" : "(): Lens_[(A, C), (B, C), A, B]", "member" : "proptics.std.LensTupleOptics.firstP", "link" : "proptics\/std\/package$$tuple$.html#firstP[A,B,C]:proptics.Lens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "_1P", "tail" : "(): Lens_[(A, C), (B, C), A, B]", "member" : "proptics.std.LensTupleOptics._1P", "link" : "proptics\/std\/package$$tuple$.html#_1P[A,B,C]:proptics.Lens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/package$$tuple$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/package$$tuple$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/package$$tuple$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/package$$tuple$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/package$$tuple$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/package$$tuple$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/package$$tuple$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$tuple$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$tuple$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$tuple$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/package$$tuple$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/package$$tuple$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/package$$tuple$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/package$$tuple$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/package$$tuple$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/package$$tuple$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/package$$tuple$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/package$$tuple$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/package$$tuple$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.std.tuple2K", "shortDescription" : "", "object" : "proptics\/std\/package$$tuple2K$.html", "members_object" : [{"label" : "snd2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[F, H, A], G[A], H[A]]", "member" : "proptics.std.ProductOptics.snd2K", "link" : "proptics\/std\/package$$tuple2K$.html#snd2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[F,H,A],G[A],H[A]]", "kind" : "final def"}, {"label" : "_2T2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[F, H, A], G[A], H[A]]", "member" : "proptics.std.ProductOptics._2T2K", "link" : "proptics\/std\/package$$tuple2K$.html#_2T2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[F,H,A],G[A],H[A]]", "kind" : "final def"}, {"label" : "fst2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[H, G, A], F[A], H[A]]", "member" : "proptics.std.ProductOptics.fst2K", "link" : "proptics\/std\/package$$tuple2K$.html#fst2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[H,G,A],F[A],H[A]]", "kind" : "final def"}, {"label" : "_1T2K", "tail" : "(): Lens_[Tuple2K[F, G, A], Tuple2K[H, G, A], F[A], H[A]]", "member" : "proptics.std.ProductOptics._1T2K", "link" : "proptics\/std\/package$$tuple2K$.html#_1T2K[F[_],G[_],H[_],A]:proptics.Lens_[cats.data.Tuple2K[F,G,A],cats.data.Tuple2K[H,G,A],F[A],H[A]]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/package$$tuple2K$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/package$$tuple2K$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/package$$tuple2K$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/package$$tuple2K$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/package$$tuple2K$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/package$$tuple2K$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/package$$tuple2K$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$tuple2K$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$tuple2K$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$tuple2K$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/package$$tuple2K$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/package$$tuple2K$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/package$$tuple2K$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/package$$tuple2K$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/package$$tuple2K$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/package$$tuple2K$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/package$$tuple2K$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/package$$tuple2K$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/package$$tuple2K$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.std.TuplesOptics", "trait" : "proptics\/std\/TuplesOptics.html", "kind" : "trait", "members_trait" : [{"label" : "secondA", "tail" : "(ev: Field2[(A, B), B]): ALens[(A, B), B]", "member" : "proptics.std.ALensTupleOptics.secondA", "link" : "proptics\/std\/TuplesOptics.html#secondA[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.ALens[(A,B),B]", "kind" : "final def"}, {"label" : "_2A", "tail" : "(ev: Field2[(A, B), B]): ALens[(A, B), B]", "member" : "proptics.std.ALensTupleOptics._2A", "link" : "proptics\/std\/TuplesOptics.html#_2A[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.ALens[(A,B),B]", "kind" : "final def"}, {"label" : "secondPA", "tail" : "(): ALens_[(C, A), (C, B), A, B]", "member" : "proptics.std.ALensTupleOptics.secondPA", "link" : "proptics\/std\/TuplesOptics.html#secondPA[A,B,C]:proptics.ALens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_2PA", "tail" : "(): ALens_[(C, A), (C, B), A, B]", "member" : "proptics.std.ALensTupleOptics._2PA", "link" : "proptics\/std\/TuplesOptics.html#_2PA[A,B,C]:proptics.ALens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_1A", "tail" : "(ev: Field1[(A, B), A]): ALens[(A, B), A]", "member" : "proptics.std.ALensTupleOptics._1A", "link" : "proptics\/std\/TuplesOptics.html#_1A[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.ALens[(A,B),A]", "kind" : "final def"}, {"label" : "fstPA", "tail" : "(): ALens_[(A, C), (B, C), A, B]", "member" : "proptics.std.ALensTupleOptics.fstPA", "link" : "proptics\/std\/TuplesOptics.html#fstPA[A,B,C]:proptics.ALens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "_1PA", "tail" : "(): ALens_[(A, C), (B, C), A, B]", "member" : "proptics.std.ALensTupleOptics._1PA", "link" : "proptics\/std\/TuplesOptics.html#_1PA[A,B,C]:proptics.ALens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "swapTuple", "tail" : "(): Iso[(A, B), (B, A)]", "member" : "proptics.std.LensTupleOptics.swapTuple", "link" : "proptics\/std\/TuplesOptics.html#swapTuple[A,B]:proptics.Iso[(A,B),(B,A)]", "kind" : "final def"}, {"label" : "_2", "tail" : "(ev: Field2[(A, B), B]): Lens[(A, B), B]", "member" : "proptics.std.LensTupleOptics._2", "link" : "proptics\/std\/TuplesOptics.html#_2[A,B](implicitev:proptics.typeclass.Field2[(A,B),B]):proptics.Lens[(A,B),B]", "kind" : "final def"}, {"label" : "secondP", "tail" : "(): Lens_[(C, A), (C, B), A, B]", "member" : "proptics.std.LensTupleOptics.secondP", "link" : "proptics\/std\/TuplesOptics.html#secondP[A,B,C]:proptics.Lens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_2P", "tail" : "(): Lens_[(C, A), (C, B), A, B]", "member" : "proptics.std.LensTupleOptics._2P", "link" : "proptics\/std\/TuplesOptics.html#_2P[A,B,C]:proptics.Lens_[(C,A),(C,B),A,B]", "kind" : "final def"}, {"label" : "_1", "tail" : "(ev: Field1[(A, B), A]): Lens[(A, B), A]", "member" : "proptics.std.LensTupleOptics._1", "link" : "proptics\/std\/TuplesOptics.html#_1[A,B](implicitev:proptics.typeclass.Field1[(A,B),A]):proptics.Lens[(A,B),A]", "kind" : "final def"}, {"label" : "firstP", "tail" : "(): Lens_[(A, C), (B, C), A, B]", "member" : "proptics.std.LensTupleOptics.firstP", "link" : "proptics\/std\/TuplesOptics.html#firstP[A,B,C]:proptics.Lens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "_1P", "tail" : "(): Lens_[(A, C), (B, C), A, B]", "member" : "proptics.std.LensTupleOptics._1P", "link" : "proptics\/std\/TuplesOptics.html#_1P[A,B,C]:proptics.Lens_[(A,C),(B,C),A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/TuplesOptics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/TuplesOptics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/TuplesOptics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/TuplesOptics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/TuplesOptics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/TuplesOptics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/TuplesOptics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/TuplesOptics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/TuplesOptics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/TuplesOptics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/TuplesOptics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/TuplesOptics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/TuplesOptics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/TuplesOptics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/TuplesOptics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/TuplesOptics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/TuplesOptics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/TuplesOptics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/TuplesOptics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.std.unit", "shortDescription" : "", "object" : "proptics\/std\/package$$unit$.html", "members_object" : [{"label" : "unit", "tail" : "(): Lens[A, Unit]", "member" : "proptics.std.UnitOptics.unit", "link" : "proptics\/std\/package$$unit$.html#unit[A]:proptics.Lens[A,Unit]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/package$$unit$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/package$$unit$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/package$$unit$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/package$$unit$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/package$$unit$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/package$$unit$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/package$$unit$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$unit$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$unit$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/package$$unit$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/package$$unit$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/package$$unit$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/package$$unit$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/package$$unit$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/package$$unit$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/package$$unit$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/package$$unit$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/package$$unit$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/package$$unit$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.std.UnitOptics", "trait" : "proptics\/std\/UnitOptics.html", "kind" : "trait", "members_trait" : [{"label" : "unit", "tail" : "(): Lens[A, Unit]", "member" : "proptics.std.UnitOptics.unit", "link" : "proptics\/std\/UnitOptics.html#unit[A]:proptics.Lens[A,Unit]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/std\/UnitOptics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/std\/UnitOptics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/std\/UnitOptics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/std\/UnitOptics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/std\/UnitOptics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/std\/UnitOptics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/std\/UnitOptics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/UnitOptics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/UnitOptics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/std\/UnitOptics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/std\/UnitOptics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/std\/UnitOptics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/std\/UnitOptics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/std\/UnitOptics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/std\/UnitOptics.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/std\/UnitOptics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/std\/UnitOptics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/std\/UnitOptics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/std\/UnitOptics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "proptics.rank2types" : [{"name" : "proptics.rank2types.LensLike", "trait" : "proptics\/rank2types\/LensLike.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/rank2types\/LensLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/rank2types\/LensLike.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/rank2types\/LensLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/rank2types\/LensLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/rank2types\/LensLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/rank2types\/LensLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/rank2types\/LensLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/rank2types\/LensLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/rank2types\/LensLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/rank2types\/LensLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/rank2types\/LensLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/rank2types\/LensLike.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/rank2types\/LensLike.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/rank2types\/LensLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/rank2types\/LensLike.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/rank2types\/LensLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/rank2types\/LensLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/rank2types\/LensLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/rank2types\/LensLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(f: (A) => F[B])(ev: Applicative[F]): (S) => F[T]", "member" : "proptics.rank2types.LensLike.apply", "link" : "proptics\/rank2types\/LensLike.html#apply[F[_]](f:A=>F[B])(implicitev:cats.Applicative[F]):S=>F[T]", "kind" : "abstract def"}], "shortDescription" : ""}], "proptics.indices" : [{"name" : "proptics.indices.FoldableWithIndex", "object" : "proptics\/indices\/FoldableWithIndex$.html", "members_object" : [{"label" : "apply", "tail" : "(instance: FoldableWithIndex[F, I]): FoldableWithIndex[F, I]", "member" : "proptics.indices.FoldableWithIndex.apply", "link" : "proptics\/indices\/FoldableWithIndex$.html#apply[F[_],I](implicitinstance:proptics.indices.FoldableWithIndex[F,I]):proptics.indices.FoldableWithIndex[F,I]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/indices\/FoldableWithIndex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/indices\/FoldableWithIndex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/indices\/FoldableWithIndex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/indices\/FoldableWithIndex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/indices\/FoldableWithIndex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/indices\/FoldableWithIndex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/indices\/FoldableWithIndex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/FoldableWithIndex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/FoldableWithIndex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/FoldableWithIndex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/indices\/FoldableWithIndex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/indices\/FoldableWithIndex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/indices\/FoldableWithIndex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/indices\/FoldableWithIndex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/indices\/FoldableWithIndex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/indices\/FoldableWithIndex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/indices\/FoldableWithIndex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/indices\/FoldableWithIndex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/indices\/FoldableWithIndex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/indices\/FoldableWithIndex.html", "kind" : "trait", "members_trait" : [{"label" : "foldRight", "tail" : "(fa: F[A], lb: Eval[B])(f: (A, Eval[B]) => Eval[B]): Eval[B]", "member" : "proptics.indices.FoldableWithIndex.foldRight", "link" : "proptics\/indices\/FoldableWithIndex.html#foldRight[A,B](fa:F[A],lb:cats.Eval[B])(f:(A,cats.Eval[B])=>cats.Eval[B]):cats.Eval[B]", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(fa: F[A], b: B)(f: (B, A) => B): B", "member" : "proptics.indices.FoldableWithIndex.foldLeft", "link" : "proptics\/indices\/FoldableWithIndex.html#foldLeft[A,B](fa:F[A],b:B)(f:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(fa: F[A])(f: (A) => B)(B: Monoid[B]): B", "member" : "proptics.indices.FoldableWithIndex.foldMap", "link" : "proptics\/indices\/FoldableWithIndex.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:cats.Monoid[B]):B", "kind" : "final def"}, {"label" : "foldMapWithIndex", "tail" : "(f: (A, I) => B)(fa: F[A])(ev: Monoid[B]): B", "member" : "proptics.indices.FoldableWithIndex.foldMapWithIndex", "link" : "proptics\/indices\/FoldableWithIndex.html#foldMapWithIndex[A,B](f:(A,I)=>B)(fa:F[A])(implicitev:cats.Monoid[B]):B", "kind" : "final def"}, {"label" : "partitionEitherM", "tail" : "(fa: F[A])(f: (A) => G[Either[B, C]])(A: Alternative[F], M: Monad[G]): G[(F[B], F[C])]", "member" : "cats.Foldable.partitionEitherM", "link" : "proptics\/indices\/FoldableWithIndex.html#partitionEitherM[G[_<:<?>],A,B,C](fa:F[A])(f:A=>G[Either[B,C]])(implicitA:cats.Alternative[F],implicitM:cats.Monad[G]):G[(F[B],F[C])]", "kind" : "def"}, {"label" : "partitionBifoldM", "tail" : "(fa: F[A])(f: (A) => G[H[B, C]])(A: Alternative[F], M: Monad[G], H: Bifoldable[H]): G[(F[B], F[C])]", "member" : "cats.Foldable.partitionBifoldM", "link" : "proptics\/indices\/FoldableWithIndex.html#partitionBifoldM[G[_<:<?>],H[_<:<?>,_<:<?>],A,B,C](fa:F[A])(f:A=>G[H[B,C]])(implicitA:cats.Alternative[F],implicitM:cats.Monad[G],implicitH:cats.Bifoldable[H]):G[(F[B],F[C])]", "kind" : "def"}, {"label" : "partitionBifold", "tail" : "(fa: F[A])(f: (A) => H[B, C])(A: Alternative[F], H: Bifoldable[H]): (F[B], F[C])", "member" : "cats.Foldable.partitionBifold", "link" : "proptics\/indices\/FoldableWithIndex.html#partitionBifold[H[_<:<?>,_<:<?>],A,B,C](fa:F[A])(f:A=>H[B,C])(implicitA:cats.Alternative[F],implicitH:cats.Bifoldable[H]):(F[B],F[C])", "kind" : "def"}, {"label" : "unorderedFoldMap", "tail" : "(fa: F[A])(f: (A) => B)(arg0: CommutativeMonoid[B]): B", "member" : "cats.Foldable.unorderedFoldMap", "link" : "proptics\/indices\/FoldableWithIndex.html#unorderedFoldMap[A,B](fa:F[A])(f:A=>B)(implicitevidence$10:cats.kernel.CommutativeMonoid[B]):B", "kind" : "def"}, {"label" : "unorderedFold", "tail" : "(fa: F[A])(arg0: CommutativeMonoid[A]): A", "member" : "cats.Foldable.unorderedFold", "link" : "proptics\/indices\/FoldableWithIndex.html#unorderedFold[A](fa:F[A])(implicitevidence$9:cats.kernel.CommutativeMonoid[A]):A", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Foldable[G]): Foldable[[α]F[G[α]]]", "member" : "cats.Foldable.compose", "link" : "proptics\/indices\/FoldableWithIndex.html#compose[G[_]](implicitevidence$8:cats.Foldable[G]):cats.Foldable[[α]F[G[α]]]", "kind" : "def"}, {"label" : "intersperseList", "tail" : "(xs: List[A], x: A): List[A]", "member" : "cats.Foldable.intersperseList", "link" : "proptics\/indices\/FoldableWithIndex.html#intersperseList[A](xs:List[A],x:A):List[A]", "kind" : "def"}, {"label" : "intercalate", "tail" : "(fa: F[A], a: A)(A: Monoid[A]): A", "member" : "cats.Foldable.intercalate", "link" : "proptics\/indices\/FoldableWithIndex.html#intercalate[A](fa:F[A],a:A)(implicitA:cats.Monoid[A]):A", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(fa: F[A]): Boolean", "member" : "cats.Foldable.nonEmpty", "link" : "proptics\/indices\/FoldableWithIndex.html#nonEmpty[A](fa:F[A]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(fa: F[A]): Boolean", "member" : "cats.Foldable.isEmpty", "link" : "proptics\/indices\/FoldableWithIndex.html#isEmpty[A](fa:F[A]):Boolean", "kind" : "def"}, {"label" : "dropWhile_", "tail" : "(fa: F[A])(p: (A) => Boolean): List[A]", "member" : "cats.Foldable.dropWhile_", "link" : "proptics\/indices\/FoldableWithIndex.html#dropWhile_[A](fa:F[A])(p:A=>Boolean):List[A]", "kind" : "def"}, {"label" : "takeWhile_", "tail" : "(fa: F[A])(p: (A) => Boolean): List[A]", "member" : "cats.Foldable.takeWhile_", "link" : "proptics\/indices\/FoldableWithIndex.html#takeWhile_[A](fa:F[A])(p:A=>Boolean):List[A]", "kind" : "def"}, {"label" : "filter_", "tail" : "(fa: F[A])(p: (A) => Boolean): List[A]", "member" : "cats.Foldable.filter_", "link" : "proptics\/indices\/FoldableWithIndex.html#filter_[A](fa:F[A])(p:A=>Boolean):List[A]", "kind" : "def"}, {"label" : "partitionEither", "tail" : "(fa: F[A])(f: (A) => Either[B, C])(A: Alternative[F]): (F[B], F[C])", "member" : "cats.Foldable.partitionEither", "link" : "proptics\/indices\/FoldableWithIndex.html#partitionEither[A,B,C](fa:F[A])(f:A=>Either[B,C])(implicitA:cats.Alternative[F]):(F[B],F[C])", "kind" : "def"}, {"label" : "toList", "tail" : "(fa: F[A]): List[A]", "member" : "cats.Foldable.toList", "link" : "proptics\/indices\/FoldableWithIndex.html#toList[A](fa:F[A]):List[A]", "kind" : "def"}, {"label" : "forallM", "tail" : "(fa: F[A])(p: (A) => G[Boolean])(G: Monad[G]): G[Boolean]", "member" : "cats.Foldable.forallM", "link" : "proptics\/indices\/FoldableWithIndex.html#forallM[G[_<:<?>],A](fa:F[A])(p:A=>G[Boolean])(implicitG:cats.Monad[G]):G[Boolean]", "kind" : "def"}, {"label" : "existsM", "tail" : "(fa: F[A])(p: (A) => G[Boolean])(G: Monad[G]): G[Boolean]", "member" : "cats.Foldable.existsM", "link" : "proptics\/indices\/FoldableWithIndex.html#existsM[G[_<:<?>],A](fa:F[A])(p:A=>G[Boolean])(implicitG:cats.Monad[G]):G[Boolean]", "kind" : "def"}, {"label" : "forall", "tail" : "(fa: F[A])(p: (A) => Boolean): Boolean", "member" : "cats.Foldable.forall", "link" : "proptics\/indices\/FoldableWithIndex.html#forall[A](fa:F[A])(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(fa: F[A])(p: (A) => Boolean): Boolean", "member" : "cats.Foldable.exists", "link" : "proptics\/indices\/FoldableWithIndex.html#exists[A](fa:F[A])(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "findM", "tail" : "(fa: F[A])(p: (A) => G[Boolean])(G: Monad[G]): G[Option[A]]", "member" : "cats.Foldable.findM", "link" : "proptics\/indices\/FoldableWithIndex.html#findM[G[_<:<?>],A](fa:F[A])(p:A=>G[Boolean])(implicitG:cats.Monad[G]):G[Option[A]]", "kind" : "def"}, {"label" : "find", "tail" : "(fa: F[A])(f: (A) => Boolean): Option[A]", "member" : "cats.Foldable.find", "link" : "proptics\/indices\/FoldableWithIndex.html#find[A](fa:F[A])(f:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "foldK", "tail" : "(fga: F[G[A]])(G: MonoidK[G]): G[A]", "member" : "cats.Foldable.foldK", "link" : "proptics\/indices\/FoldableWithIndex.html#foldK[G[_<:<?>],A](fga:F[G[A]])(implicitG:cats.MonoidK[G]):G[A]", "kind" : "def"}, {"label" : "sequence_", "tail" : "(fga: F[G[A]])(arg0: Applicative[G]): G[Unit]", "member" : "cats.Foldable.sequence_", "link" : "proptics\/indices\/FoldableWithIndex.html#sequence_[G[_<:<?>],A](fga:F[G[A]])(implicitevidence$7:cats.Applicative[G]):G[Unit]", "kind" : "def"}, {"label" : "traverse_", "tail" : "(fa: F[A])(f: (A) => G[B])(G: Applicative[G]): G[Unit]", "member" : "cats.Foldable.traverse_", "link" : "proptics\/indices\/FoldableWithIndex.html#traverse_[G[_<:<?>],A,B](fa:F[A])(f:A=>G[B])(implicitG:cats.Applicative[G]):G[Unit]", "kind" : "def"}, {"label" : "foldMapA", "tail" : "(fa: F[A])(f: (A) => G[B])(G: Applicative[G], B: Monoid[B]): G[B]", "member" : "cats.Foldable.foldMapA", "link" : "proptics\/indices\/FoldableWithIndex.html#foldMapA[G[_<:<?>],A,B](fa:F[A])(f:A=>G[B])(implicitG:cats.Applicative[G],implicitB:cats.Monoid[B]):G[B]", "kind" : "def"}, {"label" : "foldMapM", "tail" : "(fa: F[A])(f: (A) => G[B])(G: Monad[G], B: Monoid[B]): G[B]", "member" : "cats.Foldable.foldMapM", "link" : "proptics\/indices\/FoldableWithIndex.html#foldMapM[G[_<:<?>],A,B](fa:F[A])(f:A=>G[B])(implicitG:cats.Monad[G],implicitB:cats.Monoid[B]):G[B]", "kind" : "def"}, {"label" : "foldLeftM", "tail" : "(fa: F[A], z: B)(f: (B, A) => G[B])(G: Monad[G]): G[B]", "member" : "cats.Foldable.foldLeftM", "link" : "proptics\/indices\/FoldableWithIndex.html#foldLeftM[G[_<:<?>],A,B](fa:F[A],z:B)(f:(B,A)=>G[B])(implicitG:cats.Monad[G]):G[B]", "kind" : "final def"}, {"label" : "foldMapK", "tail" : "(fa: F[A])(f: (A) => G[B])(G: MonoidK[G]): G[B]", "member" : "cats.Foldable.foldMapK", "link" : "proptics\/indices\/FoldableWithIndex.html#foldMapK[G[_<:<?>],A,B](fa:F[A])(f:A=>G[B])(implicitG:cats.MonoidK[G]):G[B]", "kind" : "def"}, {"label" : "foldA", "tail" : "(fga: F[G[A]])(G: Applicative[G], A: Monoid[A]): G[A]", "member" : "cats.Foldable.foldA", "link" : "proptics\/indices\/FoldableWithIndex.html#foldA[G[_<:<?>],A](fga:F[G[A]])(implicitG:cats.Applicative[G],implicitA:cats.Monoid[A]):G[A]", "kind" : "def"}, {"label" : "foldM", "tail" : "(fa: F[A], z: B)(f: (B, A) => G[B])(G: Monad[G]): G[B]", "member" : "cats.Foldable.foldM", "link" : "proptics\/indices\/FoldableWithIndex.html#foldM[G[_<:<?>],A,B](fa:F[A],z:B)(f:(B,A)=>G[B])(implicitG:cats.Monad[G]):G[B]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(fa: F[A]): Iterable[A]", "member" : "cats.Foldable.toIterable", "link" : "proptics\/indices\/FoldableWithIndex.html#toIterable[A](fa:F[A]):Iterable[A]", "kind" : "def"}, {"label" : "combineAllOption", "tail" : "(fa: F[A])(ev: Semigroup[A]): Option[A]", "member" : "cats.Foldable.combineAllOption", "link" : "proptics\/indices\/FoldableWithIndex.html#combineAllOption[A](fa:F[A])(implicitev:cats.Semigroup[A]):Option[A]", "kind" : "def"}, {"label" : "combineAll", "tail" : "(fa: F[A])(arg0: Monoid[A]): A", "member" : "cats.Foldable.combineAll", "link" : "proptics\/indices\/FoldableWithIndex.html#combineAll[A](fa:F[A])(implicitevidence$6:cats.Monoid[A]):A", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: F[A])(A: Monoid[A]): A", "member" : "cats.Foldable.fold", "link" : "proptics\/indices\/FoldableWithIndex.html#fold[A](fa:F[A])(implicitA:cats.Monoid[A]):A", "kind" : "def"}, {"label" : "collectFoldSome", "tail" : "(fa: F[A])(f: (A) => Option[B])(B: Monoid[B]): B", "member" : "cats.Foldable.collectFoldSome", "link" : "proptics\/indices\/FoldableWithIndex.html#collectFoldSome[A,B](fa:F[A])(f:A=>Option[B])(implicitB:cats.Monoid[B]):B", "kind" : "def"}, {"label" : "collectFold", "tail" : "(fa: F[A])(f: PartialFunction[A, B])(B: Monoid[B]): B", "member" : "cats.Foldable.collectFold", "link" : "proptics\/indices\/FoldableWithIndex.html#collectFold[A,B](fa:F[A])(f:PartialFunction[A,B])(implicitB:cats.Monoid[B]):B", "kind" : "def"}, {"label" : "collectFirstSomeM", "tail" : "(fa: F[A])(f: (A) => G[Option[B]])(G: Monad[G]): G[Option[B]]", "member" : "cats.Foldable.collectFirstSomeM", "link" : "proptics\/indices\/FoldableWithIndex.html#collectFirstSomeM[G[_<:<?>],A,B](fa:F[A])(f:A=>G[Option[B]])(implicitG:cats.Monad[G]):G[Option[B]]", "kind" : "def"}, {"label" : "collectFirstSome", "tail" : "(fa: F[A])(f: (A) => Option[B]): Option[B]", "member" : "cats.Foldable.collectFirstSome", "link" : "proptics\/indices\/FoldableWithIndex.html#collectFirstSome[A,B](fa:F[A])(f:A=>Option[B]):Option[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(fa: F[A])(pf: PartialFunction[A, B]): Option[B]", "member" : "cats.Foldable.collectFirst", "link" : "proptics\/indices\/FoldableWithIndex.html#collectFirst[A,B](fa:F[A])(pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "get", "tail" : "(fa: F[A])(idx: Long): Option[A]", "member" : "cats.Foldable.get", "link" : "proptics\/indices\/FoldableWithIndex.html#get[A](fa:F[A])(idx:Long):Option[A]", "kind" : "def"}, {"label" : "productAll", "tail" : "(fa: F[A])(A: Numeric[A]): A", "member" : "cats.Foldable.productAll", "link" : "proptics\/indices\/FoldableWithIndex.html#productAll[A](fa:F[A])(implicitA:Numeric[A]):A", "kind" : "def"}, {"label" : "sumAll", "tail" : "(fa: F[A])(A: Numeric[A]): A", "member" : "cats.Foldable.sumAll", "link" : "proptics\/indices\/FoldableWithIndex.html#sumAll[A](fa:F[A])(implicitA:Numeric[A]):A", "kind" : "def"}, {"label" : "maximumByList", "tail" : "(fa: F[A])(f: (A) => B)(arg0: Order[B]): List[A]", "member" : "cats.Foldable.maximumByList", "link" : "proptics\/indices\/FoldableWithIndex.html#maximumByList[A,B](fa:F[A])(f:A=>B)(implicitevidence$5:cats.Order[B]):List[A]", "kind" : "def"}, {"label" : "minimumByList", "tail" : "(fa: F[A])(f: (A) => B)(arg0: Order[B]): List[A]", "member" : "cats.Foldable.minimumByList", "link" : "proptics\/indices\/FoldableWithIndex.html#minimumByList[A,B](fa:F[A])(f:A=>B)(implicitevidence$4:cats.Order[B]):List[A]", "kind" : "def"}, {"label" : "maximumList", "tail" : "(fa: F[A])(A: Order[A]): List[A]", "member" : "cats.Foldable.maximumList", "link" : "proptics\/indices\/FoldableWithIndex.html#maximumList[A](fa:F[A])(implicitA:cats.Order[A]):List[A]", "kind" : "def"}, {"label" : "minimumList", "tail" : "(fa: F[A])(A: Order[A]): List[A]", "member" : "cats.Foldable.minimumList", "link" : "proptics\/indices\/FoldableWithIndex.html#minimumList[A](fa:F[A])(implicitA:cats.Order[A]):List[A]", "kind" : "def"}, {"label" : "maximumByOption", "tail" : "(fa: F[A])(f: (A) => B)(arg0: Order[B]): Option[A]", "member" : "cats.Foldable.maximumByOption", "link" : "proptics\/indices\/FoldableWithIndex.html#maximumByOption[A,B](fa:F[A])(f:A=>B)(implicitevidence$3:cats.Order[B]):Option[A]", "kind" : "def"}, {"label" : "minimumByOption", "tail" : "(fa: F[A])(f: (A) => B)(arg0: Order[B]): Option[A]", "member" : "cats.Foldable.minimumByOption", "link" : "proptics\/indices\/FoldableWithIndex.html#minimumByOption[A,B](fa:F[A])(f:A=>B)(implicitevidence$2:cats.Order[B]):Option[A]", "kind" : "def"}, {"label" : "maximumOption", "tail" : "(fa: F[A])(A: Order[A]): Option[A]", "member" : "cats.Foldable.maximumOption", "link" : "proptics\/indices\/FoldableWithIndex.html#maximumOption[A](fa:F[A])(implicitA:cats.Order[A]):Option[A]", "kind" : "def"}, {"label" : "minimumOption", "tail" : "(fa: F[A])(A: Order[A]): Option[A]", "member" : "cats.Foldable.minimumOption", "link" : "proptics\/indices\/FoldableWithIndex.html#minimumOption[A](fa:F[A])(implicitA:cats.Order[A]):Option[A]", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(fa: F[A])(f: (A, Eval[A]) => Eval[A]): Eval[Option[A]]", "member" : "cats.Foldable.reduceRightOption", "link" : "proptics\/indices\/FoldableWithIndex.html#reduceRightOption[A](fa:F[A])(f:(A,cats.Eval[A])=>cats.Eval[A]):cats.Eval[Option[A]]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(fa: F[A])(f: (A, A) => A): Option[A]", "member" : "cats.Foldable.reduceLeftOption", "link" : "proptics\/indices\/FoldableWithIndex.html#reduceLeftOption[A](fa:F[A])(f:(A,A)=>A):Option[A]", "kind" : "def"}, {"label" : "reduceRightToOption", "tail" : "(fa: F[A])(f: (A) => B)(g: (A, Eval[B]) => Eval[B]): Eval[Option[B]]", "member" : "cats.Foldable.reduceRightToOption", "link" : "proptics\/indices\/FoldableWithIndex.html#reduceRightToOption[A,B](fa:F[A])(f:A=>B)(g:(A,cats.Eval[B])=>cats.Eval[B]):cats.Eval[Option[B]]", "kind" : "def"}, {"label" : "reduceLeftToOption", "tail" : "(fa: F[A])(f: (A) => B)(g: (B, A) => B): Option[B]", "member" : "cats.Foldable.reduceLeftToOption", "link" : "proptics\/indices\/FoldableWithIndex.html#reduceLeftToOption[A,B](fa:F[A])(f:A=>B)(g:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "foldRightDefer", "tail" : "(fa: F[A], gb: G[B])(fn: (A, G[B]) => G[B])(arg0: Defer[G]): G[B]", "member" : "cats.Foldable.foldRightDefer", "link" : "proptics\/indices\/FoldableWithIndex.html#foldRightDefer[G[_<:<?>],A,B](fa:F[A],gb:G[B])(fn:(A,G[B])=>G[B])(implicitevidence$1:cats.Defer[G]):G[B]", "kind" : "def"}, {"label" : "sliding22", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding22", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding22[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding21", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding21", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding21[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding20", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding20", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding20[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding19", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding19", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding19[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding18", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding18", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding18[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding17", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding17", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding17[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding16", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding16", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding16[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding15", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding15", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding15[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding14", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding14", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding14[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding13", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding13", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding13[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding12", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding12", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding12[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding11", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding11", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding11[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding10", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding10", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding10[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding9", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding9", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding9[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding8", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding8", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding8[A](fa:F[A]):List[(A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding7", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding7", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding7[A](fa:F[A]):List[(A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding6", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding6", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding6[A](fa:F[A]):List[(A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding5", "tail" : "(fa: F[A]): List[(A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding5", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding5[A](fa:F[A]):List[(A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding4", "tail" : "(fa: F[A]): List[(A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding4", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding4[A](fa:F[A]):List[(A,A,A,A)]", "kind" : "def"}, {"label" : "sliding3", "tail" : "(fa: F[A]): List[(A, A, A)]", "member" : "cats.FoldableNFunctions.sliding3", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding3[A](fa:F[A]):List[(A,A,A)]", "kind" : "def"}, {"label" : "sliding2", "tail" : "(fa: F[A]): List[(A, A)]", "member" : "cats.FoldableNFunctions.sliding2", "link" : "proptics\/indices\/FoldableWithIndex.html#sliding2[A](fa:F[A]):List[(A,A)]", "kind" : "def"}, {"label" : "count", "tail" : "(fa: F[A])(p: (A) => Boolean): Long", "member" : "cats.UnorderedFoldable.count", "link" : "proptics\/indices\/FoldableWithIndex.html#count[A](fa:F[A])(p:A=>Boolean):Long", "kind" : "def"}, {"label" : "size", "tail" : "(fa: F[A]): Long", "member" : "cats.UnorderedFoldable.size", "link" : "proptics\/indices\/FoldableWithIndex.html#size[A](fa:F[A]):Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/indices\/FoldableWithIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/indices\/FoldableWithIndex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/indices\/FoldableWithIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/indices\/FoldableWithIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/indices\/FoldableWithIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/indices\/FoldableWithIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/indices\/FoldableWithIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/FoldableWithIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/FoldableWithIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/FoldableWithIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/indices\/FoldableWithIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/indices\/FoldableWithIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/indices\/FoldableWithIndex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/indices\/FoldableWithIndex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/indices\/FoldableWithIndex.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/indices\/FoldableWithIndex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/indices\/FoldableWithIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/indices\/FoldableWithIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/indices\/FoldableWithIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "foldRightWithIndex", "tail" : "(f: ((A, I), Eval[B]) => Eval[B])(fa: F[A], lb: Eval[B]): Eval[B]", "member" : "proptics.indices.FoldableWithIndex.foldRightWithIndex", "link" : "proptics\/indices\/FoldableWithIndex.html#foldRightWithIndex[A,B](f:((A,I),cats.Eval[B])=>cats.Eval[B])(fa:F[A],lb:cats.Eval[B]):cats.Eval[B]", "kind" : "abstract def"}, {"label" : "foldLeftWithIndex", "tail" : "(f: (B, (A, I)) => B)(fa: F[A], b: B): B", "member" : "proptics.indices.FoldableWithIndex.foldLeftWithIndex", "link" : "proptics\/indices\/FoldableWithIndex.html#foldLeftWithIndex[A,B](f:(B,(A,I))=>B)(fa:F[A],b:B):B", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.indices.FunctorWithIndex", "object" : "proptics\/indices\/FunctorWithIndex$.html", "members_object" : [{"label" : "apply", "tail" : "(instance: FunctorWithIndex[F, I]): FunctorWithIndex[F, I]", "member" : "proptics.indices.FunctorWithIndex.apply", "link" : "proptics\/indices\/FunctorWithIndex$.html#apply[F[_],I](implicitinstance:proptics.indices.FunctorWithIndex[F,I]):proptics.indices.FunctorWithIndex[F,I]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/indices\/FunctorWithIndex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/indices\/FunctorWithIndex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/indices\/FunctorWithIndex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/indices\/FunctorWithIndex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/indices\/FunctorWithIndex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/indices\/FunctorWithIndex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/indices\/FunctorWithIndex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/FunctorWithIndex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/FunctorWithIndex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/FunctorWithIndex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/indices\/FunctorWithIndex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/indices\/FunctorWithIndex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/indices\/FunctorWithIndex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/indices\/FunctorWithIndex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/indices\/FunctorWithIndex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/indices\/FunctorWithIndex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/indices\/FunctorWithIndex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/indices\/FunctorWithIndex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/indices\/FunctorWithIndex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/indices\/FunctorWithIndex.html", "kind" : "trait", "members_trait" : [{"label" : "map", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "proptics.indices.FunctorWithIndex.map", "link" : "proptics\/indices\/FunctorWithIndex.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "composeContravariant", "tail" : "(arg0: Contravariant[G]): Contravariant[[α]F[G[α]]]", "member" : "cats.Functor.composeContravariant", "link" : "proptics\/indices\/FunctorWithIndex.html#composeContravariant[G[_]](implicitevidence$2:cats.Contravariant[G]):cats.Contravariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Functor[G]): Functor[[α]F[G[α]]]", "member" : "cats.Functor.compose", "link" : "proptics\/indices\/FunctorWithIndex.html#compose[G[_]](implicitevidence$1:cats.Functor[G]):cats.Functor[[α]F[G[α]]]", "kind" : "def"}, {"label" : "ifF", "tail" : "(fb: F[Boolean])(ifTrue: => A, ifFalse: => A): F[A]", "member" : "cats.Functor.ifF", "link" : "proptics\/indices\/FunctorWithIndex.html#ifF[A](fb:F[Boolean])(ifTrue:=>A,ifFalse:=>A):F[A]", "kind" : "def"}, {"label" : "unzip", "tail" : "(fab: F[(A, B)]): (F[A], F[B])", "member" : "cats.Functor.unzip", "link" : "proptics\/indices\/FunctorWithIndex.html#unzip[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "tupleRight", "tail" : "(fa: F[A], b: B): F[(A, B)]", "member" : "cats.Functor.tupleRight", "link" : "proptics\/indices\/FunctorWithIndex.html#tupleRight[A,B](fa:F[A],b:B):F[(A,B)]", "kind" : "def"}, {"label" : "tupleLeft", "tail" : "(fa: F[A], b: B): F[(B, A)]", "member" : "cats.Functor.tupleLeft", "link" : "proptics\/indices\/FunctorWithIndex.html#tupleLeft[A,B](fa:F[A],b:B):F[(B,A)]", "kind" : "def"}, {"label" : "as", "tail" : "(fa: F[A], b: B): F[B]", "member" : "cats.Functor.as", "link" : "proptics\/indices\/FunctorWithIndex.html#as[A,B](fa:F[A],b:B):F[B]", "kind" : "def"}, {"label" : "fproductLeft", "tail" : "(fa: F[A])(f: (A) => B): F[(B, A)]", "member" : "cats.Functor.fproductLeft", "link" : "proptics\/indices\/FunctorWithIndex.html#fproductLeft[A,B](fa:F[A])(f:A=>B):F[(B,A)]", "kind" : "def"}, {"label" : "fproduct", "tail" : "(fa: F[A])(f: (A) => B): F[(A, B)]", "member" : "cats.Functor.fproduct", "link" : "proptics\/indices\/FunctorWithIndex.html#fproduct[A,B](fa:F[A])(f:A=>B):F[(A,B)]", "kind" : "def"}, {"label" : "void", "tail" : "(fa: F[A]): F[Unit]", "member" : "cats.Functor.void", "link" : "proptics\/indices\/FunctorWithIndex.html#void[A](fa:F[A]):F[Unit]", "kind" : "def"}, {"label" : "lift", "tail" : "(f: (A) => B): (F[A]) => F[B]", "member" : "cats.Functor.lift", "link" : "proptics\/indices\/FunctorWithIndex.html#lift[A,B](f:A=>B):F[A]=>F[B]", "kind" : "def"}, {"label" : "widen", "tail" : "(fa: F[A]): F[B]", "member" : "cats.Functor.widen", "link" : "proptics\/indices\/FunctorWithIndex.html#widen[A,B>:A](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "fmap", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Functor.fmap", "link" : "proptics\/indices\/FunctorWithIndex.html#fmap[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "final def"}, {"label" : "imap", "tail" : "(fa: F[A])(f: (A) => B)(g: (B) => A): F[B]", "member" : "cats.Functor.imap", "link" : "proptics\/indices\/FunctorWithIndex.html#imap[A,B](fa:F[A])(f:A=>B)(g:B=>A):F[B]", "kind" : "def"}, {"label" : "composeFunctor", "tail" : "(arg0: Functor[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.composeFunctor", "link" : "proptics\/indices\/FunctorWithIndex.html#composeFunctor[G[_<:<?>]](implicitevidence$2:cats.Functor[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Invariant[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.compose", "link" : "proptics\/indices\/FunctorWithIndex.html#compose[G[_]](implicitevidence$1:cats.Invariant[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/indices\/FunctorWithIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/indices\/FunctorWithIndex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/indices\/FunctorWithIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/indices\/FunctorWithIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/indices\/FunctorWithIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/indices\/FunctorWithIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/indices\/FunctorWithIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/FunctorWithIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/FunctorWithIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/FunctorWithIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/indices\/FunctorWithIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/indices\/FunctorWithIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/indices\/FunctorWithIndex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/indices\/FunctorWithIndex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/indices\/FunctorWithIndex.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/indices\/FunctorWithIndex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/indices\/FunctorWithIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/indices\/FunctorWithIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/indices\/FunctorWithIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "mapWithIndex", "tail" : "(f: (A, I) => B)(fa: F[A]): F[B]", "member" : "proptics.indices.FunctorWithIndex.mapWithIndex", "link" : "proptics\/indices\/FunctorWithIndex.html#mapWithIndex[A,B](f:(A,I)=>B)(fa:F[A]):F[B]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.indices.TraverseWithIndex", "object" : "proptics\/indices\/TraverseWithIndex$.html", "members_object" : [{"label" : "apply", "tail" : "(instance: TraverseWithIndex[F, I]): TraverseWithIndex[F, I]", "member" : "proptics.indices.TraverseWithIndex.apply", "link" : "proptics\/indices\/TraverseWithIndex$.html#apply[F[_],I](implicitinstance:proptics.indices.TraverseWithIndex[F,I]):proptics.indices.TraverseWithIndex[F,I]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/indices\/TraverseWithIndex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/indices\/TraverseWithIndex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/indices\/TraverseWithIndex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/indices\/TraverseWithIndex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/indices\/TraverseWithIndex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/indices\/TraverseWithIndex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/indices\/TraverseWithIndex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/TraverseWithIndex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/TraverseWithIndex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/TraverseWithIndex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/indices\/TraverseWithIndex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/indices\/TraverseWithIndex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/indices\/TraverseWithIndex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/indices\/TraverseWithIndex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/indices\/TraverseWithIndex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/indices\/TraverseWithIndex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/indices\/TraverseWithIndex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/indices\/TraverseWithIndex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/indices\/TraverseWithIndex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/indices\/TraverseWithIndex.html", "kind" : "trait", "members_trait" : [{"label" : "traverseWithIndex", "tail" : "(f: (A, I) => G[B])(fa: F[A])(arg0: Applicative[G]): G[F[B]]", "member" : "proptics.indices.TraverseWithIndex.traverseWithIndex", "link" : "proptics\/indices\/TraverseWithIndex.html#traverseWithIndex[G[_],A,B](f:(A,I)=>G[B])(fa:F[A])(implicitevidence$1:cats.Applicative[G]):G[F[B]]", "kind" : "def"}, {"label" : "unorderedSequence", "tail" : "(fga: F[G[A]])(arg0: CommutativeApplicative[G]): G[F[A]]", "member" : "cats.Traverse.unorderedSequence", "link" : "proptics\/indices\/TraverseWithIndex.html#unorderedSequence[G[_],A](fga:F[G[A]])(implicitevidence$6:cats.CommutativeApplicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "unorderedTraverse", "tail" : "(sa: F[A])(f: (A) => G[B])(arg0: CommutativeApplicative[G]): G[F[B]]", "member" : "cats.Traverse.unorderedTraverse", "link" : "proptics\/indices\/TraverseWithIndex.html#unorderedTraverse[G[_],A,B](sa:F[A])(f:A=>G[B])(implicitevidence$5:cats.CommutativeApplicative[G]):G[F[B]]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(fa: F[A]): F[(A, Int)]", "member" : "cats.Traverse.zipWithIndex", "link" : "proptics\/indices\/TraverseWithIndex.html#zipWithIndex[A](fa:F[A]):F[(A,Int)]", "kind" : "def"}, {"label" : "traverseWithIndexM", "tail" : "(fa: F[A])(f: (A, Int) => G[B])(G: Monad[G]): G[F[B]]", "member" : "cats.Traverse.traverseWithIndexM", "link" : "proptics\/indices\/TraverseWithIndex.html#traverseWithIndexM[G[_<:<?>],A,B](fa:F[A])(f:(A,Int)=>G[B])(implicitG:cats.Monad[G]):G[F[B]]", "kind" : "def"}, {"label" : "mapWithIndex", "tail" : "(fa: F[A])(f: (A, Int) => B): F[B]", "member" : "cats.Traverse.mapWithIndex", "link" : "proptics\/indices\/TraverseWithIndex.html#mapWithIndex[A,B](fa:F[A])(f:(A,Int)=>B):F[B]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Traverse.map", "link" : "proptics\/indices\/TraverseWithIndex.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Traverse[G]): Traverse[[α]F[G[α]]]", "member" : "cats.Traverse.compose", "link" : "proptics\/indices\/TraverseWithIndex.html#compose[G[_]](implicitevidence$4:cats.Traverse[G]):cats.Traverse[[α]F[G[α]]]", "kind" : "def"}, {"label" : "flatSequence", "tail" : "(fgfa: F[G[F[A]]])(G: Applicative[G], F: FlatMap[F]): G[F[A]]", "member" : "cats.Traverse.flatSequence", "link" : "proptics\/indices\/TraverseWithIndex.html#flatSequence[G[_<:<?>],A](fgfa:F[G[F[A]]])(implicitG:cats.Applicative[G],implicitF:cats.FlatMap[F]):G[F[A]]", "kind" : "def"}, {"label" : "sequence", "tail" : "(fga: F[G[A]])(arg0: Applicative[G]): G[F[A]]", "member" : "cats.Traverse.sequence", "link" : "proptics\/indices\/TraverseWithIndex.html#sequence[G[_],A](fga:F[G[A]])(implicitevidence$3:cats.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "flatTraverse", "tail" : "(fa: F[A])(f: (A) => G[F[B]])(G: Applicative[G], F: FlatMap[F]): G[F[B]]", "member" : "cats.Traverse.flatTraverse", "link" : "proptics\/indices\/TraverseWithIndex.html#flatTraverse[G[_<:<?>],A,B](fa:F[A])(f:A=>G[F[B]])(implicitG:cats.Applicative[G],implicitF:cats.FlatMap[F]):G[F[B]]", "kind" : "def"}, {"label" : "traverseTap", "tail" : "(fa: F[A])(f: (A) => G[B])(arg0: Applicative[G]): G[F[A]]", "member" : "cats.Traverse.traverseTap", "link" : "proptics\/indices\/TraverseWithIndex.html#traverseTap[G[_<:<?>],A,B](fa:F[A])(f:A=>G[B])(implicitevidence$2:cats.Applicative[G]):G[F[A]]", "kind" : "def"}, {"label" : "composeContravariant", "tail" : "(arg0: Contravariant[G]): Contravariant[[α]F[G[α]]]", "member" : "cats.Functor.composeContravariant", "link" : "proptics\/indices\/TraverseWithIndex.html#composeContravariant[G[_]](implicitevidence$2:cats.Contravariant[G]):cats.Contravariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Functor[G]): Functor[[α]F[G[α]]]", "member" : "cats.Functor.compose", "link" : "proptics\/indices\/TraverseWithIndex.html#compose[G[_]](implicitevidence$1:cats.Functor[G]):cats.Functor[[α]F[G[α]]]", "kind" : "def"}, {"label" : "ifF", "tail" : "(fb: F[Boolean])(ifTrue: => A, ifFalse: => A): F[A]", "member" : "cats.Functor.ifF", "link" : "proptics\/indices\/TraverseWithIndex.html#ifF[A](fb:F[Boolean])(ifTrue:=>A,ifFalse:=>A):F[A]", "kind" : "def"}, {"label" : "unzip", "tail" : "(fab: F[(A, B)]): (F[A], F[B])", "member" : "cats.Functor.unzip", "link" : "proptics\/indices\/TraverseWithIndex.html#unzip[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "tupleRight", "tail" : "(fa: F[A], b: B): F[(A, B)]", "member" : "cats.Functor.tupleRight", "link" : "proptics\/indices\/TraverseWithIndex.html#tupleRight[A,B](fa:F[A],b:B):F[(A,B)]", "kind" : "def"}, {"label" : "tupleLeft", "tail" : "(fa: F[A], b: B): F[(B, A)]", "member" : "cats.Functor.tupleLeft", "link" : "proptics\/indices\/TraverseWithIndex.html#tupleLeft[A,B](fa:F[A],b:B):F[(B,A)]", "kind" : "def"}, {"label" : "as", "tail" : "(fa: F[A], b: B): F[B]", "member" : "cats.Functor.as", "link" : "proptics\/indices\/TraverseWithIndex.html#as[A,B](fa:F[A],b:B):F[B]", "kind" : "def"}, {"label" : "fproductLeft", "tail" : "(fa: F[A])(f: (A) => B): F[(B, A)]", "member" : "cats.Functor.fproductLeft", "link" : "proptics\/indices\/TraverseWithIndex.html#fproductLeft[A,B](fa:F[A])(f:A=>B):F[(B,A)]", "kind" : "def"}, {"label" : "fproduct", "tail" : "(fa: F[A])(f: (A) => B): F[(A, B)]", "member" : "cats.Functor.fproduct", "link" : "proptics\/indices\/TraverseWithIndex.html#fproduct[A,B](fa:F[A])(f:A=>B):F[(A,B)]", "kind" : "def"}, {"label" : "void", "tail" : "(fa: F[A]): F[Unit]", "member" : "cats.Functor.void", "link" : "proptics\/indices\/TraverseWithIndex.html#void[A](fa:F[A]):F[Unit]", "kind" : "def"}, {"label" : "lift", "tail" : "(f: (A) => B): (F[A]) => F[B]", "member" : "cats.Functor.lift", "link" : "proptics\/indices\/TraverseWithIndex.html#lift[A,B](f:A=>B):F[A]=>F[B]", "kind" : "def"}, {"label" : "widen", "tail" : "(fa: F[A]): F[B]", "member" : "cats.Functor.widen", "link" : "proptics\/indices\/TraverseWithIndex.html#widen[A,B>:A](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "fmap", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Functor.fmap", "link" : "proptics\/indices\/TraverseWithIndex.html#fmap[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "final def"}, {"label" : "imap", "tail" : "(fa: F[A])(f: (A) => B)(g: (B) => A): F[B]", "member" : "cats.Functor.imap", "link" : "proptics\/indices\/TraverseWithIndex.html#imap[A,B](fa:F[A])(f:A=>B)(g:B=>A):F[B]", "kind" : "def"}, {"label" : "composeFunctor", "tail" : "(arg0: Functor[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.composeFunctor", "link" : "proptics\/indices\/TraverseWithIndex.html#composeFunctor[G[_<:<?>]](implicitevidence$2:cats.Functor[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Invariant[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.compose", "link" : "proptics\/indices\/TraverseWithIndex.html#compose[G[_]](implicitevidence$1:cats.Invariant[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "foldRight", "tail" : "(fa: F[A], lb: Eval[B])(f: (A, Eval[B]) => Eval[B]): Eval[B]", "member" : "proptics.indices.FoldableWithIndex.foldRight", "link" : "proptics\/indices\/TraverseWithIndex.html#foldRight[A,B](fa:F[A],lb:cats.Eval[B])(f:(A,cats.Eval[B])=>cats.Eval[B]):cats.Eval[B]", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(fa: F[A], b: B)(f: (B, A) => B): B", "member" : "proptics.indices.FoldableWithIndex.foldLeft", "link" : "proptics\/indices\/TraverseWithIndex.html#foldLeft[A,B](fa:F[A],b:B)(f:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(fa: F[A])(f: (A) => B)(B: Monoid[B]): B", "member" : "proptics.indices.FoldableWithIndex.foldMap", "link" : "proptics\/indices\/TraverseWithIndex.html#foldMap[A,B](fa:F[A])(f:A=>B)(implicitB:cats.Monoid[B]):B", "kind" : "final def"}, {"label" : "foldMapWithIndex", "tail" : "(f: (A, I) => B)(fa: F[A])(ev: Monoid[B]): B", "member" : "proptics.indices.FoldableWithIndex.foldMapWithIndex", "link" : "proptics\/indices\/TraverseWithIndex.html#foldMapWithIndex[A,B](f:(A,I)=>B)(fa:F[A])(implicitev:cats.Monoid[B]):B", "kind" : "final def"}, {"label" : "partitionEitherM", "tail" : "(fa: F[A])(f: (A) => G[Either[B, C]])(A: Alternative[F], M: Monad[G]): G[(F[B], F[C])]", "member" : "cats.Foldable.partitionEitherM", "link" : "proptics\/indices\/TraverseWithIndex.html#partitionEitherM[G[_<:<?>],A,B,C](fa:F[A])(f:A=>G[Either[B,C]])(implicitA:cats.Alternative[F],implicitM:cats.Monad[G]):G[(F[B],F[C])]", "kind" : "def"}, {"label" : "partitionBifoldM", "tail" : "(fa: F[A])(f: (A) => G[H[B, C]])(A: Alternative[F], M: Monad[G], H: Bifoldable[H]): G[(F[B], F[C])]", "member" : "cats.Foldable.partitionBifoldM", "link" : "proptics\/indices\/TraverseWithIndex.html#partitionBifoldM[G[_<:<?>],H[_<:<?>,_<:<?>],A,B,C](fa:F[A])(f:A=>G[H[B,C]])(implicitA:cats.Alternative[F],implicitM:cats.Monad[G],implicitH:cats.Bifoldable[H]):G[(F[B],F[C])]", "kind" : "def"}, {"label" : "partitionBifold", "tail" : "(fa: F[A])(f: (A) => H[B, C])(A: Alternative[F], H: Bifoldable[H]): (F[B], F[C])", "member" : "cats.Foldable.partitionBifold", "link" : "proptics\/indices\/TraverseWithIndex.html#partitionBifold[H[_<:<?>,_<:<?>],A,B,C](fa:F[A])(f:A=>H[B,C])(implicitA:cats.Alternative[F],implicitH:cats.Bifoldable[H]):(F[B],F[C])", "kind" : "def"}, {"label" : "unorderedFoldMap", "tail" : "(fa: F[A])(f: (A) => B)(arg0: CommutativeMonoid[B]): B", "member" : "cats.Foldable.unorderedFoldMap", "link" : "proptics\/indices\/TraverseWithIndex.html#unorderedFoldMap[A,B](fa:F[A])(f:A=>B)(implicitevidence$10:cats.kernel.CommutativeMonoid[B]):B", "kind" : "def"}, {"label" : "unorderedFold", "tail" : "(fa: F[A])(arg0: CommutativeMonoid[A]): A", "member" : "cats.Foldable.unorderedFold", "link" : "proptics\/indices\/TraverseWithIndex.html#unorderedFold[A](fa:F[A])(implicitevidence$9:cats.kernel.CommutativeMonoid[A]):A", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Foldable[G]): Foldable[[α]F[G[α]]]", "member" : "cats.Foldable.compose", "link" : "proptics\/indices\/TraverseWithIndex.html#compose[G[_]](implicitevidence$8:cats.Foldable[G]):cats.Foldable[[α]F[G[α]]]", "kind" : "def"}, {"label" : "intersperseList", "tail" : "(xs: List[A], x: A): List[A]", "member" : "cats.Foldable.intersperseList", "link" : "proptics\/indices\/TraverseWithIndex.html#intersperseList[A](xs:List[A],x:A):List[A]", "kind" : "def"}, {"label" : "intercalate", "tail" : "(fa: F[A], a: A)(A: Monoid[A]): A", "member" : "cats.Foldable.intercalate", "link" : "proptics\/indices\/TraverseWithIndex.html#intercalate[A](fa:F[A],a:A)(implicitA:cats.Monoid[A]):A", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(fa: F[A]): Boolean", "member" : "cats.Foldable.nonEmpty", "link" : "proptics\/indices\/TraverseWithIndex.html#nonEmpty[A](fa:F[A]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(fa: F[A]): Boolean", "member" : "cats.Foldable.isEmpty", "link" : "proptics\/indices\/TraverseWithIndex.html#isEmpty[A](fa:F[A]):Boolean", "kind" : "def"}, {"label" : "dropWhile_", "tail" : "(fa: F[A])(p: (A) => Boolean): List[A]", "member" : "cats.Foldable.dropWhile_", "link" : "proptics\/indices\/TraverseWithIndex.html#dropWhile_[A](fa:F[A])(p:A=>Boolean):List[A]", "kind" : "def"}, {"label" : "takeWhile_", "tail" : "(fa: F[A])(p: (A) => Boolean): List[A]", "member" : "cats.Foldable.takeWhile_", "link" : "proptics\/indices\/TraverseWithIndex.html#takeWhile_[A](fa:F[A])(p:A=>Boolean):List[A]", "kind" : "def"}, {"label" : "filter_", "tail" : "(fa: F[A])(p: (A) => Boolean): List[A]", "member" : "cats.Foldable.filter_", "link" : "proptics\/indices\/TraverseWithIndex.html#filter_[A](fa:F[A])(p:A=>Boolean):List[A]", "kind" : "def"}, {"label" : "partitionEither", "tail" : "(fa: F[A])(f: (A) => Either[B, C])(A: Alternative[F]): (F[B], F[C])", "member" : "cats.Foldable.partitionEither", "link" : "proptics\/indices\/TraverseWithIndex.html#partitionEither[A,B,C](fa:F[A])(f:A=>Either[B,C])(implicitA:cats.Alternative[F]):(F[B],F[C])", "kind" : "def"}, {"label" : "toList", "tail" : "(fa: F[A]): List[A]", "member" : "cats.Foldable.toList", "link" : "proptics\/indices\/TraverseWithIndex.html#toList[A](fa:F[A]):List[A]", "kind" : "def"}, {"label" : "forallM", "tail" : "(fa: F[A])(p: (A) => G[Boolean])(G: Monad[G]): G[Boolean]", "member" : "cats.Foldable.forallM", "link" : "proptics\/indices\/TraverseWithIndex.html#forallM[G[_<:<?>],A](fa:F[A])(p:A=>G[Boolean])(implicitG:cats.Monad[G]):G[Boolean]", "kind" : "def"}, {"label" : "existsM", "tail" : "(fa: F[A])(p: (A) => G[Boolean])(G: Monad[G]): G[Boolean]", "member" : "cats.Foldable.existsM", "link" : "proptics\/indices\/TraverseWithIndex.html#existsM[G[_<:<?>],A](fa:F[A])(p:A=>G[Boolean])(implicitG:cats.Monad[G]):G[Boolean]", "kind" : "def"}, {"label" : "forall", "tail" : "(fa: F[A])(p: (A) => Boolean): Boolean", "member" : "cats.Foldable.forall", "link" : "proptics\/indices\/TraverseWithIndex.html#forall[A](fa:F[A])(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(fa: F[A])(p: (A) => Boolean): Boolean", "member" : "cats.Foldable.exists", "link" : "proptics\/indices\/TraverseWithIndex.html#exists[A](fa:F[A])(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "findM", "tail" : "(fa: F[A])(p: (A) => G[Boolean])(G: Monad[G]): G[Option[A]]", "member" : "cats.Foldable.findM", "link" : "proptics\/indices\/TraverseWithIndex.html#findM[G[_<:<?>],A](fa:F[A])(p:A=>G[Boolean])(implicitG:cats.Monad[G]):G[Option[A]]", "kind" : "def"}, {"label" : "find", "tail" : "(fa: F[A])(f: (A) => Boolean): Option[A]", "member" : "cats.Foldable.find", "link" : "proptics\/indices\/TraverseWithIndex.html#find[A](fa:F[A])(f:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "foldK", "tail" : "(fga: F[G[A]])(G: MonoidK[G]): G[A]", "member" : "cats.Foldable.foldK", "link" : "proptics\/indices\/TraverseWithIndex.html#foldK[G[_<:<?>],A](fga:F[G[A]])(implicitG:cats.MonoidK[G]):G[A]", "kind" : "def"}, {"label" : "sequence_", "tail" : "(fga: F[G[A]])(arg0: Applicative[G]): G[Unit]", "member" : "cats.Foldable.sequence_", "link" : "proptics\/indices\/TraverseWithIndex.html#sequence_[G[_<:<?>],A](fga:F[G[A]])(implicitevidence$7:cats.Applicative[G]):G[Unit]", "kind" : "def"}, {"label" : "traverse_", "tail" : "(fa: F[A])(f: (A) => G[B])(G: Applicative[G]): G[Unit]", "member" : "cats.Foldable.traverse_", "link" : "proptics\/indices\/TraverseWithIndex.html#traverse_[G[_<:<?>],A,B](fa:F[A])(f:A=>G[B])(implicitG:cats.Applicative[G]):G[Unit]", "kind" : "def"}, {"label" : "foldMapA", "tail" : "(fa: F[A])(f: (A) => G[B])(G: Applicative[G], B: Monoid[B]): G[B]", "member" : "cats.Foldable.foldMapA", "link" : "proptics\/indices\/TraverseWithIndex.html#foldMapA[G[_<:<?>],A,B](fa:F[A])(f:A=>G[B])(implicitG:cats.Applicative[G],implicitB:cats.Monoid[B]):G[B]", "kind" : "def"}, {"label" : "foldMapM", "tail" : "(fa: F[A])(f: (A) => G[B])(G: Monad[G], B: Monoid[B]): G[B]", "member" : "cats.Foldable.foldMapM", "link" : "proptics\/indices\/TraverseWithIndex.html#foldMapM[G[_<:<?>],A,B](fa:F[A])(f:A=>G[B])(implicitG:cats.Monad[G],implicitB:cats.Monoid[B]):G[B]", "kind" : "def"}, {"label" : "foldLeftM", "tail" : "(fa: F[A], z: B)(f: (B, A) => G[B])(G: Monad[G]): G[B]", "member" : "cats.Foldable.foldLeftM", "link" : "proptics\/indices\/TraverseWithIndex.html#foldLeftM[G[_<:<?>],A,B](fa:F[A],z:B)(f:(B,A)=>G[B])(implicitG:cats.Monad[G]):G[B]", "kind" : "final def"}, {"label" : "foldMapK", "tail" : "(fa: F[A])(f: (A) => G[B])(G: MonoidK[G]): G[B]", "member" : "cats.Foldable.foldMapK", "link" : "proptics\/indices\/TraverseWithIndex.html#foldMapK[G[_<:<?>],A,B](fa:F[A])(f:A=>G[B])(implicitG:cats.MonoidK[G]):G[B]", "kind" : "def"}, {"label" : "foldA", "tail" : "(fga: F[G[A]])(G: Applicative[G], A: Monoid[A]): G[A]", "member" : "cats.Foldable.foldA", "link" : "proptics\/indices\/TraverseWithIndex.html#foldA[G[_<:<?>],A](fga:F[G[A]])(implicitG:cats.Applicative[G],implicitA:cats.Monoid[A]):G[A]", "kind" : "def"}, {"label" : "foldM", "tail" : "(fa: F[A], z: B)(f: (B, A) => G[B])(G: Monad[G]): G[B]", "member" : "cats.Foldable.foldM", "link" : "proptics\/indices\/TraverseWithIndex.html#foldM[G[_<:<?>],A,B](fa:F[A],z:B)(f:(B,A)=>G[B])(implicitG:cats.Monad[G]):G[B]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(fa: F[A]): Iterable[A]", "member" : "cats.Foldable.toIterable", "link" : "proptics\/indices\/TraverseWithIndex.html#toIterable[A](fa:F[A]):Iterable[A]", "kind" : "def"}, {"label" : "combineAllOption", "tail" : "(fa: F[A])(ev: Semigroup[A]): Option[A]", "member" : "cats.Foldable.combineAllOption", "link" : "proptics\/indices\/TraverseWithIndex.html#combineAllOption[A](fa:F[A])(implicitev:cats.Semigroup[A]):Option[A]", "kind" : "def"}, {"label" : "combineAll", "tail" : "(fa: F[A])(arg0: Monoid[A]): A", "member" : "cats.Foldable.combineAll", "link" : "proptics\/indices\/TraverseWithIndex.html#combineAll[A](fa:F[A])(implicitevidence$6:cats.Monoid[A]):A", "kind" : "def"}, {"label" : "fold", "tail" : "(fa: F[A])(A: Monoid[A]): A", "member" : "cats.Foldable.fold", "link" : "proptics\/indices\/TraverseWithIndex.html#fold[A](fa:F[A])(implicitA:cats.Monoid[A]):A", "kind" : "def"}, {"label" : "collectFoldSome", "tail" : "(fa: F[A])(f: (A) => Option[B])(B: Monoid[B]): B", "member" : "cats.Foldable.collectFoldSome", "link" : "proptics\/indices\/TraverseWithIndex.html#collectFoldSome[A,B](fa:F[A])(f:A=>Option[B])(implicitB:cats.Monoid[B]):B", "kind" : "def"}, {"label" : "collectFold", "tail" : "(fa: F[A])(f: PartialFunction[A, B])(B: Monoid[B]): B", "member" : "cats.Foldable.collectFold", "link" : "proptics\/indices\/TraverseWithIndex.html#collectFold[A,B](fa:F[A])(f:PartialFunction[A,B])(implicitB:cats.Monoid[B]):B", "kind" : "def"}, {"label" : "collectFirstSomeM", "tail" : "(fa: F[A])(f: (A) => G[Option[B]])(G: Monad[G]): G[Option[B]]", "member" : "cats.Foldable.collectFirstSomeM", "link" : "proptics\/indices\/TraverseWithIndex.html#collectFirstSomeM[G[_<:<?>],A,B](fa:F[A])(f:A=>G[Option[B]])(implicitG:cats.Monad[G]):G[Option[B]]", "kind" : "def"}, {"label" : "collectFirstSome", "tail" : "(fa: F[A])(f: (A) => Option[B]): Option[B]", "member" : "cats.Foldable.collectFirstSome", "link" : "proptics\/indices\/TraverseWithIndex.html#collectFirstSome[A,B](fa:F[A])(f:A=>Option[B]):Option[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(fa: F[A])(pf: PartialFunction[A, B]): Option[B]", "member" : "cats.Foldable.collectFirst", "link" : "proptics\/indices\/TraverseWithIndex.html#collectFirst[A,B](fa:F[A])(pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "get", "tail" : "(fa: F[A])(idx: Long): Option[A]", "member" : "cats.Foldable.get", "link" : "proptics\/indices\/TraverseWithIndex.html#get[A](fa:F[A])(idx:Long):Option[A]", "kind" : "def"}, {"label" : "productAll", "tail" : "(fa: F[A])(A: Numeric[A]): A", "member" : "cats.Foldable.productAll", "link" : "proptics\/indices\/TraverseWithIndex.html#productAll[A](fa:F[A])(implicitA:Numeric[A]):A", "kind" : "def"}, {"label" : "sumAll", "tail" : "(fa: F[A])(A: Numeric[A]): A", "member" : "cats.Foldable.sumAll", "link" : "proptics\/indices\/TraverseWithIndex.html#sumAll[A](fa:F[A])(implicitA:Numeric[A]):A", "kind" : "def"}, {"label" : "maximumByList", "tail" : "(fa: F[A])(f: (A) => B)(arg0: Order[B]): List[A]", "member" : "cats.Foldable.maximumByList", "link" : "proptics\/indices\/TraverseWithIndex.html#maximumByList[A,B](fa:F[A])(f:A=>B)(implicitevidence$5:cats.Order[B]):List[A]", "kind" : "def"}, {"label" : "minimumByList", "tail" : "(fa: F[A])(f: (A) => B)(arg0: Order[B]): List[A]", "member" : "cats.Foldable.minimumByList", "link" : "proptics\/indices\/TraverseWithIndex.html#minimumByList[A,B](fa:F[A])(f:A=>B)(implicitevidence$4:cats.Order[B]):List[A]", "kind" : "def"}, {"label" : "maximumList", "tail" : "(fa: F[A])(A: Order[A]): List[A]", "member" : "cats.Foldable.maximumList", "link" : "proptics\/indices\/TraverseWithIndex.html#maximumList[A](fa:F[A])(implicitA:cats.Order[A]):List[A]", "kind" : "def"}, {"label" : "minimumList", "tail" : "(fa: F[A])(A: Order[A]): List[A]", "member" : "cats.Foldable.minimumList", "link" : "proptics\/indices\/TraverseWithIndex.html#minimumList[A](fa:F[A])(implicitA:cats.Order[A]):List[A]", "kind" : "def"}, {"label" : "maximumByOption", "tail" : "(fa: F[A])(f: (A) => B)(arg0: Order[B]): Option[A]", "member" : "cats.Foldable.maximumByOption", "link" : "proptics\/indices\/TraverseWithIndex.html#maximumByOption[A,B](fa:F[A])(f:A=>B)(implicitevidence$3:cats.Order[B]):Option[A]", "kind" : "def"}, {"label" : "minimumByOption", "tail" : "(fa: F[A])(f: (A) => B)(arg0: Order[B]): Option[A]", "member" : "cats.Foldable.minimumByOption", "link" : "proptics\/indices\/TraverseWithIndex.html#minimumByOption[A,B](fa:F[A])(f:A=>B)(implicitevidence$2:cats.Order[B]):Option[A]", "kind" : "def"}, {"label" : "maximumOption", "tail" : "(fa: F[A])(A: Order[A]): Option[A]", "member" : "cats.Foldable.maximumOption", "link" : "proptics\/indices\/TraverseWithIndex.html#maximumOption[A](fa:F[A])(implicitA:cats.Order[A]):Option[A]", "kind" : "def"}, {"label" : "minimumOption", "tail" : "(fa: F[A])(A: Order[A]): Option[A]", "member" : "cats.Foldable.minimumOption", "link" : "proptics\/indices\/TraverseWithIndex.html#minimumOption[A](fa:F[A])(implicitA:cats.Order[A]):Option[A]", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(fa: F[A])(f: (A, Eval[A]) => Eval[A]): Eval[Option[A]]", "member" : "cats.Foldable.reduceRightOption", "link" : "proptics\/indices\/TraverseWithIndex.html#reduceRightOption[A](fa:F[A])(f:(A,cats.Eval[A])=>cats.Eval[A]):cats.Eval[Option[A]]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(fa: F[A])(f: (A, A) => A): Option[A]", "member" : "cats.Foldable.reduceLeftOption", "link" : "proptics\/indices\/TraverseWithIndex.html#reduceLeftOption[A](fa:F[A])(f:(A,A)=>A):Option[A]", "kind" : "def"}, {"label" : "reduceRightToOption", "tail" : "(fa: F[A])(f: (A) => B)(g: (A, Eval[B]) => Eval[B]): Eval[Option[B]]", "member" : "cats.Foldable.reduceRightToOption", "link" : "proptics\/indices\/TraverseWithIndex.html#reduceRightToOption[A,B](fa:F[A])(f:A=>B)(g:(A,cats.Eval[B])=>cats.Eval[B]):cats.Eval[Option[B]]", "kind" : "def"}, {"label" : "reduceLeftToOption", "tail" : "(fa: F[A])(f: (A) => B)(g: (B, A) => B): Option[B]", "member" : "cats.Foldable.reduceLeftToOption", "link" : "proptics\/indices\/TraverseWithIndex.html#reduceLeftToOption[A,B](fa:F[A])(f:A=>B)(g:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "foldRightDefer", "tail" : "(fa: F[A], gb: G[B])(fn: (A, G[B]) => G[B])(arg0: Defer[G]): G[B]", "member" : "cats.Foldable.foldRightDefer", "link" : "proptics\/indices\/TraverseWithIndex.html#foldRightDefer[G[_<:<?>],A,B](fa:F[A],gb:G[B])(fn:(A,G[B])=>G[B])(implicitevidence$1:cats.Defer[G]):G[B]", "kind" : "def"}, {"label" : "sliding22", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding22", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding22[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding21", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding21", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding21[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding20", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding20", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding20[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding19", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding19", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding19[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding18", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding18", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding18[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding17", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding17", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding17[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding16", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding16", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding16[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding15", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding15", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding15[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding14", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding14", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding14[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding13", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding13", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding13[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding12", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding12", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding12[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding11", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding11", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding11[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding10", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding10", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding10[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding9", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding9", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding9[A](fa:F[A]):List[(A,A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding8", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding8", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding8[A](fa:F[A]):List[(A,A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding7", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding7", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding7[A](fa:F[A]):List[(A,A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding6", "tail" : "(fa: F[A]): List[(A, A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding6", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding6[A](fa:F[A]):List[(A,A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding5", "tail" : "(fa: F[A]): List[(A, A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding5", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding5[A](fa:F[A]):List[(A,A,A,A,A)]", "kind" : "def"}, {"label" : "sliding4", "tail" : "(fa: F[A]): List[(A, A, A, A)]", "member" : "cats.FoldableNFunctions.sliding4", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding4[A](fa:F[A]):List[(A,A,A,A)]", "kind" : "def"}, {"label" : "sliding3", "tail" : "(fa: F[A]): List[(A, A, A)]", "member" : "cats.FoldableNFunctions.sliding3", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding3[A](fa:F[A]):List[(A,A,A)]", "kind" : "def"}, {"label" : "sliding2", "tail" : "(fa: F[A]): List[(A, A)]", "member" : "cats.FoldableNFunctions.sliding2", "link" : "proptics\/indices\/TraverseWithIndex.html#sliding2[A](fa:F[A]):List[(A,A)]", "kind" : "def"}, {"label" : "count", "tail" : "(fa: F[A])(p: (A) => Boolean): Long", "member" : "cats.UnorderedFoldable.count", "link" : "proptics\/indices\/TraverseWithIndex.html#count[A](fa:F[A])(p:A=>Boolean):Long", "kind" : "def"}, {"label" : "size", "tail" : "(fa: F[A]): Long", "member" : "cats.UnorderedFoldable.size", "link" : "proptics\/indices\/TraverseWithIndex.html#size[A](fa:F[A]):Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/indices\/TraverseWithIndex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/indices\/TraverseWithIndex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/indices\/TraverseWithIndex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/indices\/TraverseWithIndex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/indices\/TraverseWithIndex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/indices\/TraverseWithIndex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/indices\/TraverseWithIndex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/TraverseWithIndex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/TraverseWithIndex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/indices\/TraverseWithIndex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/indices\/TraverseWithIndex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/indices\/TraverseWithIndex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/indices\/TraverseWithIndex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/indices\/TraverseWithIndex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/indices\/TraverseWithIndex.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/indices\/TraverseWithIndex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/indices\/TraverseWithIndex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/indices\/TraverseWithIndex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/indices\/TraverseWithIndex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "traverse", "tail" : "(fa: F[A])(f: (A) => G[B])(arg0: Applicative[G]): G[F[B]]", "member" : "cats.Traverse.traverse", "link" : "proptics\/indices\/TraverseWithIndex.html#traverse[G[_],A,B](fa:F[A])(f:A=>G[B])(implicitevidence$1:cats.Applicative[G]):G[F[B]]", "kind" : "abstract def"}, {"label" : "mapWithIndex", "tail" : "(f: (A, I) => B)(fa: F[A]): F[B]", "member" : "proptics.indices.FunctorWithIndex.mapWithIndex", "link" : "proptics\/indices\/TraverseWithIndex.html#mapWithIndex[A,B](f:(A,I)=>B)(fa:F[A]):F[B]", "kind" : "abstract def"}, {"label" : "foldRightWithIndex", "tail" : "(f: ((A, I), Eval[B]) => Eval[B])(fa: F[A], lb: Eval[B]): Eval[B]", "member" : "proptics.indices.FoldableWithIndex.foldRightWithIndex", "link" : "proptics\/indices\/TraverseWithIndex.html#foldRightWithIndex[A,B](f:((A,I),cats.Eval[B])=>cats.Eval[B])(fa:F[A],lb:cats.Eval[B]):cats.Eval[B]", "kind" : "abstract def"}, {"label" : "foldLeftWithIndex", "tail" : "(f: (B, (A, I)) => B)(fa: F[A], b: B): B", "member" : "proptics.indices.FoldableWithIndex.foldLeftWithIndex", "link" : "proptics\/indices\/TraverseWithIndex.html#foldLeftWithIndex[A,B](f:(B,(A,I))=>B)(fa:F[A],b:B):B", "kind" : "abstract def"}], "shortDescription" : ""}], "proptics.syntax" : [{"name" : "proptics.syntax.aLens", "shortDescription" : "", "object" : "proptics\/syntax\/package$$aLens$.html", "members_object" : [{"label" : "aLensSequenceOps", "tail" : "(aLens: ALens_[S, T, F[A], A]): ALensSequenceOps[F, S, T, A]", "member" : "proptics.syntax.ALensSyntax.aLensSequenceOps", "link" : "proptics\/syntax\/package$$aLens$.html#aLensSequenceOps[F[_],S,T,A](aLens:proptics.ALens_[S,T,F[A],A]):proptics.syntax.ALensSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$aLens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$aLens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$aLens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$aLens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$aLens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$aLens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$aLens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$aLens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$aLens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$aLens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$aLens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$aLens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$aLens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$aLens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$aLens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$aLens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$aLens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$aLens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$aLens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.ALensSequenceOps", "shortDescription" : "", "members_case class" : [{"label" : "sequence", "tail" : "(s: S)(ev: Functor[F]): F[T]", "member" : "proptics.syntax.ALensSequenceOps.sequence", "link" : "proptics\/syntax\/ALensSequenceOps.html#sequence(s:S)(implicitev:cats.Functor[F]):F[T]", "kind" : "def"}, {"member" : "proptics.syntax.ALensSequenceOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/ALensSequenceOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/ALensSequenceOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/ALensSequenceOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/ALensSequenceOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/ALensSequenceOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/ALensSequenceOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/ALensSequenceOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/ALensSequenceOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.ALensSyntax", "trait" : "proptics\/syntax\/ALensSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "aLensSequenceOps", "tail" : "(aLens: ALens_[S, T, F[A], A]): ALensSequenceOps[F, S, T, A]", "member" : "proptics.syntax.ALensSyntax.aLensSequenceOps", "link" : "proptics\/syntax\/ALensSyntax.html#aLensSequenceOps[F[_],S,T,A](aLens:proptics.ALens_[S,T,F[A],A]):proptics.syntax.ALensSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/ALensSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/ALensSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/ALensSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/ALensSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/ALensSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/ALensSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/ALensSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/ALensSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/ALensSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/ALensSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/ALensSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/ALensSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/ALensSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/ALensSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/ALensSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/ALensSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/ALensSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/ALensSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/ALensSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.all", "shortDescription" : "", "object" : "proptics\/syntax\/package$$all$.html", "members_object" : [{"label" : "traverseWithIndexOps", "tail" : "(fa: F[A]): TraverseWithIndexOps[F, A]", "member" : "proptics.syntax.TraverseWithIndexSyntax.traverseWithIndexOps", "link" : "proptics\/syntax\/package$$all$.html#traverseWithIndexOps[F[_],A](fa:F[A]):proptics.syntax.TraverseWithIndexOps[F,A]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexOps", "tail" : "(fa: F[A]): FoldableWithIndexOps[F, A]", "member" : "proptics.syntax.FoldableWithIndexSyntax.foldableWithIndexOps", "link" : "proptics\/syntax\/package$$all$.html#foldableWithIndexOps[F[_],A](fa:F[A]):proptics.syntax.FoldableWithIndexOps[F,A]", "kind" : "implicit final def"}, {"label" : "functorWithIndexOps", "tail" : "(fa: F[A]): FunctorWithIndexOps[F, A]", "member" : "proptics.syntax.FunctorWithIndexSyntax.functorWithIndexOps", "link" : "proptics\/syntax\/package$$all$.html#functorWithIndexOps[F[_],A](fa:F[A]):proptics.syntax.FunctorWithIndexOps[F,A]", "kind" : "implicit final def"}, {"label" : "atRemoveOps", "tail" : "(at: At[S, I, A]): AtRemoveOps[S, I, A]", "member" : "proptics.syntax.AtSyntax.atRemoveOps", "link" : "proptics\/syntax\/package$$all$.html#atRemoveOps[S,I,A](at:proptics.typeclass.At[S,I,A]):proptics.syntax.AtRemoveOps[S,I,A]", "kind" : "implicit def"}, {"label" : "costarOps", "tail" : "(costar: Costar[F, A, B]): CostarOps[F, A, B]", "member" : "proptics.syntax.CostarSyntax.costarOps", "link" : "proptics\/syntax\/package$$all$.html#costarOps[F[_],A,B](costar:proptics.profunctor.Costar[F,A,B]):proptics.syntax.CostarOps[F,A,B]", "kind" : "implicit final def"}, {"label" : "starOps", "tail" : "(star: Star[F, A, B]): StarOps[F, A, B]", "member" : "proptics.syntax.StarSyntax.starOps", "link" : "proptics\/syntax\/package$$all$.html#starOps[F[_],A,B](star:proptics.profunctor.Star[F,A,B]):proptics.syntax.StarOps[F,A,B]", "kind" : "implicit final def"}, {"label" : "tuple2TypeOps", "tail" : "(tupleType: Tuple2.type): Tuple2TypeOps", "member" : "proptics.syntax.TupleSyntax.tuple2TypeOps", "link" : "proptics\/syntax\/package$$all$.html#tuple2TypeOps(tupleType:Tuple2.type):proptics.syntax.Tuple2TypeOps", "kind" : "implicit def"}, {"label" : "functionFlippedApply", "tail" : "(a: A): FunctionFlippedApply[A]", "member" : "proptics.syntax.FunctionSyntax.functionFlippedApply", "link" : "proptics\/syntax\/package$$all$.html#functionFlippedApply[A](a:A):proptics.syntax.FunctionFlippedApply[A]", "kind" : "implicit final def"}, {"label" : "function2FlipOps", "tail" : "(f: (A) => (B) => C): Function2FlipOps[A, B, C]", "member" : "proptics.syntax.FunctionSyntax.function2FlipOps", "link" : "proptics\/syntax\/package$$all$.html#function2FlipOps[A,B,C](f:A=>(B=>C)):proptics.syntax.Function2FlipOps[A,B,C]", "kind" : "implicit final def"}, {"label" : "indexedTraversalSequenceOps", "tail" : "(indexedTraversal: IndexedTraversal_[I, S, T, F[A], A]): IndexedTraversalSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.IndexedTraversalSyntax.indexedTraversalSequenceOps", "link" : "proptics\/syntax\/package$$all$.html#indexedTraversalSequenceOps[F[_],I,S,T,A](indexedTraversal:proptics.IndexedTraversal_[I,S,T,F[A],A]):proptics.syntax.IndexedTraversalSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "indexedTraversalOps", "tail" : "(indexedTraversal: IndexedTraversal_[I, S, T, A, A]): IndexedTraversalOps[I, S, T, A]", "member" : "proptics.syntax.IndexedTraversalSyntax.indexedTraversalOps", "link" : "proptics\/syntax\/package$$all$.html#indexedTraversalOps[I,S,T,A](indexedTraversal:proptics.IndexedTraversal_[I,S,T,A,A]):proptics.syntax.IndexedTraversalOps[I,S,T,A]", "kind" : "implicit def"}, {"label" : "indexedFoldOps", "tail" : "(indexedFold: IndexedFold_[I, S, T, A, A]): IndexedFoldsOps[I, S, T, A]", "member" : "proptics.syntax.IndexedFoldSyntax.indexedFoldOps", "link" : "proptics\/syntax\/package$$all$.html#indexedFoldOps[I,S,T,A](indexedFold:proptics.IndexedFold_[I,S,T,A,A]):proptics.syntax.IndexedFoldsOps[I,S,T,A]", "kind" : "implicit def"}, {"label" : "anIndexedLensSequenceOps", "tail" : "(anIndexedLens: AnIndexedLens_[I, S, T, F[A], A]): AnIndexedLensSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.AnIndexedLensSyntax.anIndexedLensSequenceOps", "link" : "proptics\/syntax\/package$$all$.html#anIndexedLensSequenceOps[F[_],I,S,T,A](anIndexedLens:proptics.AnIndexedLens_[I,S,T,F[A],A]):proptics.syntax.AnIndexedLensSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "indexedLensSequenceOps", "tail" : "(indexedLens: IndexedLens_[I, S, T, F[A], A]): IndexedLensSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.IndexedLensSyntax.indexedLensSequenceOps", "link" : "proptics\/syntax\/package$$all$.html#indexedLensSequenceOps[F[_],I,S,T,A](indexedLens:proptics.IndexedLens_[I,S,T,F[A],A]):proptics.syntax.IndexedLensSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "setterSTAOptionB", "tail" : "(setter: Setter_[S, T, A, Option[B]]): SetterSTAOptionB[S, T, A, B]", "member" : "proptics.syntax.SetterSyntax.setterSTAOptionB", "link" : "proptics\/syntax\/package$$all$.html#setterSTAOptionB[S,T,A,B](setter:proptics.Setter_[S,T,A,Option[B]]):proptics.syntax.SetterSTAOptionB[S,T,A,B]", "kind" : "implicit def"}, {"label" : "setterSTAAOps", "tail" : "(setter: Setter_[S, T, A, A]): SetterSTAAOps[S, T, A]", "member" : "proptics.syntax.SetterSyntax.setterSTAAOps", "link" : "proptics\/syntax\/package$$all$.html#setterSTAAOps[S,T,A](setter:proptics.Setter_[S,T,A,A]):proptics.syntax.SetterSTAAOps[S,T,A]", "kind" : "implicit def"}, {"label" : "aTraversalSequenceOps", "tail" : "(aTraversal: ATraversal_[S, T, F[A], A]): ATraversalSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.ATraversalSyntax.aTraversalSequenceOps", "link" : "proptics\/syntax\/package$$all$.html#aTraversalSequenceOps[F[_],I,S,T,A](aTraversal:proptics.ATraversal_[S,T,F[A],A]):proptics.syntax.ATraversalSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "aTraversalElementOps", "tail" : "(aTraversal: ATraversal_[S, T, A, A]): ATraversalElementOps[S, T, A]", "member" : "proptics.syntax.ATraversalSyntax.aTraversalElementOps", "link" : "proptics\/syntax\/package$$all$.html#aTraversalElementOps[S,T,A](aTraversal:proptics.ATraversal_[S,T,A,A]):proptics.syntax.ATraversalElementOps[S,T,A]", "kind" : "implicit final def"}, {"label" : "traversalFSequenceOps", "tail" : "(traversal: Traversal_[S, T, F[A], A]): TraversalFSequenceOps[F, S, T, A]", "member" : "proptics.syntax.TraversalSyntax.traversalFSequenceOps", "link" : "proptics\/syntax\/package$$all$.html#traversalFSequenceOps[F[_],S,T,A](traversal:proptics.Traversal_[S,T,F[A],A]):proptics.syntax.TraversalFSequenceOps[F,S,T,A]", "kind" : "implicit final def"}, {"label" : "traversalElementOps", "tail" : "(traversal: Traversal_[S, T, A, A]): TraversalElementOps[S, T, A]", "member" : "proptics.syntax.TraversalSyntax.traversalElementOps", "link" : "proptics\/syntax\/package$$all$.html#traversalElementOps[S,T,A](traversal:proptics.Traversal_[S,T,A,A]):proptics.syntax.TraversalElementOps[S,T,A]", "kind" : "implicit final def"}, {"label" : "foldElementOps", "tail" : "(fold: Fold_[S, T, A, A]): FoldElementOps[S, T, A]", "member" : "proptics.syntax.FoldSyntax.foldElementOps", "link" : "proptics\/syntax\/package$$all$.html#foldElementOps[S,T,A](fold:proptics.Fold_[S,T,A,A]):proptics.syntax.FoldElementOps[S,T,A]", "kind" : "implicit final def"}, {"label" : "aPrismSequenceOps", "tail" : "(aPrism: APrism_[S, T, F[A], A]): APrismSequenceOps[F, S, T, A]", "member" : "proptics.syntax.APrismSyntax.aPrismSequenceOps", "link" : "proptics\/syntax\/package$$all$.html#aPrismSequenceOps[F[_],S,T,A](aPrism:proptics.APrism_[S,T,F[A],A]):proptics.syntax.APrismSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "prismSequenceOps", "tail" : "(prism: Prism_[S, T, F[A], A]): PrismSequenceOps[F, S, T, A]", "member" : "proptics.syntax.PrismSyntax.prismSequenceOps", "link" : "proptics\/syntax\/package$$all$.html#prismSequenceOps[F[_],S,T,A](prism:proptics.Prism_[S,T,F[A],A]):proptics.syntax.PrismSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "aLensSequenceOps", "tail" : "(aLens: ALens_[S, T, F[A], A]): ALensSequenceOps[F, S, T, A]", "member" : "proptics.syntax.ALensSyntax.aLensSequenceOps", "link" : "proptics\/syntax\/package$$all$.html#aLensSequenceOps[F[_],S,T,A](aLens:proptics.ALens_[S,T,F[A],A]):proptics.syntax.ALensSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "lensSequenceOps", "tail" : "(lens: Lens_[S, T, F[A], A]): LensSequenceOps[F, S, T, A]", "member" : "proptics.syntax.LensSyntax.lensSequenceOps", "link" : "proptics\/syntax\/package$$all$.html#lensSequenceOps[F[_],S,T,A](lens:proptics.Lens_[S,T,F[A],A]):proptics.syntax.LensSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "anIsoSequenceOps", "tail" : "(iso: AnIso_[S, T, F[A], A]): AnIsoSequenceOps[F, S, T, A]", "member" : "proptics.syntax.AnIsoSyntax.anIsoSequenceOps", "link" : "proptics\/syntax\/package$$all$.html#anIsoSequenceOps[F[_],S,T,A](iso:proptics.AnIso_[S,T,F[A],A]):proptics.syntax.AnIsoSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "isoFunctorOps", "tail" : "(iso: Iso[S, A]): IsoFunctorOps[S, A]", "member" : "proptics.syntax.IsoSyntax.isoFunctorOps", "link" : "proptics\/syntax\/package$$all$.html#isoFunctorOps[S,A](iso:proptics.Iso[S,A]):proptics.syntax.IsoFunctorOps[S,A]", "kind" : "implicit def"}, {"label" : "isoSequenceOps", "tail" : "(iso: Iso_[S, T, F[A], A]): IsoSequenceOps[F, S, T, A]", "member" : "proptics.syntax.IsoSyntax.isoSequenceOps", "link" : "proptics\/syntax\/package$$all$.html#isoSequenceOps[F[_],S,T,A](iso:proptics.Iso_[S,T,F[A],A]):proptics.syntax.IsoSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$all$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$all$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$all$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$all$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$all$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$all$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$all$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$all$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$all$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$all$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$all$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$all$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$all$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$all$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$all$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$all$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$all$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$all$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$all$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.AllSyntax", "trait" : "proptics\/syntax\/AllSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "traverseWithIndexOps", "tail" : "(fa: F[A]): TraverseWithIndexOps[F, A]", "member" : "proptics.syntax.TraverseWithIndexSyntax.traverseWithIndexOps", "link" : "proptics\/syntax\/AllSyntax.html#traverseWithIndexOps[F[_],A](fa:F[A]):proptics.syntax.TraverseWithIndexOps[F,A]", "kind" : "implicit final def"}, {"label" : "foldableWithIndexOps", "tail" : "(fa: F[A]): FoldableWithIndexOps[F, A]", "member" : "proptics.syntax.FoldableWithIndexSyntax.foldableWithIndexOps", "link" : "proptics\/syntax\/AllSyntax.html#foldableWithIndexOps[F[_],A](fa:F[A]):proptics.syntax.FoldableWithIndexOps[F,A]", "kind" : "implicit final def"}, {"label" : "functorWithIndexOps", "tail" : "(fa: F[A]): FunctorWithIndexOps[F, A]", "member" : "proptics.syntax.FunctorWithIndexSyntax.functorWithIndexOps", "link" : "proptics\/syntax\/AllSyntax.html#functorWithIndexOps[F[_],A](fa:F[A]):proptics.syntax.FunctorWithIndexOps[F,A]", "kind" : "implicit final def"}, {"label" : "atRemoveOps", "tail" : "(at: At[S, I, A]): AtRemoveOps[S, I, A]", "member" : "proptics.syntax.AtSyntax.atRemoveOps", "link" : "proptics\/syntax\/AllSyntax.html#atRemoveOps[S,I,A](at:proptics.typeclass.At[S,I,A]):proptics.syntax.AtRemoveOps[S,I,A]", "kind" : "implicit def"}, {"label" : "costarOps", "tail" : "(costar: Costar[F, A, B]): CostarOps[F, A, B]", "member" : "proptics.syntax.CostarSyntax.costarOps", "link" : "proptics\/syntax\/AllSyntax.html#costarOps[F[_],A,B](costar:proptics.profunctor.Costar[F,A,B]):proptics.syntax.CostarOps[F,A,B]", "kind" : "implicit final def"}, {"label" : "starOps", "tail" : "(star: Star[F, A, B]): StarOps[F, A, B]", "member" : "proptics.syntax.StarSyntax.starOps", "link" : "proptics\/syntax\/AllSyntax.html#starOps[F[_],A,B](star:proptics.profunctor.Star[F,A,B]):proptics.syntax.StarOps[F,A,B]", "kind" : "implicit final def"}, {"label" : "tuple2TypeOps", "tail" : "(tupleType: Tuple2.type): Tuple2TypeOps", "member" : "proptics.syntax.TupleSyntax.tuple2TypeOps", "link" : "proptics\/syntax\/AllSyntax.html#tuple2TypeOps(tupleType:Tuple2.type):proptics.syntax.Tuple2TypeOps", "kind" : "implicit def"}, {"label" : "functionFlippedApply", "tail" : "(a: A): FunctionFlippedApply[A]", "member" : "proptics.syntax.FunctionSyntax.functionFlippedApply", "link" : "proptics\/syntax\/AllSyntax.html#functionFlippedApply[A](a:A):proptics.syntax.FunctionFlippedApply[A]", "kind" : "implicit final def"}, {"label" : "function2FlipOps", "tail" : "(f: (A) => (B) => C): Function2FlipOps[A, B, C]", "member" : "proptics.syntax.FunctionSyntax.function2FlipOps", "link" : "proptics\/syntax\/AllSyntax.html#function2FlipOps[A,B,C](f:A=>(B=>C)):proptics.syntax.Function2FlipOps[A,B,C]", "kind" : "implicit final def"}, {"label" : "indexedTraversalSequenceOps", "tail" : "(indexedTraversal: IndexedTraversal_[I, S, T, F[A], A]): IndexedTraversalSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.IndexedTraversalSyntax.indexedTraversalSequenceOps", "link" : "proptics\/syntax\/AllSyntax.html#indexedTraversalSequenceOps[F[_],I,S,T,A](indexedTraversal:proptics.IndexedTraversal_[I,S,T,F[A],A]):proptics.syntax.IndexedTraversalSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "indexedTraversalOps", "tail" : "(indexedTraversal: IndexedTraversal_[I, S, T, A, A]): IndexedTraversalOps[I, S, T, A]", "member" : "proptics.syntax.IndexedTraversalSyntax.indexedTraversalOps", "link" : "proptics\/syntax\/AllSyntax.html#indexedTraversalOps[I,S,T,A](indexedTraversal:proptics.IndexedTraversal_[I,S,T,A,A]):proptics.syntax.IndexedTraversalOps[I,S,T,A]", "kind" : "implicit def"}, {"label" : "indexedFoldOps", "tail" : "(indexedFold: IndexedFold_[I, S, T, A, A]): IndexedFoldsOps[I, S, T, A]", "member" : "proptics.syntax.IndexedFoldSyntax.indexedFoldOps", "link" : "proptics\/syntax\/AllSyntax.html#indexedFoldOps[I,S,T,A](indexedFold:proptics.IndexedFold_[I,S,T,A,A]):proptics.syntax.IndexedFoldsOps[I,S,T,A]", "kind" : "implicit def"}, {"label" : "anIndexedLensSequenceOps", "tail" : "(anIndexedLens: AnIndexedLens_[I, S, T, F[A], A]): AnIndexedLensSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.AnIndexedLensSyntax.anIndexedLensSequenceOps", "link" : "proptics\/syntax\/AllSyntax.html#anIndexedLensSequenceOps[F[_],I,S,T,A](anIndexedLens:proptics.AnIndexedLens_[I,S,T,F[A],A]):proptics.syntax.AnIndexedLensSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "indexedLensSequenceOps", "tail" : "(indexedLens: IndexedLens_[I, S, T, F[A], A]): IndexedLensSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.IndexedLensSyntax.indexedLensSequenceOps", "link" : "proptics\/syntax\/AllSyntax.html#indexedLensSequenceOps[F[_],I,S,T,A](indexedLens:proptics.IndexedLens_[I,S,T,F[A],A]):proptics.syntax.IndexedLensSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "setterSTAOptionB", "tail" : "(setter: Setter_[S, T, A, Option[B]]): SetterSTAOptionB[S, T, A, B]", "member" : "proptics.syntax.SetterSyntax.setterSTAOptionB", "link" : "proptics\/syntax\/AllSyntax.html#setterSTAOptionB[S,T,A,B](setter:proptics.Setter_[S,T,A,Option[B]]):proptics.syntax.SetterSTAOptionB[S,T,A,B]", "kind" : "implicit def"}, {"label" : "setterSTAAOps", "tail" : "(setter: Setter_[S, T, A, A]): SetterSTAAOps[S, T, A]", "member" : "proptics.syntax.SetterSyntax.setterSTAAOps", "link" : "proptics\/syntax\/AllSyntax.html#setterSTAAOps[S,T,A](setter:proptics.Setter_[S,T,A,A]):proptics.syntax.SetterSTAAOps[S,T,A]", "kind" : "implicit def"}, {"label" : "aTraversalSequenceOps", "tail" : "(aTraversal: ATraversal_[S, T, F[A], A]): ATraversalSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.ATraversalSyntax.aTraversalSequenceOps", "link" : "proptics\/syntax\/AllSyntax.html#aTraversalSequenceOps[F[_],I,S,T,A](aTraversal:proptics.ATraversal_[S,T,F[A],A]):proptics.syntax.ATraversalSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "aTraversalElementOps", "tail" : "(aTraversal: ATraversal_[S, T, A, A]): ATraversalElementOps[S, T, A]", "member" : "proptics.syntax.ATraversalSyntax.aTraversalElementOps", "link" : "proptics\/syntax\/AllSyntax.html#aTraversalElementOps[S,T,A](aTraversal:proptics.ATraversal_[S,T,A,A]):proptics.syntax.ATraversalElementOps[S,T,A]", "kind" : "implicit final def"}, {"label" : "traversalFSequenceOps", "tail" : "(traversal: Traversal_[S, T, F[A], A]): TraversalFSequenceOps[F, S, T, A]", "member" : "proptics.syntax.TraversalSyntax.traversalFSequenceOps", "link" : "proptics\/syntax\/AllSyntax.html#traversalFSequenceOps[F[_],S,T,A](traversal:proptics.Traversal_[S,T,F[A],A]):proptics.syntax.TraversalFSequenceOps[F,S,T,A]", "kind" : "implicit final def"}, {"label" : "traversalElementOps", "tail" : "(traversal: Traversal_[S, T, A, A]): TraversalElementOps[S, T, A]", "member" : "proptics.syntax.TraversalSyntax.traversalElementOps", "link" : "proptics\/syntax\/AllSyntax.html#traversalElementOps[S,T,A](traversal:proptics.Traversal_[S,T,A,A]):proptics.syntax.TraversalElementOps[S,T,A]", "kind" : "implicit final def"}, {"label" : "foldElementOps", "tail" : "(fold: Fold_[S, T, A, A]): FoldElementOps[S, T, A]", "member" : "proptics.syntax.FoldSyntax.foldElementOps", "link" : "proptics\/syntax\/AllSyntax.html#foldElementOps[S,T,A](fold:proptics.Fold_[S,T,A,A]):proptics.syntax.FoldElementOps[S,T,A]", "kind" : "implicit final def"}, {"label" : "aPrismSequenceOps", "tail" : "(aPrism: APrism_[S, T, F[A], A]): APrismSequenceOps[F, S, T, A]", "member" : "proptics.syntax.APrismSyntax.aPrismSequenceOps", "link" : "proptics\/syntax\/AllSyntax.html#aPrismSequenceOps[F[_],S,T,A](aPrism:proptics.APrism_[S,T,F[A],A]):proptics.syntax.APrismSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "prismSequenceOps", "tail" : "(prism: Prism_[S, T, F[A], A]): PrismSequenceOps[F, S, T, A]", "member" : "proptics.syntax.PrismSyntax.prismSequenceOps", "link" : "proptics\/syntax\/AllSyntax.html#prismSequenceOps[F[_],S,T,A](prism:proptics.Prism_[S,T,F[A],A]):proptics.syntax.PrismSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "aLensSequenceOps", "tail" : "(aLens: ALens_[S, T, F[A], A]): ALensSequenceOps[F, S, T, A]", "member" : "proptics.syntax.ALensSyntax.aLensSequenceOps", "link" : "proptics\/syntax\/AllSyntax.html#aLensSequenceOps[F[_],S,T,A](aLens:proptics.ALens_[S,T,F[A],A]):proptics.syntax.ALensSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "lensSequenceOps", "tail" : "(lens: Lens_[S, T, F[A], A]): LensSequenceOps[F, S, T, A]", "member" : "proptics.syntax.LensSyntax.lensSequenceOps", "link" : "proptics\/syntax\/AllSyntax.html#lensSequenceOps[F[_],S,T,A](lens:proptics.Lens_[S,T,F[A],A]):proptics.syntax.LensSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "anIsoSequenceOps", "tail" : "(iso: AnIso_[S, T, F[A], A]): AnIsoSequenceOps[F, S, T, A]", "member" : "proptics.syntax.AnIsoSyntax.anIsoSequenceOps", "link" : "proptics\/syntax\/AllSyntax.html#anIsoSequenceOps[F[_],S,T,A](iso:proptics.AnIso_[S,T,F[A],A]):proptics.syntax.AnIsoSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "isoFunctorOps", "tail" : "(iso: Iso[S, A]): IsoFunctorOps[S, A]", "member" : "proptics.syntax.IsoSyntax.isoFunctorOps", "link" : "proptics\/syntax\/AllSyntax.html#isoFunctorOps[S,A](iso:proptics.Iso[S,A]):proptics.syntax.IsoFunctorOps[S,A]", "kind" : "implicit def"}, {"label" : "isoSequenceOps", "tail" : "(iso: Iso_[S, T, F[A], A]): IsoSequenceOps[F, S, T, A]", "member" : "proptics.syntax.IsoSyntax.isoSequenceOps", "link" : "proptics\/syntax\/AllSyntax.html#isoSequenceOps[F[_],S,T,A](iso:proptics.Iso_[S,T,F[A],A]):proptics.syntax.IsoSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/AllSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/AllSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/AllSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/AllSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/AllSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/AllSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/AllSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/AllSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/AllSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/AllSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/AllSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/AllSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/AllSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/AllSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/AllSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/AllSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/AllSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/AllSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/AllSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.anIndexedLens", "shortDescription" : "", "object" : "proptics\/syntax\/package$$anIndexedLens$.html", "members_object" : [{"label" : "anIndexedLensSequenceOps", "tail" : "(anIndexedLens: AnIndexedLens_[I, S, T, F[A], A]): AnIndexedLensSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.AnIndexedLensSyntax.anIndexedLensSequenceOps", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#anIndexedLensSequenceOps[F[_],I,S,T,A](anIndexedLens:proptics.AnIndexedLens_[I,S,T,F[A],A]):proptics.syntax.AnIndexedLensSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$anIndexedLens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$anIndexedLens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.AnIndexedLensSequenceOps", "shortDescription" : "", "members_case class" : [{"label" : "sequence", "tail" : "(s: S)(ev: Applicative[F]): F[T]", "member" : "proptics.syntax.AnIndexedLensSequenceOps.sequence", "link" : "proptics\/syntax\/AnIndexedLensSequenceOps.html#sequence(s:S)(implicitev:cats.Applicative[F]):F[T]", "kind" : "def"}, {"member" : "proptics.syntax.AnIndexedLensSequenceOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/AnIndexedLensSequenceOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/AnIndexedLensSequenceOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/AnIndexedLensSequenceOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/AnIndexedLensSequenceOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/AnIndexedLensSequenceOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/AnIndexedLensSequenceOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/AnIndexedLensSequenceOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/AnIndexedLensSequenceOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.AnIndexedLensSyntax", "trait" : "proptics\/syntax\/AnIndexedLensSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "anIndexedLensSequenceOps", "tail" : "(anIndexedLens: AnIndexedLens_[I, S, T, F[A], A]): AnIndexedLensSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.AnIndexedLensSyntax.anIndexedLensSequenceOps", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#anIndexedLensSequenceOps[F[_],I,S,T,A](anIndexedLens:proptics.AnIndexedLens_[I,S,T,F[A],A]):proptics.syntax.AnIndexedLensSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/AnIndexedLensSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.anIso", "shortDescription" : "", "object" : "proptics\/syntax\/package$$anIso$.html", "members_object" : [{"label" : "anIsoSequenceOps", "tail" : "(iso: AnIso_[S, T, F[A], A]): AnIsoSequenceOps[F, S, T, A]", "member" : "proptics.syntax.AnIsoSyntax.anIsoSequenceOps", "link" : "proptics\/syntax\/package$$anIso$.html#anIsoSequenceOps[F[_],S,T,A](iso:proptics.AnIso_[S,T,F[A],A]):proptics.syntax.AnIsoSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$anIso$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$anIso$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$anIso$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$anIso$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$anIso$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$anIso$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$anIso$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$anIso$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$anIso$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$anIso$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$anIso$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$anIso$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$anIso$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$anIso$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$anIso$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$anIso$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$anIso$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$anIso$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$anIso$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.AnIsoSequenceOps", "shortDescription" : "", "members_case class" : [{"label" : "sequence", "tail" : "(s: S)(ev0: Applicative[F]): F[T]", "member" : "proptics.syntax.AnIsoSequenceOps.sequence", "link" : "proptics\/syntax\/AnIsoSequenceOps.html#sequence(s:S)(implicitev0:cats.Applicative[F]):F[T]", "kind" : "def"}, {"member" : "proptics.syntax.AnIsoSequenceOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/AnIsoSequenceOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/AnIsoSequenceOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/AnIsoSequenceOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/AnIsoSequenceOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/AnIsoSequenceOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/AnIsoSequenceOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/AnIsoSequenceOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/AnIsoSequenceOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.AnIsoSyntax", "trait" : "proptics\/syntax\/AnIsoSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "anIsoSequenceOps", "tail" : "(iso: AnIso_[S, T, F[A], A]): AnIsoSequenceOps[F, S, T, A]", "member" : "proptics.syntax.AnIsoSyntax.anIsoSequenceOps", "link" : "proptics\/syntax\/AnIsoSyntax.html#anIsoSequenceOps[F[_],S,T,A](iso:proptics.AnIso_[S,T,F[A],A]):proptics.syntax.AnIsoSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/AnIsoSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/AnIsoSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/AnIsoSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/AnIsoSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/AnIsoSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/AnIsoSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/AnIsoSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/AnIsoSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/AnIsoSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/AnIsoSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/AnIsoSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/AnIsoSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/AnIsoSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/AnIsoSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/AnIsoSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/AnIsoSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/AnIsoSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/AnIsoSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/AnIsoSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.aPrism", "shortDescription" : "", "object" : "proptics\/syntax\/package$$aPrism$.html", "members_object" : [{"label" : "aPrismSequenceOps", "tail" : "(aPrism: APrism_[S, T, F[A], A]): APrismSequenceOps[F, S, T, A]", "member" : "proptics.syntax.APrismSyntax.aPrismSequenceOps", "link" : "proptics\/syntax\/package$$aPrism$.html#aPrismSequenceOps[F[_],S,T,A](aPrism:proptics.APrism_[S,T,F[A],A]):proptics.syntax.APrismSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$aPrism$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$aPrism$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$aPrism$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$aPrism$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$aPrism$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$aPrism$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$aPrism$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$aPrism$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$aPrism$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$aPrism$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$aPrism$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$aPrism$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$aPrism$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$aPrism$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$aPrism$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$aPrism$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$aPrism$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$aPrism$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$aPrism$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.APrismSequenceOps", "shortDescription" : "", "members_case class" : [{"label" : "sequence", "tail" : "(s: S)(ev0: Applicative[F]): F[T]", "member" : "proptics.syntax.APrismSequenceOps.sequence", "link" : "proptics\/syntax\/APrismSequenceOps.html#sequence(s:S)(implicitev0:cats.Applicative[F]):F[T]", "kind" : "def"}, {"member" : "proptics.syntax.APrismSequenceOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/APrismSequenceOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/APrismSequenceOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/APrismSequenceOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/APrismSequenceOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/APrismSequenceOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/APrismSequenceOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/APrismSequenceOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/APrismSequenceOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.APrismSyntax", "trait" : "proptics\/syntax\/APrismSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "aPrismSequenceOps", "tail" : "(aPrism: APrism_[S, T, F[A], A]): APrismSequenceOps[F, S, T, A]", "member" : "proptics.syntax.APrismSyntax.aPrismSequenceOps", "link" : "proptics\/syntax\/APrismSyntax.html#aPrismSequenceOps[F[_],S,T,A](aPrism:proptics.APrism_[S,T,F[A],A]):proptics.syntax.APrismSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/APrismSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/APrismSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/APrismSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/APrismSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/APrismSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/APrismSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/APrismSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/APrismSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/APrismSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/APrismSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/APrismSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/APrismSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/APrismSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/APrismSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/APrismSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/APrismSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/APrismSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/APrismSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/APrismSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.at", "shortDescription" : "", "object" : "proptics\/syntax\/package$$at$.html", "members_object" : [{"label" : "atRemoveOps", "tail" : "(at: At[S, I, A]): AtRemoveOps[S, I, A]", "member" : "proptics.syntax.AtSyntax.atRemoveOps", "link" : "proptics\/syntax\/package$$at$.html#atRemoveOps[S,I,A](at:proptics.typeclass.At[S,I,A]):proptics.syntax.AtRemoveOps[S,I,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$at$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$at$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$at$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$at$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$at$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$at$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$at$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$at$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$at$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$at$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$at$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$at$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$at$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$at$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$at$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$at$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$at$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$at$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$at$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.aTraversal", "shortDescription" : "", "object" : "proptics\/syntax\/package$$aTraversal$.html", "members_object" : [{"label" : "aTraversalSequenceOps", "tail" : "(aTraversal: ATraversal_[S, T, F[A], A]): ATraversalSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.ATraversalSyntax.aTraversalSequenceOps", "link" : "proptics\/syntax\/package$$aTraversal$.html#aTraversalSequenceOps[F[_],I,S,T,A](aTraversal:proptics.ATraversal_[S,T,F[A],A]):proptics.syntax.ATraversalSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "aTraversalElementOps", "tail" : "(aTraversal: ATraversal_[S, T, A, A]): ATraversalElementOps[S, T, A]", "member" : "proptics.syntax.ATraversalSyntax.aTraversalElementOps", "link" : "proptics\/syntax\/package$$aTraversal$.html#aTraversalElementOps[S,T,A](aTraversal:proptics.ATraversal_[S,T,A,A]):proptics.syntax.ATraversalElementOps[S,T,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$aTraversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$aTraversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$aTraversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$aTraversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$aTraversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$aTraversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$aTraversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$aTraversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$aTraversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$aTraversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$aTraversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$aTraversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$aTraversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$aTraversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$aTraversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$aTraversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$aTraversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$aTraversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$aTraversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.ATraversalElementOps", "shortDescription" : "", "members_case class" : [{"label" : "dropWhile", "tail" : "(predicate: (A) => Boolean)(ev0: Applicative[[β$8$]IndexedStateT[Eval, Boolean, Boolean, β$8$]]): ATraversal_[S, T, A, A]", "member" : "proptics.syntax.ATraversalElementOps.dropWhile", "link" : "proptics\/syntax\/ATraversalElementOps.html#dropWhile(predicate:A=>Boolean)(implicitev0:cats.Applicative[[β$8$]cats.data.IndexedStateT[cats.Eval,Boolean,Boolean,β$8$]]):proptics.ATraversal_[S,T,A,A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(predicate: (A) => Boolean)(ev0: Applicative[[β$7$]IndexedStateT[Eval, Boolean, Boolean, β$7$]]): ATraversal_[S, T, A, A]", "member" : "proptics.syntax.ATraversalElementOps.takeWhile", "link" : "proptics\/syntax\/ATraversalElementOps.html#takeWhile(predicate:A=>Boolean)(implicitev0:cats.Applicative[[β$7$]cats.data.IndexedStateT[cats.Eval,Boolean,Boolean,β$7$]]):proptics.ATraversal_[S,T,A,A]", "kind" : "def"}, {"label" : "drop", "tail" : "(i: Int): ATraversal_[S, T, A, A]", "member" : "proptics.syntax.ATraversalElementOps.drop", "link" : "proptics\/syntax\/ATraversalElementOps.html#drop(i:Int):proptics.ATraversal_[S,T,A,A]", "kind" : "def"}, {"label" : "take", "tail" : "(i: Int): ATraversal_[S, T, A, A]", "member" : "proptics.syntax.ATraversalElementOps.take", "link" : "proptics\/syntax\/ATraversalElementOps.html#take(i:Int):proptics.ATraversal_[S,T,A,A]", "kind" : "def"}, {"label" : "filterByIndex", "tail" : "(predicate: (Int) => Boolean): ATraversal_[S, T, A, A]", "member" : "proptics.syntax.ATraversalElementOps.filterByIndex", "link" : "proptics\/syntax\/ATraversalElementOps.html#filterByIndex(predicate:Int=>Boolean):proptics.ATraversal_[S,T,A,A]", "kind" : "def"}, {"label" : "elementAt", "tail" : "(i: Int): ATraversal_[S, T, A, A]", "member" : "proptics.syntax.ATraversalElementOps.elementAt", "link" : "proptics\/syntax\/ATraversalElementOps.html#elementAt(i:Int):proptics.ATraversal_[S,T,A,A]", "kind" : "def"}, {"label" : "partsOf", "tail" : "(ev0: Sellable[[α$2$, β$3$](α$2$) => β$3$, [β$4$, γ$5$, ε$6$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, β$4$, γ$5$, Unit, ε$6$]]): Lens_[S, T, List[A], List[A]]", "member" : "proptics.syntax.ATraversalElementOps.partsOf", "link" : "proptics\/syntax\/ATraversalElementOps.html#partsOf(implicitev0:proptics.internal.Sellable[[α$2$,β$3$]α$2$=>β$3$,[β$4$,γ$5$,ε$6$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,β$4$,γ$5$,Unit,ε$6$]]):proptics.Lens_[S,T,List[A],List[A]]", "kind" : "def"}, {"member" : "proptics.syntax.ATraversalElementOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/ATraversalElementOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/ATraversalElementOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/ATraversalElementOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/ATraversalElementOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/ATraversalElementOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/ATraversalElementOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/ATraversalElementOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/ATraversalElementOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.ATraversalSequenceOps", "shortDescription" : "", "members_case class" : [{"label" : "sequence", "tail" : "(s: S)(ev0: Applicative[F]): F[T]", "member" : "proptics.syntax.ATraversalSequenceOps.sequence", "link" : "proptics\/syntax\/ATraversalSequenceOps.html#sequence(s:S)(implicitev0:cats.Applicative[F]):F[T]", "kind" : "def"}, {"member" : "proptics.syntax.ATraversalSequenceOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/ATraversalSequenceOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/ATraversalSequenceOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/ATraversalSequenceOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/ATraversalSequenceOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/ATraversalSequenceOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/ATraversalSequenceOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/ATraversalSequenceOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/ATraversalSequenceOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.ATraversalSyntax", "trait" : "proptics\/syntax\/ATraversalSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "aTraversalSequenceOps", "tail" : "(aTraversal: ATraversal_[S, T, F[A], A]): ATraversalSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.ATraversalSyntax.aTraversalSequenceOps", "link" : "proptics\/syntax\/ATraversalSyntax.html#aTraversalSequenceOps[F[_],I,S,T,A](aTraversal:proptics.ATraversal_[S,T,F[A],A]):proptics.syntax.ATraversalSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "aTraversalElementOps", "tail" : "(aTraversal: ATraversal_[S, T, A, A]): ATraversalElementOps[S, T, A]", "member" : "proptics.syntax.ATraversalSyntax.aTraversalElementOps", "link" : "proptics\/syntax\/ATraversalSyntax.html#aTraversalElementOps[S,T,A](aTraversal:proptics.ATraversal_[S,T,A,A]):proptics.syntax.ATraversalElementOps[S,T,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/ATraversalSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/ATraversalSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/ATraversalSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/ATraversalSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/ATraversalSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/ATraversalSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/ATraversalSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/ATraversalSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/ATraversalSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/ATraversalSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/ATraversalSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/ATraversalSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/ATraversalSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/ATraversalSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/ATraversalSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/ATraversalSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/ATraversalSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/ATraversalSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/ATraversalSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.AtRemoveOps", "shortDescription" : "", "members_case class" : [{"label" : "remove", "tail" : "(i: I)(s: S): S", "member" : "proptics.syntax.AtRemoveOps.remove", "link" : "proptics\/syntax\/AtRemoveOps.html#remove(i:I)(s:S):S", "kind" : "def"}, {"member" : "proptics.syntax.AtRemoveOps#<init>", "error" : "unsupported entity"}, {"label" : "at", "tail" : ": At[S, I, A]", "member" : "proptics.syntax.AtRemoveOps.at", "link" : "proptics\/syntax\/AtRemoveOps.html#at:proptics.typeclass.At[S,I,A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/AtRemoveOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/AtRemoveOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/AtRemoveOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/AtRemoveOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/AtRemoveOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/AtRemoveOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/AtRemoveOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/AtRemoveOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.AtSyntax", "trait" : "proptics\/syntax\/AtSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "atRemoveOps", "tail" : "(at: At[S, I, A]): AtRemoveOps[S, I, A]", "member" : "proptics.syntax.AtSyntax.atRemoveOps", "link" : "proptics\/syntax\/AtSyntax.html#atRemoveOps[S,I,A](at:proptics.typeclass.At[S,I,A]):proptics.syntax.AtRemoveOps[S,I,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/AtSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/AtSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/AtSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/AtSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/AtSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/AtSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/AtSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/AtSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/AtSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/AtSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/AtSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/AtSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/AtSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/AtSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/AtSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/AtSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/AtSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/AtSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/AtSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.costar", "shortDescription" : "", "object" : "proptics\/syntax\/package$$costar$.html", "members_object" : [{"label" : "costarOps", "tail" : "(costar: Costar[F, A, B]): CostarOps[F, A, B]", "member" : "proptics.syntax.CostarSyntax.costarOps", "link" : "proptics\/syntax\/package$$costar$.html#costarOps[F[_],A,B](costar:proptics.profunctor.Costar[F,A,B]):proptics.syntax.CostarOps[F,A,B]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$costar$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$costar$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$costar$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$costar$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$costar$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$costar$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$costar$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$costar$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$costar$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$costar$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$costar$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$costar$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$costar$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$costar$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$costar$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$costar$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$costar$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$costar$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$costar$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.CostarOps", "shortDescription" : "", "members_case class" : [{"label" : "hoist", "tail" : "(f: ~>[G, F]): Costar[G, A, B]", "member" : "proptics.syntax.CostarOps.hoist", "link" : "proptics\/syntax\/CostarOps.html#hoist[G[_]](f:G~>F):proptics.profunctor.Costar[G,A,B]", "kind" : "def"}, {"label" : "runCostar", "tail" : "(fa: F[A]): B", "member" : "proptics.syntax.CostarOps.runCostar", "link" : "proptics\/syntax\/CostarOps.html#runCostar(fa:F[A]):B", "kind" : "def"}, {"member" : "proptics.syntax.CostarOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/CostarOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/CostarOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/CostarOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/CostarOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/CostarOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/CostarOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/CostarOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/CostarOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.CostarSyntax", "trait" : "proptics\/syntax\/CostarSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "costarOps", "tail" : "(costar: Costar[F, A, B]): CostarOps[F, A, B]", "member" : "proptics.syntax.CostarSyntax.costarOps", "link" : "proptics\/syntax\/CostarSyntax.html#costarOps[F[_],A,B](costar:proptics.profunctor.Costar[F,A,B]):proptics.syntax.CostarOps[F,A,B]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/CostarSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/CostarSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/CostarSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/CostarSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/CostarSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/CostarSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/CostarSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/CostarSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/CostarSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/CostarSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/CostarSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/CostarSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/CostarSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/CostarSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/CostarSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/CostarSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/CostarSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/CostarSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/CostarSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.fold", "shortDescription" : "", "object" : "proptics\/syntax\/package$$fold$.html", "members_object" : [{"label" : "foldElementOps", "tail" : "(fold: Fold_[S, T, A, A]): FoldElementOps[S, T, A]", "member" : "proptics.syntax.FoldSyntax.foldElementOps", "link" : "proptics\/syntax\/package$$fold$.html#foldElementOps[S,T,A](fold:proptics.Fold_[S,T,A,A]):proptics.syntax.FoldElementOps[S,T,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$fold$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$fold$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$fold$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$fold$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$fold$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$fold$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$fold$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$fold$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$fold$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$fold$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$fold$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$fold$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$fold$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$fold$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$fold$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$fold$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$fold$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$fold$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$fold$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.foldableWithIndex", "shortDescription" : "", "object" : "proptics\/syntax\/package$$foldableWithIndex$.html", "members_object" : [{"label" : "foldableWithIndexOps", "tail" : "(fa: F[A]): FoldableWithIndexOps[F, A]", "member" : "proptics.syntax.FoldableWithIndexSyntax.foldableWithIndexOps", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#foldableWithIndexOps[F[_],A](fa:F[A]):proptics.syntax.FoldableWithIndexOps[F,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$foldableWithIndex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.FoldableWithIndexOps", "shortDescription" : "", "members_case class" : [{"label" : "foldRightWithIndex", "tail" : "(f: ((A, I), Eval[B]) => Eval[B])(lb: Eval[B])(ev: FoldableWithIndex[F, I]): Eval[B]", "member" : "proptics.syntax.FoldableWithIndexOps.foldRightWithIndex", "link" : "proptics\/syntax\/FoldableWithIndexOps.html#foldRightWithIndex[I,B](f:((A,I),cats.Eval[B])=>cats.Eval[B])(lb:cats.Eval[B])(implicitev:proptics.indices.FoldableWithIndex[F,I]):cats.Eval[B]", "kind" : "def"}, {"label" : "foldLeftWithIndex", "tail" : "(f: (B, (A, I)) => B)(b: B)(ev: FoldableWithIndex[F, I]): B", "member" : "proptics.syntax.FoldableWithIndexOps.foldLeftWithIndex", "link" : "proptics\/syntax\/FoldableWithIndexOps.html#foldLeftWithIndex[I,B](f:(B,(A,I))=>B)(b:B)(implicitev:proptics.indices.FoldableWithIndex[F,I]):B", "kind" : "def"}, {"label" : "foldMapWithIndex", "tail" : "(f: (A, I) => B)(arg0: Monoid[B], ev: FoldableWithIndex[F, I]): B", "member" : "proptics.syntax.FoldableWithIndexOps.foldMapWithIndex", "link" : "proptics\/syntax\/FoldableWithIndexOps.html#foldMapWithIndex[I,B](f:(A,I)=>B)(implicitevidence$1:cats.Monoid[B],implicitev:proptics.indices.FoldableWithIndex[F,I]):B", "kind" : "def"}, {"member" : "proptics.syntax.FoldableWithIndexOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/FoldableWithIndexOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/FoldableWithIndexOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/FoldableWithIndexOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/FoldableWithIndexOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/FoldableWithIndexOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/FoldableWithIndexOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/FoldableWithIndexOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/FoldableWithIndexOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.FoldableWithIndexSyntax", "trait" : "proptics\/syntax\/FoldableWithIndexSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "foldableWithIndexOps", "tail" : "(fa: F[A]): FoldableWithIndexOps[F, A]", "member" : "proptics.syntax.FoldableWithIndexSyntax.foldableWithIndexOps", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#foldableWithIndexOps[F[_],A](fa:F[A]):proptics.syntax.FoldableWithIndexOps[F,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/FoldableWithIndexSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.FoldElementOps", "shortDescription" : "", "members_case class" : [{"label" : "dropWhile", "tail" : "(predicate: (A) => Boolean): Fold_[S, T, A, A]", "member" : "proptics.syntax.FoldElementOps.dropWhile", "link" : "proptics\/syntax\/FoldElementOps.html#dropWhile(predicate:A=>Boolean):proptics.Fold_[S,T,A,A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(predicate: (A) => Boolean): Fold_[S, T, A, A]", "member" : "proptics.syntax.FoldElementOps.takeWhile", "link" : "proptics\/syntax\/FoldElementOps.html#takeWhile(predicate:A=>Boolean):proptics.Fold_[S,T,A,A]", "kind" : "def"}, {"label" : "drop", "tail" : "(i: Int): Fold_[S, T, A, A]", "member" : "proptics.syntax.FoldElementOps.drop", "link" : "proptics\/syntax\/FoldElementOps.html#drop(i:Int):proptics.Fold_[S,T,A,A]", "kind" : "def"}, {"label" : "take", "tail" : "(i: Int): Fold_[S, T, A, A]", "member" : "proptics.syntax.FoldElementOps.take", "link" : "proptics\/syntax\/FoldElementOps.html#take(i:Int):proptics.Fold_[S,T,A,A]", "kind" : "def"}, {"label" : "filterByIndex", "tail" : "(predicate: (Int) => Boolean): Fold_[S, T, A, A]", "member" : "proptics.syntax.FoldElementOps.filterByIndex", "link" : "proptics\/syntax\/FoldElementOps.html#filterByIndex(predicate:Int=>Boolean):proptics.Fold_[S,T,A,A]", "kind" : "def"}, {"label" : "elementAt", "tail" : "(i: Int): Fold_[S, T, A, A]", "member" : "proptics.syntax.FoldElementOps.elementAt", "link" : "proptics\/syntax\/FoldElementOps.html#elementAt(i:Int):proptics.Fold_[S,T,A,A]", "kind" : "def"}, {"member" : "proptics.syntax.FoldElementOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/FoldElementOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/FoldElementOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/FoldElementOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/FoldElementOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/FoldElementOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/FoldElementOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/FoldElementOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/FoldElementOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.FoldSyntax", "trait" : "proptics\/syntax\/FoldSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "foldElementOps", "tail" : "(fold: Fold_[S, T, A, A]): FoldElementOps[S, T, A]", "member" : "proptics.syntax.FoldSyntax.foldElementOps", "link" : "proptics\/syntax\/FoldSyntax.html#foldElementOps[S,T,A](fold:proptics.Fold_[S,T,A,A]):proptics.syntax.FoldElementOps[S,T,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/FoldSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/FoldSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/FoldSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/FoldSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/FoldSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/FoldSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/FoldSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/FoldSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/FoldSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/FoldSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/FoldSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/FoldSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/FoldSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/FoldSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/FoldSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/FoldSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/FoldSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/FoldSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/FoldSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.function", "shortDescription" : "", "object" : "proptics\/syntax\/package$$function$.html", "members_object" : [{"label" : "functionFlippedApply", "tail" : "(a: A): FunctionFlippedApply[A]", "member" : "proptics.syntax.FunctionSyntax.functionFlippedApply", "link" : "proptics\/syntax\/package$$function$.html#functionFlippedApply[A](a:A):proptics.syntax.FunctionFlippedApply[A]", "kind" : "implicit final def"}, {"label" : "function2FlipOps", "tail" : "(f: (A) => (B) => C): Function2FlipOps[A, B, C]", "member" : "proptics.syntax.FunctionSyntax.function2FlipOps", "link" : "proptics\/syntax\/package$$function$.html#function2FlipOps[A,B,C](f:A=>(B=>C)):proptics.syntax.Function2FlipOps[A,B,C]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$function$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$function$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$function$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$function$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$function$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$function$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$function$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$function$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$function$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$function$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$function$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$function$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$function$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$function$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$function$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$function$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$function$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$function$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$function$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.Function2FlipOps", "shortDescription" : "", "members_case class" : [{"label" : "uncurried", "tail" : "(): (A, B) => C", "member" : "proptics.syntax.Function2FlipOps.uncurried", "link" : "proptics\/syntax\/Function2FlipOps.html#uncurried:(A,B)=>C", "kind" : "def"}, {"label" : "flip", "tail" : "(): (B) => (A) => C", "member" : "proptics.syntax.Function2FlipOps.flip", "link" : "proptics\/syntax\/Function2FlipOps.html#flip:B=>(A=>C)", "kind" : "def"}, {"member" : "proptics.syntax.Function2FlipOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/Function2FlipOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/Function2FlipOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/Function2FlipOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/Function2FlipOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/Function2FlipOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/Function2FlipOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/Function2FlipOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/Function2FlipOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.FunctionFlippedApply", "shortDescription" : "", "members_case class" : [{"label" : "&", "tail" : "(f: (A) => B): B", "member" : "proptics.syntax.FunctionFlippedApply.&", "link" : "proptics\/syntax\/FunctionFlippedApply.html#&[B](f:A=>B):B", "kind" : "def"}, {"label" : "applyFlipped", "tail" : "(f: (A) => B): B", "member" : "proptics.syntax.FunctionFlippedApply.applyFlipped", "link" : "proptics\/syntax\/FunctionFlippedApply.html#applyFlipped[B](f:A=>B):B", "kind" : "def"}, {"member" : "proptics.syntax.FunctionFlippedApply#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/FunctionFlippedApply.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/FunctionFlippedApply.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/FunctionFlippedApply.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/FunctionFlippedApply.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/FunctionFlippedApply.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/FunctionFlippedApply.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/FunctionFlippedApply.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/FunctionFlippedApply.html", "kind" : "case class"}, {"name" : "proptics.syntax.FunctionSyntax", "trait" : "proptics\/syntax\/FunctionSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "functionFlippedApply", "tail" : "(a: A): FunctionFlippedApply[A]", "member" : "proptics.syntax.FunctionSyntax.functionFlippedApply", "link" : "proptics\/syntax\/FunctionSyntax.html#functionFlippedApply[A](a:A):proptics.syntax.FunctionFlippedApply[A]", "kind" : "implicit final def"}, {"label" : "function2FlipOps", "tail" : "(f: (A) => (B) => C): Function2FlipOps[A, B, C]", "member" : "proptics.syntax.FunctionSyntax.function2FlipOps", "link" : "proptics\/syntax\/FunctionSyntax.html#function2FlipOps[A,B,C](f:A=>(B=>C)):proptics.syntax.Function2FlipOps[A,B,C]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/FunctionSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/FunctionSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/FunctionSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/FunctionSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/FunctionSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/FunctionSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/FunctionSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/FunctionSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/FunctionSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/FunctionSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/FunctionSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/FunctionSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/FunctionSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/FunctionSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/FunctionSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/FunctionSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/FunctionSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/FunctionSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/FunctionSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.functorWithIndex", "shortDescription" : "", "object" : "proptics\/syntax\/package$$functorWithIndex$.html", "members_object" : [{"label" : "functorWithIndexOps", "tail" : "(fa: F[A]): FunctorWithIndexOps[F, A]", "member" : "proptics.syntax.FunctorWithIndexSyntax.functorWithIndexOps", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#functorWithIndexOps[F[_],A](fa:F[A]):proptics.syntax.FunctorWithIndexOps[F,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$functorWithIndex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$functorWithIndex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.FunctorWithIndexOps", "shortDescription" : "", "members_case class" : [{"label" : "mapWithIndex", "tail" : "(f: (A, I) => B)(ev: FunctorWithIndex[F, I]): F[B]", "member" : "proptics.syntax.FunctorWithIndexOps.mapWithIndex", "link" : "proptics\/syntax\/FunctorWithIndexOps.html#mapWithIndex[I,B](f:(A,I)=>B)(implicitev:proptics.indices.FunctorWithIndex[F,I]):F[B]", "kind" : "def"}, {"member" : "proptics.syntax.FunctorWithIndexOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/FunctorWithIndexOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/FunctorWithIndexOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/FunctorWithIndexOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/FunctorWithIndexOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/FunctorWithIndexOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/FunctorWithIndexOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/FunctorWithIndexOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/FunctorWithIndexOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.FunctorWithIndexSyntax", "trait" : "proptics\/syntax\/FunctorWithIndexSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "functorWithIndexOps", "tail" : "(fa: F[A]): FunctorWithIndexOps[F, A]", "member" : "proptics.syntax.FunctorWithIndexSyntax.functorWithIndexOps", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#functorWithIndexOps[F[_],A](fa:F[A]):proptics.syntax.FunctorWithIndexOps[F,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/FunctorWithIndexSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.indexedFold", "shortDescription" : "", "object" : "proptics\/syntax\/package$$indexedFold$.html", "members_object" : [{"label" : "indexedFoldOps", "tail" : "(indexedFold: IndexedFold_[I, S, T, A, A]): IndexedFoldsOps[I, S, T, A]", "member" : "proptics.syntax.IndexedFoldSyntax.indexedFoldOps", "link" : "proptics\/syntax\/package$$indexedFold$.html#indexedFoldOps[I,S,T,A](indexedFold:proptics.IndexedFold_[I,S,T,A,A]):proptics.syntax.IndexedFoldsOps[I,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$indexedFold$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$indexedFold$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$indexedFold$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$indexedFold$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$indexedFold$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$indexedFold$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$indexedFold$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$indexedFold$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$indexedFold$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$indexedFold$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$indexedFold$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$indexedFold$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$indexedFold$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$indexedFold$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$indexedFold$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$indexedFold$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$indexedFold$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$indexedFold$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$indexedFold$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.IndexedFoldsOps", "shortDescription" : "", "members_case class" : [{"label" : "filter", "tail" : "(predicate: ((A, I)) => Boolean): IndexedFold_[I, S, T, A, A]", "member" : "proptics.syntax.IndexedFoldsOps.filter", "link" : "proptics\/syntax\/IndexedFoldsOps.html#filter(predicate:((A,I))=>Boolean):proptics.IndexedFold_[I,S,T,A,A]", "kind" : "def"}, {"label" : "filterByIndex", "tail" : "(predicate: (I) => Boolean): IndexedFold_[I, S, T, A, A]", "member" : "proptics.syntax.IndexedFoldsOps.filterByIndex", "link" : "proptics\/syntax\/IndexedFoldsOps.html#filterByIndex(predicate:I=>Boolean):proptics.IndexedFold_[I,S,T,A,A]", "kind" : "def"}, {"label" : "elementAt", "tail" : "(i: I)(ev: Eq[I]): Fold_[S, T, A, A]", "member" : "proptics.syntax.IndexedFoldsOps.elementAt", "link" : "proptics\/syntax\/IndexedFoldsOps.html#elementAt(i:I)(implicitev:cats.Eq[I]):proptics.Fold_[S,T,A,A]", "kind" : "def"}, {"member" : "proptics.syntax.IndexedFoldsOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/IndexedFoldsOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/IndexedFoldsOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/IndexedFoldsOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/IndexedFoldsOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/IndexedFoldsOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/IndexedFoldsOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/IndexedFoldsOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/IndexedFoldsOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.IndexedFoldSyntax", "trait" : "proptics\/syntax\/IndexedFoldSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "indexedFoldOps", "tail" : "(indexedFold: IndexedFold_[I, S, T, A, A]): IndexedFoldsOps[I, S, T, A]", "member" : "proptics.syntax.IndexedFoldSyntax.indexedFoldOps", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#indexedFoldOps[I,S,T,A](indexedFold:proptics.IndexedFold_[I,S,T,A,A]):proptics.syntax.IndexedFoldsOps[I,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/IndexedFoldSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/IndexedFoldSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.indexedLens", "shortDescription" : "", "object" : "proptics\/syntax\/package$$indexedLens$.html", "members_object" : [{"label" : "indexedLensSequenceOps", "tail" : "(indexedLens: IndexedLens_[I, S, T, F[A], A]): IndexedLensSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.IndexedLensSyntax.indexedLensSequenceOps", "link" : "proptics\/syntax\/package$$indexedLens$.html#indexedLensSequenceOps[F[_],I,S,T,A](indexedLens:proptics.IndexedLens_[I,S,T,F[A],A]):proptics.syntax.IndexedLensSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$indexedLens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$indexedLens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$indexedLens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$indexedLens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$indexedLens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$indexedLens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$indexedLens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$indexedLens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$indexedLens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$indexedLens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$indexedLens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$indexedLens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$indexedLens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$indexedLens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$indexedLens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$indexedLens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$indexedLens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$indexedLens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$indexedLens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.IndexedLensSequenceOps", "shortDescription" : "", "members_case class" : [{"label" : "sequence", "tail" : "(s: S)(ev: Applicative[F]): F[T]", "member" : "proptics.syntax.IndexedLensSequenceOps.sequence", "link" : "proptics\/syntax\/IndexedLensSequenceOps.html#sequence(s:S)(implicitev:cats.Applicative[F]):F[T]", "kind" : "def"}, {"member" : "proptics.syntax.IndexedLensSequenceOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/IndexedLensSequenceOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/IndexedLensSequenceOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/IndexedLensSequenceOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/IndexedLensSequenceOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/IndexedLensSequenceOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/IndexedLensSequenceOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/IndexedLensSequenceOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/IndexedLensSequenceOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.IndexedLensSyntax", "trait" : "proptics\/syntax\/IndexedLensSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "indexedLensSequenceOps", "tail" : "(indexedLens: IndexedLens_[I, S, T, F[A], A]): IndexedLensSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.IndexedLensSyntax.indexedLensSequenceOps", "link" : "proptics\/syntax\/IndexedLensSyntax.html#indexedLensSequenceOps[F[_],I,S,T,A](indexedLens:proptics.IndexedLens_[I,S,T,F[A],A]):proptics.syntax.IndexedLensSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/IndexedLensSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/IndexedLensSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/IndexedLensSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/IndexedLensSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/IndexedLensSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/IndexedLensSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/IndexedLensSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/IndexedLensSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/IndexedLensSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/IndexedLensSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/IndexedLensSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/IndexedLensSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/IndexedLensSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/IndexedLensSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/IndexedLensSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/IndexedLensSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/IndexedLensSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/IndexedLensSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/IndexedLensSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.indexedTraversal", "shortDescription" : "", "object" : "proptics\/syntax\/package$$indexedTraversal$.html", "members_object" : [{"label" : "indexedTraversalSequenceOps", "tail" : "(indexedTraversal: IndexedTraversal_[I, S, T, F[A], A]): IndexedTraversalSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.IndexedTraversalSyntax.indexedTraversalSequenceOps", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#indexedTraversalSequenceOps[F[_],I,S,T,A](indexedTraversal:proptics.IndexedTraversal_[I,S,T,F[A],A]):proptics.syntax.IndexedTraversalSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "indexedTraversalOps", "tail" : "(indexedTraversal: IndexedTraversal_[I, S, T, A, A]): IndexedTraversalOps[I, S, T, A]", "member" : "proptics.syntax.IndexedTraversalSyntax.indexedTraversalOps", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#indexedTraversalOps[I,S,T,A](indexedTraversal:proptics.IndexedTraversal_[I,S,T,A,A]):proptics.syntax.IndexedTraversalOps[I,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$indexedTraversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$indexedTraversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.IndexedTraversalOps", "shortDescription" : "", "members_case class" : [{"label" : "dropWhileWithIndex", "tail" : "(predicate: ((A, I)) => Boolean)(ev0: Applicative[[β$7$]IndexedStateT[Eval, Boolean, Boolean, β$7$]]): IndexedTraversal_[I, S, T, A, A]", "member" : "proptics.syntax.IndexedTraversalOps.dropWhileWithIndex", "link" : "proptics\/syntax\/IndexedTraversalOps.html#dropWhileWithIndex(predicate:((A,I))=>Boolean)(implicitev0:cats.Applicative[[β$7$]cats.data.IndexedStateT[cats.Eval,Boolean,Boolean,β$7$]]):proptics.IndexedTraversal_[I,S,T,A,A]", "kind" : "def"}, {"label" : "takeWhileWithIndex", "tail" : "(predicate: ((A, I)) => Boolean)(ev0: Applicative[[β$6$]IndexedStateT[Eval, Boolean, Boolean, β$6$]]): IndexedTraversal_[I, S, T, A, A]", "member" : "proptics.syntax.IndexedTraversalOps.takeWhileWithIndex", "link" : "proptics\/syntax\/IndexedTraversalOps.html#takeWhileWithIndex(predicate:((A,I))=>Boolean)(implicitev0:cats.Applicative[[β$6$]cats.data.IndexedStateT[cats.Eval,Boolean,Boolean,β$6$]]):proptics.IndexedTraversal_[I,S,T,A,A]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(predicate: (A) => Boolean)(ev0: Applicative[[β$5$]IndexedStateT[Eval, Boolean, Boolean, β$5$]]): IndexedTraversal_[I, S, T, A, A]", "member" : "proptics.syntax.IndexedTraversalOps.dropWhile", "link" : "proptics\/syntax\/IndexedTraversalOps.html#dropWhile(predicate:A=>Boolean)(implicitev0:cats.Applicative[[β$5$]cats.data.IndexedStateT[cats.Eval,Boolean,Boolean,β$5$]]):proptics.IndexedTraversal_[I,S,T,A,A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(predicate: (A) => Boolean)(ev0: Applicative[[β$4$]IndexedStateT[Eval, Boolean, Boolean, β$4$]]): IndexedTraversal_[I, S, T, A, A]", "member" : "proptics.syntax.IndexedTraversalOps.takeWhile", "link" : "proptics\/syntax\/IndexedTraversalOps.html#takeWhile(predicate:A=>Boolean)(implicitev0:cats.Applicative[[β$4$]cats.data.IndexedStateT[cats.Eval,Boolean,Boolean,β$4$]]):proptics.IndexedTraversal_[I,S,T,A,A]", "kind" : "def"}, {"label" : "filter", "tail" : "(predicate: ((A, I)) => Boolean): IndexedTraversal_[I, S, T, A, A]", "member" : "proptics.syntax.IndexedTraversalOps.filter", "link" : "proptics\/syntax\/IndexedTraversalOps.html#filter(predicate:((A,I))=>Boolean):proptics.IndexedTraversal_[I,S,T,A,A]", "kind" : "def"}, {"label" : "filterByIndex", "tail" : "(predicate: (I) => Boolean): IndexedTraversal_[I, S, T, A, A]", "member" : "proptics.syntax.IndexedTraversalOps.filterByIndex", "link" : "proptics\/syntax\/IndexedTraversalOps.html#filterByIndex(predicate:I=>Boolean):proptics.IndexedTraversal_[I,S,T,A,A]", "kind" : "def"}, {"label" : "elementAt", "tail" : "(i: I)(ev: Eq[I]): Traversal_[S, T, A, A]", "member" : "proptics.syntax.IndexedTraversalOps.elementAt", "link" : "proptics\/syntax\/IndexedTraversalOps.html#elementAt(i:I)(implicitev:cats.Eq[I]):proptics.Traversal_[S,T,A,A]", "kind" : "def"}, {"member" : "proptics.syntax.IndexedTraversalOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/IndexedTraversalOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/IndexedTraversalOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/IndexedTraversalOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/IndexedTraversalOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/IndexedTraversalOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/IndexedTraversalOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/IndexedTraversalOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/IndexedTraversalOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.IndexedTraversalSequenceOps", "shortDescription" : "", "members_case class" : [{"label" : "sequence", "tail" : "(s: S)(ev: Applicative[F]): F[T]", "member" : "proptics.syntax.IndexedTraversalSequenceOps.sequence", "link" : "proptics\/syntax\/IndexedTraversalSequenceOps.html#sequence(s:S)(implicitev:cats.Applicative[F]):F[T]", "kind" : "def"}, {"member" : "proptics.syntax.IndexedTraversalSequenceOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/IndexedTraversalSequenceOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/IndexedTraversalSequenceOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/IndexedTraversalSequenceOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/IndexedTraversalSequenceOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/IndexedTraversalSequenceOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/IndexedTraversalSequenceOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/IndexedTraversalSequenceOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/IndexedTraversalSequenceOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.IndexedTraversalSyntax", "trait" : "proptics\/syntax\/IndexedTraversalSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "indexedTraversalSequenceOps", "tail" : "(indexedTraversal: IndexedTraversal_[I, S, T, F[A], A]): IndexedTraversalSequenceOps[F, I, S, T, A]", "member" : "proptics.syntax.IndexedTraversalSyntax.indexedTraversalSequenceOps", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#indexedTraversalSequenceOps[F[_],I,S,T,A](indexedTraversal:proptics.IndexedTraversal_[I,S,T,F[A],A]):proptics.syntax.IndexedTraversalSequenceOps[F,I,S,T,A]", "kind" : "implicit def"}, {"label" : "indexedTraversalOps", "tail" : "(indexedTraversal: IndexedTraversal_[I, S, T, A, A]): IndexedTraversalOps[I, S, T, A]", "member" : "proptics.syntax.IndexedTraversalSyntax.indexedTraversalOps", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#indexedTraversalOps[I,S,T,A](indexedTraversal:proptics.IndexedTraversal_[I,S,T,A,A]):proptics.syntax.IndexedTraversalOps[I,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/IndexedTraversalSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.iso", "shortDescription" : "", "object" : "proptics\/syntax\/package$$iso$.html", "members_object" : [{"label" : "isoFunctorOps", "tail" : "(iso: Iso[S, A]): IsoFunctorOps[S, A]", "member" : "proptics.syntax.IsoSyntax.isoFunctorOps", "link" : "proptics\/syntax\/package$$iso$.html#isoFunctorOps[S,A](iso:proptics.Iso[S,A]):proptics.syntax.IsoFunctorOps[S,A]", "kind" : "implicit def"}, {"label" : "isoSequenceOps", "tail" : "(iso: Iso_[S, T, F[A], A]): IsoSequenceOps[F, S, T, A]", "member" : "proptics.syntax.IsoSyntax.isoSequenceOps", "link" : "proptics\/syntax\/package$$iso$.html#isoSequenceOps[F[_],S,T,A](iso:proptics.Iso_[S,T,F[A],A]):proptics.syntax.IsoSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$iso$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$iso$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$iso$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$iso$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$iso$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$iso$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$iso$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$iso$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$iso$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$iso$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$iso$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$iso$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$iso$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$iso$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$iso$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$iso$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$iso$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$iso$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$iso$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.IsoFunctorOps", "shortDescription" : "", "members_case class" : [{"label" : "contramap", "tail" : "(arg0: Contravariant[F]): Iso[F[A], F[S]]", "member" : "proptics.syntax.IsoFunctorOps.contramap", "link" : "proptics\/syntax\/IsoFunctorOps.html#contramap[F[_]](implicitevidence$3:cats.Contravariant[F]):proptics.Iso[F[A],F[S]]", "kind" : "def"}, {"label" : "bimap", "tail" : "(arg0: Bifunctor[F]): Iso[F[S, S], F[A, A]]", "member" : "proptics.syntax.IsoFunctorOps.bimap", "link" : "proptics\/syntax\/IsoFunctorOps.html#bimap[F[_,_]](implicitevidence$2:cats.Bifunctor[F]):proptics.Iso[F[S,S],F[A,A]]", "kind" : "def"}, {"label" : "map", "tail" : "(arg0: Functor[F]): Iso[F[S], F[A]]", "member" : "proptics.syntax.IsoFunctorOps.map", "link" : "proptics\/syntax\/IsoFunctorOps.html#map[F[_]](implicitevidence$1:cats.Functor[F]):proptics.Iso[F[S],F[A]]", "kind" : "def"}, {"member" : "proptics.syntax.IsoFunctorOps#<init>", "error" : "unsupported entity"}, {"label" : "iso", "tail" : ": Iso[S, A]", "member" : "proptics.syntax.IsoFunctorOps.iso", "link" : "proptics\/syntax\/IsoFunctorOps.html#iso:proptics.Iso[S,A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/IsoFunctorOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/IsoFunctorOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/IsoFunctorOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/IsoFunctorOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/IsoFunctorOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/IsoFunctorOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/IsoFunctorOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/IsoFunctorOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.IsoSequenceOps", "shortDescription" : "", "members_case class" : [{"label" : "sequence", "tail" : "(s: S)(ev: Applicative[F]): F[T]", "member" : "proptics.syntax.IsoSequenceOps.sequence", "link" : "proptics\/syntax\/IsoSequenceOps.html#sequence(s:S)(implicitev:cats.Applicative[F]):F[T]", "kind" : "def"}, {"member" : "proptics.syntax.IsoSequenceOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/IsoSequenceOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/IsoSequenceOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/IsoSequenceOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/IsoSequenceOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/IsoSequenceOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/IsoSequenceOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/IsoSequenceOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/IsoSequenceOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.IsoSyntax", "trait" : "proptics\/syntax\/IsoSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "isoFunctorOps", "tail" : "(iso: Iso[S, A]): IsoFunctorOps[S, A]", "member" : "proptics.syntax.IsoSyntax.isoFunctorOps", "link" : "proptics\/syntax\/IsoSyntax.html#isoFunctorOps[S,A](iso:proptics.Iso[S,A]):proptics.syntax.IsoFunctorOps[S,A]", "kind" : "implicit def"}, {"label" : "isoSequenceOps", "tail" : "(iso: Iso_[S, T, F[A], A]): IsoSequenceOps[F, S, T, A]", "member" : "proptics.syntax.IsoSyntax.isoSequenceOps", "link" : "proptics\/syntax\/IsoSyntax.html#isoSequenceOps[F[_],S,T,A](iso:proptics.Iso_[S,T,F[A],A]):proptics.syntax.IsoSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/IsoSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/IsoSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/IsoSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/IsoSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/IsoSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/IsoSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/IsoSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/IsoSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/IsoSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/IsoSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/IsoSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/IsoSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/IsoSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/IsoSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/IsoSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/IsoSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/IsoSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/IsoSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/IsoSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.lens", "shortDescription" : "", "object" : "proptics\/syntax\/package$$lens$.html", "members_object" : [{"label" : "lensSequenceOps", "tail" : "(lens: Lens_[S, T, F[A], A]): LensSequenceOps[F, S, T, A]", "member" : "proptics.syntax.LensSyntax.lensSequenceOps", "link" : "proptics\/syntax\/package$$lens$.html#lensSequenceOps[F[_],S,T,A](lens:proptics.Lens_[S,T,F[A],A]):proptics.syntax.LensSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$lens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$lens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$lens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$lens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$lens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$lens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$lens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$lens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$lens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$lens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$lens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$lens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$lens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$lens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$lens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$lens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$lens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$lens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$lens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.LensSequenceOps", "shortDescription" : "", "members_case class" : [{"label" : "sequence", "tail" : "(s: S)(ev: Functor[F]): F[T]", "member" : "proptics.syntax.LensSequenceOps.sequence", "link" : "proptics\/syntax\/LensSequenceOps.html#sequence(s:S)(implicitev:cats.Functor[F]):F[T]", "kind" : "def"}, {"member" : "proptics.syntax.LensSequenceOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/LensSequenceOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/LensSequenceOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/LensSequenceOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/LensSequenceOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/LensSequenceOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/LensSequenceOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/LensSequenceOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/LensSequenceOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.LensSyntax", "trait" : "proptics\/syntax\/LensSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "lensSequenceOps", "tail" : "(lens: Lens_[S, T, F[A], A]): LensSequenceOps[F, S, T, A]", "member" : "proptics.syntax.LensSyntax.lensSequenceOps", "link" : "proptics\/syntax\/LensSyntax.html#lensSequenceOps[F[_],S,T,A](lens:proptics.Lens_[S,T,F[A],A]):proptics.syntax.LensSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/LensSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/LensSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/LensSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/LensSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/LensSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/LensSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/LensSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/LensSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/LensSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/LensSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/LensSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/LensSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/LensSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/LensSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/LensSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/LensSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/LensSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/LensSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/LensSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.prism", "shortDescription" : "", "object" : "proptics\/syntax\/package$$prism$.html", "members_object" : [{"label" : "prismSequenceOps", "tail" : "(prism: Prism_[S, T, F[A], A]): PrismSequenceOps[F, S, T, A]", "member" : "proptics.syntax.PrismSyntax.prismSequenceOps", "link" : "proptics\/syntax\/package$$prism$.html#prismSequenceOps[F[_],S,T,A](prism:proptics.Prism_[S,T,F[A],A]):proptics.syntax.PrismSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$prism$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$prism$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$prism$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$prism$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$prism$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$prism$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$prism$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$prism$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$prism$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$prism$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$prism$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$prism$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$prism$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$prism$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$prism$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$prism$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$prism$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$prism$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$prism$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.PrismSequenceOps", "shortDescription" : "", "members_case class" : [{"label" : "sequence", "tail" : "(s: S)(ev: Applicative[F]): F[T]", "member" : "proptics.syntax.PrismSequenceOps.sequence", "link" : "proptics\/syntax\/PrismSequenceOps.html#sequence(s:S)(implicitev:cats.Applicative[F]):F[T]", "kind" : "def"}, {"member" : "proptics.syntax.PrismSequenceOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/PrismSequenceOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/PrismSequenceOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/PrismSequenceOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/PrismSequenceOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/PrismSequenceOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/PrismSequenceOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/PrismSequenceOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/PrismSequenceOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.PrismSyntax", "trait" : "proptics\/syntax\/PrismSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "prismSequenceOps", "tail" : "(prism: Prism_[S, T, F[A], A]): PrismSequenceOps[F, S, T, A]", "member" : "proptics.syntax.PrismSyntax.prismSequenceOps", "link" : "proptics\/syntax\/PrismSyntax.html#prismSequenceOps[F[_],S,T,A](prism:proptics.Prism_[S,T,F[A],A]):proptics.syntax.PrismSequenceOps[F,S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/PrismSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/PrismSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/PrismSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/PrismSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/PrismSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/PrismSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/PrismSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/PrismSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/PrismSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/PrismSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/PrismSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/PrismSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/PrismSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/PrismSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/PrismSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/PrismSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/PrismSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/PrismSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/PrismSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.setter", "shortDescription" : "", "object" : "proptics\/syntax\/package$$setter$.html", "members_object" : [{"label" : "setterSTAOptionB", "tail" : "(setter: Setter_[S, T, A, Option[B]]): SetterSTAOptionB[S, T, A, B]", "member" : "proptics.syntax.SetterSyntax.setterSTAOptionB", "link" : "proptics\/syntax\/package$$setter$.html#setterSTAOptionB[S,T,A,B](setter:proptics.Setter_[S,T,A,Option[B]]):proptics.syntax.SetterSTAOptionB[S,T,A,B]", "kind" : "implicit def"}, {"label" : "setterSTAAOps", "tail" : "(setter: Setter_[S, T, A, A]): SetterSTAAOps[S, T, A]", "member" : "proptics.syntax.SetterSyntax.setterSTAAOps", "link" : "proptics\/syntax\/package$$setter$.html#setterSTAAOps[S,T,A](setter:proptics.Setter_[S,T,A,A]):proptics.syntax.SetterSTAAOps[S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$setter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$setter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$setter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$setter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$setter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$setter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$setter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$setter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$setter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$setter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$setter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$setter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$setter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$setter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$setter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$setter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$setter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$setter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$setter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.SetterSTAAOps", "shortDescription" : "", "members_case class" : [{"label" : "appendOver", "tail" : "(s: S)(a: A)(ev0: Semigroup[A]): T", "member" : "proptics.syntax.SetterSTAAOps.appendOver", "link" : "proptics\/syntax\/SetterSTAAOps.html#appendOver(s:S)(a:A)(implicitev0:cats.kernel.Semigroup[A]):T", "kind" : "def"}, {"label" : "conjOver", "tail" : "(s: S)(a: A)(ev0: Heyting[A]): T", "member" : "proptics.syntax.SetterSTAAOps.conjOver", "link" : "proptics\/syntax\/SetterSTAAOps.html#conjOver(s:S)(a:A)(implicitev0:algebra.lattice.Heyting[A]):T", "kind" : "def"}, {"label" : "disjOver", "tail" : "(s: S)(a: A)(ev0: Heyting[A]): T", "member" : "proptics.syntax.SetterSTAAOps.disjOver", "link" : "proptics\/syntax\/SetterSTAAOps.html#disjOver(s:S)(a:A)(implicitev0:algebra.lattice.Heyting[A]):T", "kind" : "def"}, {"label" : "divOver", "tail" : "(s: S)(a: A)(ev0: Field[A]): T", "member" : "proptics.syntax.SetterSTAAOps.divOver", "link" : "proptics\/syntax\/SetterSTAAOps.html#divOver(s:S)(a:A)(implicitev0:spire.algebra.Field[A]):T", "kind" : "def"}, {"label" : "subOver", "tail" : "(s: S)(a: A)(ev0: Ring[A]): T", "member" : "proptics.syntax.SetterSTAAOps.subOver", "link" : "proptics\/syntax\/SetterSTAAOps.html#subOver(s:S)(a:A)(implicitev0:spire.algebra.Ring[A]):T", "kind" : "def"}, {"label" : "mulOver", "tail" : "(s: S)(a: A)(ev0: Semiring[A]): T", "member" : "proptics.syntax.SetterSTAAOps.mulOver", "link" : "proptics\/syntax\/SetterSTAAOps.html#mulOver(s:S)(a:A)(implicitev0:spire.algebra.Semiring[A]):T", "kind" : "def"}, {"label" : "addOver", "tail" : "(s: S)(a: A)(ev0: Semiring[A]): T", "member" : "proptics.syntax.SetterSTAAOps.addOver", "link" : "proptics\/syntax\/SetterSTAAOps.html#addOver(s:S)(a:A)(implicitev0:spire.algebra.Semiring[A]):T", "kind" : "def"}, {"member" : "proptics.syntax.SetterSTAAOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/SetterSTAAOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/SetterSTAAOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/SetterSTAAOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/SetterSTAAOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/SetterSTAAOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/SetterSTAAOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/SetterSTAAOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/SetterSTAAOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.SetterSTAOptionB", "shortDescription" : "", "members_case class" : [{"label" : "setJust", "tail" : "(s: S)(b: B): T", "member" : "proptics.syntax.SetterSTAOptionB.setJust", "link" : "proptics\/syntax\/SetterSTAOptionB.html#setJust(s:S)(b:B):T", "kind" : "def"}, {"member" : "proptics.syntax.SetterSTAOptionB#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/SetterSTAOptionB.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/SetterSTAOptionB.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/SetterSTAOptionB.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/SetterSTAOptionB.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/SetterSTAOptionB.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/SetterSTAOptionB.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/SetterSTAOptionB.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/SetterSTAOptionB.html", "kind" : "case class"}, {"name" : "proptics.syntax.SetterSyntax", "trait" : "proptics\/syntax\/SetterSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "setterSTAOptionB", "tail" : "(setter: Setter_[S, T, A, Option[B]]): SetterSTAOptionB[S, T, A, B]", "member" : "proptics.syntax.SetterSyntax.setterSTAOptionB", "link" : "proptics\/syntax\/SetterSyntax.html#setterSTAOptionB[S,T,A,B](setter:proptics.Setter_[S,T,A,Option[B]]):proptics.syntax.SetterSTAOptionB[S,T,A,B]", "kind" : "implicit def"}, {"label" : "setterSTAAOps", "tail" : "(setter: Setter_[S, T, A, A]): SetterSTAAOps[S, T, A]", "member" : "proptics.syntax.SetterSyntax.setterSTAAOps", "link" : "proptics\/syntax\/SetterSyntax.html#setterSTAAOps[S,T,A](setter:proptics.Setter_[S,T,A,A]):proptics.syntax.SetterSTAAOps[S,T,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/SetterSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/SetterSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/SetterSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/SetterSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/SetterSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/SetterSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/SetterSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/SetterSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/SetterSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/SetterSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/SetterSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/SetterSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/SetterSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/SetterSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/SetterSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/SetterSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/SetterSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/SetterSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/SetterSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.star", "shortDescription" : "", "object" : "proptics\/syntax\/package$$star$.html", "members_object" : [{"label" : "starOps", "tail" : "(star: Star[F, A, B]): StarOps[F, A, B]", "member" : "proptics.syntax.StarSyntax.starOps", "link" : "proptics\/syntax\/package$$star$.html#starOps[F[_],A,B](star:proptics.profunctor.Star[F,A,B]):proptics.syntax.StarOps[F,A,B]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$star$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$star$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$star$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$star$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$star$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$star$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$star$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$star$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$star$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$star$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$star$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$star$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$star$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$star$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$star$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$star$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$star$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$star$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$star$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.StarOps", "shortDescription" : "", "members_case class" : [{"label" : "hoist", "tail" : "(f: ~>[F, G]): Star[G, A, B]", "member" : "proptics.syntax.StarOps.hoist", "link" : "proptics\/syntax\/StarOps.html#hoist[G[_]](f:F~>G):proptics.profunctor.Star[G,A,B]", "kind" : "def"}, {"label" : "runStar", "tail" : "(a: A): F[B]", "member" : "proptics.syntax.StarOps.runStar", "link" : "proptics\/syntax\/StarOps.html#runStar(a:A):F[B]", "kind" : "def"}, {"member" : "proptics.syntax.StarOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/StarOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/StarOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/StarOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/StarOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/StarOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/StarOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/StarOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/StarOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.StarSyntax", "trait" : "proptics\/syntax\/StarSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "starOps", "tail" : "(star: Star[F, A, B]): StarOps[F, A, B]", "member" : "proptics.syntax.StarSyntax.starOps", "link" : "proptics\/syntax\/StarSyntax.html#starOps[F[_],A,B](star:proptics.profunctor.Star[F,A,B]):proptics.syntax.StarOps[F,A,B]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/StarSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/StarSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/StarSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/StarSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/StarSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/StarSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/StarSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/StarSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/StarSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/StarSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/StarSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/StarSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/StarSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/StarSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/StarSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/StarSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/StarSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/StarSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/StarSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.traversal", "shortDescription" : "", "object" : "proptics\/syntax\/package$$traversal$.html", "members_object" : [{"label" : "traversalFSequenceOps", "tail" : "(traversal: Traversal_[S, T, F[A], A]): TraversalFSequenceOps[F, S, T, A]", "member" : "proptics.syntax.TraversalSyntax.traversalFSequenceOps", "link" : "proptics\/syntax\/package$$traversal$.html#traversalFSequenceOps[F[_],S,T,A](traversal:proptics.Traversal_[S,T,F[A],A]):proptics.syntax.TraversalFSequenceOps[F,S,T,A]", "kind" : "implicit final def"}, {"label" : "traversalElementOps", "tail" : "(traversal: Traversal_[S, T, A, A]): TraversalElementOps[S, T, A]", "member" : "proptics.syntax.TraversalSyntax.traversalElementOps", "link" : "proptics\/syntax\/package$$traversal$.html#traversalElementOps[S,T,A](traversal:proptics.Traversal_[S,T,A,A]):proptics.syntax.TraversalElementOps[S,T,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$traversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$traversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$traversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$traversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$traversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$traversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$traversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$traversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$traversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$traversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$traversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$traversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$traversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$traversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$traversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$traversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$traversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$traversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$traversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.TraversalElementOps", "shortDescription" : "", "members_case class" : [{"label" : "dropWhile", "tail" : "(predicate: (A) => Boolean)(ev0: Applicative[[β$8$]IndexedStateT[Eval, Boolean, Boolean, β$8$]]): Traversal_[S, T, A, A]", "member" : "proptics.syntax.TraversalElementOps.dropWhile", "link" : "proptics\/syntax\/TraversalElementOps.html#dropWhile(predicate:A=>Boolean)(implicitev0:cats.Applicative[[β$8$]cats.data.IndexedStateT[cats.Eval,Boolean,Boolean,β$8$]]):proptics.Traversal_[S,T,A,A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(predicate: (A) => Boolean)(ev0: Applicative[[β$7$]IndexedStateT[Eval, Boolean, Boolean, β$7$]]): Traversal_[S, T, A, A]", "member" : "proptics.syntax.TraversalElementOps.takeWhile", "link" : "proptics\/syntax\/TraversalElementOps.html#takeWhile(predicate:A=>Boolean)(implicitev0:cats.Applicative[[β$7$]cats.data.IndexedStateT[cats.Eval,Boolean,Boolean,β$7$]]):proptics.Traversal_[S,T,A,A]", "kind" : "def"}, {"label" : "drop", "tail" : "(i: Int): Traversal_[S, T, A, A]", "member" : "proptics.syntax.TraversalElementOps.drop", "link" : "proptics\/syntax\/TraversalElementOps.html#drop(i:Int):proptics.Traversal_[S,T,A,A]", "kind" : "def"}, {"label" : "take", "tail" : "(i: Int): Traversal_[S, T, A, A]", "member" : "proptics.syntax.TraversalElementOps.take", "link" : "proptics\/syntax\/TraversalElementOps.html#take(i:Int):proptics.Traversal_[S,T,A,A]", "kind" : "def"}, {"label" : "filterByIndex", "tail" : "(predicate: (Int) => Boolean): Traversal_[S, T, A, A]", "member" : "proptics.syntax.TraversalElementOps.filterByIndex", "link" : "proptics\/syntax\/TraversalElementOps.html#filterByIndex(predicate:Int=>Boolean):proptics.Traversal_[S,T,A,A]", "kind" : "def"}, {"label" : "elementAt", "tail" : "(i: Int): Traversal_[S, T, A, A]", "member" : "proptics.syntax.TraversalElementOps.elementAt", "link" : "proptics\/syntax\/TraversalElementOps.html#elementAt(i:Int):proptics.Traversal_[S,T,A,A]", "kind" : "def"}, {"label" : "partsOf", "tail" : "(ev0: Sellable[[α$2$, β$3$](α$2$) => β$3$, [β$4$, γ$5$, ε$6$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, β$4$, γ$5$, Unit, ε$6$]]): Lens_[S, T, List[A], List[A]]", "member" : "proptics.syntax.TraversalElementOps.partsOf", "link" : "proptics\/syntax\/TraversalElementOps.html#partsOf(implicitev0:proptics.internal.Sellable[[α$2$,β$3$]α$2$=>β$3$,[β$4$,γ$5$,ε$6$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,β$4$,γ$5$,Unit,ε$6$]]):proptics.Lens_[S,T,List[A],List[A]]", "kind" : "def"}, {"member" : "proptics.syntax.TraversalElementOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/TraversalElementOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/TraversalElementOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/TraversalElementOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/TraversalElementOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/TraversalElementOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/TraversalElementOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/TraversalElementOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/TraversalElementOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.TraversalFSequenceOps", "shortDescription" : "", "members_case class" : [{"label" : "sequence", "tail" : "(s: S)(ev: Applicative[F]): F[T]", "member" : "proptics.syntax.TraversalFSequenceOps.sequence", "link" : "proptics\/syntax\/TraversalFSequenceOps.html#sequence(s:S)(implicitev:cats.Applicative[F]):F[T]", "kind" : "def"}, {"member" : "proptics.syntax.TraversalFSequenceOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/TraversalFSequenceOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/TraversalFSequenceOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/TraversalFSequenceOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/TraversalFSequenceOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/TraversalFSequenceOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/TraversalFSequenceOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/TraversalFSequenceOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/TraversalFSequenceOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.TraversalSyntax", "trait" : "proptics\/syntax\/TraversalSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "traversalFSequenceOps", "tail" : "(traversal: Traversal_[S, T, F[A], A]): TraversalFSequenceOps[F, S, T, A]", "member" : "proptics.syntax.TraversalSyntax.traversalFSequenceOps", "link" : "proptics\/syntax\/TraversalSyntax.html#traversalFSequenceOps[F[_],S,T,A](traversal:proptics.Traversal_[S,T,F[A],A]):proptics.syntax.TraversalFSequenceOps[F,S,T,A]", "kind" : "implicit final def"}, {"label" : "traversalElementOps", "tail" : "(traversal: Traversal_[S, T, A, A]): TraversalElementOps[S, T, A]", "member" : "proptics.syntax.TraversalSyntax.traversalElementOps", "link" : "proptics\/syntax\/TraversalSyntax.html#traversalElementOps[S,T,A](traversal:proptics.Traversal_[S,T,A,A]):proptics.syntax.TraversalElementOps[S,T,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/TraversalSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/TraversalSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/TraversalSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/TraversalSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/TraversalSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/TraversalSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/TraversalSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/TraversalSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/TraversalSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/TraversalSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/TraversalSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/TraversalSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/TraversalSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/TraversalSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/TraversalSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/TraversalSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/TraversalSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/TraversalSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/TraversalSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.traverseWithIndex", "shortDescription" : "", "object" : "proptics\/syntax\/package$$traverseWithIndex$.html", "members_object" : [{"label" : "traverseWithIndexOps", "tail" : "(fa: F[A]): TraverseWithIndexOps[F, A]", "member" : "proptics.syntax.TraverseWithIndexSyntax.traverseWithIndexOps", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#traverseWithIndexOps[F[_],A](fa:F[A]):proptics.syntax.TraverseWithIndexOps[F,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$traverseWithIndex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.TraverseWithIndexOps", "shortDescription" : "", "members_case class" : [{"label" : "traverseWithIndex", "tail" : "(f: (A, I) => G[B])(arg0: Applicative[G], ev: TraverseWithIndex[F, I]): G[F[B]]", "member" : "proptics.syntax.TraverseWithIndexOps.traverseWithIndex", "link" : "proptics\/syntax\/TraverseWithIndexOps.html#traverseWithIndex[G[_],I,B](f:(A,I)=>G[B])(implicitevidence$1:cats.Applicative[G],implicitev:proptics.indices.TraverseWithIndex[F,I]):G[F[B]]", "kind" : "def"}, {"member" : "proptics.syntax.TraverseWithIndexOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/TraverseWithIndexOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/TraverseWithIndexOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/TraverseWithIndexOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/TraverseWithIndexOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/TraverseWithIndexOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/TraverseWithIndexOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/TraverseWithIndexOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/TraverseWithIndexOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.TraverseWithIndexSyntax", "trait" : "proptics\/syntax\/TraverseWithIndexSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "traverseWithIndexOps", "tail" : "(fa: F[A]): TraverseWithIndexOps[F, A]", "member" : "proptics.syntax.TraverseWithIndexSyntax.traverseWithIndexOps", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#traverseWithIndexOps[F[_],A](fa:F[A]):proptics.syntax.TraverseWithIndexOps[F,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/TraverseWithIndexSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.syntax.tuple", "shortDescription" : "", "object" : "proptics\/syntax\/package$$tuple$.html", "members_object" : [{"label" : "tuple2TypeOps", "tail" : "(tupleType: Tuple2.type): Tuple2TypeOps", "member" : "proptics.syntax.TupleSyntax.tuple2TypeOps", "link" : "proptics\/syntax\/package$$tuple$.html#tuple2TypeOps(tupleType:Tuple2.type):proptics.syntax.Tuple2TypeOps", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/package$$tuple$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/package$$tuple$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/package$$tuple$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/package$$tuple$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/package$$tuple$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/package$$tuple$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/package$$tuple$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$tuple$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$tuple$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/package$$tuple$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/package$$tuple$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/package$$tuple$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/package$$tuple$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/package$$tuple$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/package$$tuple$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/package$$tuple$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/package$$tuple$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/package$$tuple$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/package$$tuple$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.syntax.Tuple2TypeOps", "shortDescription" : "", "members_case class" : [{"label" : "swap", "tail" : "(pair: (A, B)): (B, A)", "member" : "proptics.syntax.Tuple2TypeOps.swap", "link" : "proptics\/syntax\/Tuple2TypeOps.html#swap[A,B](pair:(A,B)):(B,A)", "kind" : "def"}, {"label" : "_2", "tail" : "(pair: (A, B)): B", "member" : "proptics.syntax.Tuple2TypeOps._2", "link" : "proptics\/syntax\/Tuple2TypeOps.html#_2[A,B](pair:(A,B)):B", "kind" : "def"}, {"label" : "_1", "tail" : "(pair: (A, B)): A", "member" : "proptics.syntax.Tuple2TypeOps._1", "link" : "proptics\/syntax\/Tuple2TypeOps.html#_1[A,B](pair:(A,B)):A", "kind" : "def"}, {"member" : "proptics.syntax.Tuple2TypeOps#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/syntax\/Tuple2TypeOps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/syntax\/Tuple2TypeOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/syntax\/Tuple2TypeOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/Tuple2TypeOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/Tuple2TypeOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/syntax\/Tuple2TypeOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/syntax\/Tuple2TypeOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/syntax\/Tuple2TypeOps.html", "kind" : "case class"}, {"name" : "proptics.syntax.TupleSyntax", "trait" : "proptics\/syntax\/TupleSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "tuple2TypeOps", "tail" : "(tupleType: Tuple2.type): Tuple2TypeOps", "member" : "proptics.syntax.TupleSyntax.tuple2TypeOps", "link" : "proptics\/syntax\/TupleSyntax.html#tuple2TypeOps(tupleType:Tuple2.type):proptics.syntax.Tuple2TypeOps", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/syntax\/TupleSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/syntax\/TupleSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/syntax\/TupleSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/syntax\/TupleSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/syntax\/TupleSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/syntax\/TupleSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/syntax\/TupleSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/TupleSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/TupleSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/syntax\/TupleSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/syntax\/TupleSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/syntax\/TupleSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/syntax\/TupleSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/syntax\/TupleSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/syntax\/TupleSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/syntax\/TupleSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/syntax\/TupleSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/syntax\/TupleSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/syntax\/TupleSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "proptics.data" : [{"name" : "proptics.data.Additive", "shortDescription" : "cats.Monoid and cats.Semigroup under addition", "object" : "proptics\/data\/Additive$.html", "members_object" : [{"label" : "monadAdditive", "tail" : "(): Monad[Additive]", "member" : "proptics.data.AdditiveInstances.monadAdditive", "link" : "proptics\/data\/Additive$.html#monadAdditive:cats.Monad[proptics.data.Additive]", "kind" : "implicit final def"}, {"label" : "bindAdditive", "tail" : "(): FlatMap[Additive]", "member" : "proptics.data.AdditiveInstances.bindAdditive", "link" : "proptics\/data\/Additive$.html#bindAdditive:cats.FlatMap[proptics.data.Additive]", "kind" : "implicit final def"}, {"label" : "applicativeAdditive", "tail" : "(): Applicative[Additive]", "member" : "proptics.data.AdditiveInstances.applicativeAdditive", "link" : "proptics\/data\/Additive$.html#applicativeAdditive:cats.Applicative[proptics.data.Additive]", "kind" : "implicit final def"}, {"label" : "applyAdditive", "tail" : "(): Apply[Additive]", "member" : "proptics.data.AdditiveInstances.applyAdditive", "link" : "proptics\/data\/Additive$.html#applyAdditive:cats.Apply[proptics.data.Additive]", "kind" : "implicit final def"}, {"label" : "functorAdditive", "tail" : "(): Functor[Additive]", "member" : "proptics.data.AdditiveInstances.functorAdditive", "link" : "proptics\/data\/Additive$.html#functorAdditive:cats.Functor[proptics.data.Additive]", "kind" : "implicit final def"}, {"label" : "monoidAdditive", "tail" : "(ev: AdditiveMonoid[A]): Monoid[Additive[A]]", "member" : "proptics.data.AdditiveInstances.monoidAdditive", "link" : "proptics\/data\/Additive$.html#monoidAdditive[A](implicitev:spire.algebra.AdditiveMonoid[A]):cats.Monoid[proptics.data.Additive[A]]", "kind" : "implicit final def"}, {"label" : "semigroupAdditive", "tail" : "(arg0: AdditiveMonoid[A]): Semigroup[Additive[A]]", "member" : "proptics.data.AdditiveInstances.semigroupAdditive", "link" : "proptics\/data\/Additive$.html#semigroupAdditive[A](implicitevidence$4:spire.algebra.AdditiveMonoid[A]):cats.Semigroup[proptics.data.Additive[A]]", "kind" : "implicit final def"}, {"label" : "showAdditive", "tail" : "(arg0: Show[A]): Show[Additive[A]]", "member" : "proptics.data.AdditiveInstances.showAdditive", "link" : "proptics\/data\/Additive$.html#showAdditive[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.Additive[A]]", "kind" : "implicit final def"}, {"label" : "ordAdditive", "tail" : "(arg0: Order[A]): Order[Additive[A]]", "member" : "proptics.data.AdditiveInstances.ordAdditive", "link" : "proptics\/data\/Additive$.html#ordAdditive[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.Additive[A]]", "kind" : "implicit final def"}, {"label" : "eqAdditive", "tail" : "(arg0: Eq[A]): Eq[Additive[A]]", "member" : "proptics.data.AdditiveInstances.eqAdditive", "link" : "proptics\/data\/Additive$.html#eqAdditive[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.Additive[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/Additive$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/Additive$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/Additive$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/Additive$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/Additive$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/Additive$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/Additive$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Additive$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Additive$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Additive$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/Additive$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/Additive$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/Additive$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/Additive$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/Additive$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/Additive$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/Additive$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Additive$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Additive$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "proptics.data.Additive#<init>", "error" : "unsupported entity"}, {"label" : "runAdditive", "tail" : ": A", "member" : "proptics.data.Additive.runAdditive", "link" : "proptics\/data\/Additive.html#runAdditive:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/data\/Additive.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/data\/Additive.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/data\/Additive.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Additive.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Additive.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/data\/Additive.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/data\/Additive.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/data\/Additive.html", "kind" : "case class"}, {"name" : "proptics.data.AdditiveInstances", "shortDescription" : "", "members_class" : [{"label" : "monadAdditive", "tail" : "(): Monad[Additive]", "member" : "proptics.data.AdditiveInstances.monadAdditive", "link" : "proptics\/data\/AdditiveInstances.html#monadAdditive:cats.Monad[proptics.data.Additive]", "kind" : "implicit final def"}, {"label" : "bindAdditive", "tail" : "(): FlatMap[Additive]", "member" : "proptics.data.AdditiveInstances.bindAdditive", "link" : "proptics\/data\/AdditiveInstances.html#bindAdditive:cats.FlatMap[proptics.data.Additive]", "kind" : "implicit final def"}, {"label" : "applicativeAdditive", "tail" : "(): Applicative[Additive]", "member" : "proptics.data.AdditiveInstances.applicativeAdditive", "link" : "proptics\/data\/AdditiveInstances.html#applicativeAdditive:cats.Applicative[proptics.data.Additive]", "kind" : "implicit final def"}, {"label" : "applyAdditive", "tail" : "(): Apply[Additive]", "member" : "proptics.data.AdditiveInstances.applyAdditive", "link" : "proptics\/data\/AdditiveInstances.html#applyAdditive:cats.Apply[proptics.data.Additive]", "kind" : "implicit final def"}, {"label" : "functorAdditive", "tail" : "(): Functor[Additive]", "member" : "proptics.data.AdditiveInstances.functorAdditive", "link" : "proptics\/data\/AdditiveInstances.html#functorAdditive:cats.Functor[proptics.data.Additive]", "kind" : "implicit final def"}, {"label" : "monoidAdditive", "tail" : "(ev: AdditiveMonoid[A]): Monoid[Additive[A]]", "member" : "proptics.data.AdditiveInstances.monoidAdditive", "link" : "proptics\/data\/AdditiveInstances.html#monoidAdditive[A](implicitev:spire.algebra.AdditiveMonoid[A]):cats.Monoid[proptics.data.Additive[A]]", "kind" : "implicit final def"}, {"label" : "semigroupAdditive", "tail" : "(arg0: AdditiveMonoid[A]): Semigroup[Additive[A]]", "member" : "proptics.data.AdditiveInstances.semigroupAdditive", "link" : "proptics\/data\/AdditiveInstances.html#semigroupAdditive[A](implicitevidence$4:spire.algebra.AdditiveMonoid[A]):cats.Semigroup[proptics.data.Additive[A]]", "kind" : "implicit final def"}, {"label" : "showAdditive", "tail" : "(arg0: Show[A]): Show[Additive[A]]", "member" : "proptics.data.AdditiveInstances.showAdditive", "link" : "proptics\/data\/AdditiveInstances.html#showAdditive[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.Additive[A]]", "kind" : "implicit final def"}, {"label" : "ordAdditive", "tail" : "(arg0: Order[A]): Order[Additive[A]]", "member" : "proptics.data.AdditiveInstances.ordAdditive", "link" : "proptics\/data\/AdditiveInstances.html#ordAdditive[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.Additive[A]]", "kind" : "implicit final def"}, {"label" : "eqAdditive", "tail" : "(arg0: Eq[A]): Eq[Additive[A]]", "member" : "proptics.data.AdditiveInstances.eqAdditive", "link" : "proptics\/data\/AdditiveInstances.html#eqAdditive[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.Additive[A]]", "kind" : "implicit final def"}, {"member" : "proptics.data.AdditiveInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/AdditiveInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/AdditiveInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/AdditiveInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/AdditiveInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/AdditiveInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/AdditiveInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/AdditiveInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/AdditiveInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/AdditiveInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/AdditiveInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/AdditiveInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/AdditiveInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/AdditiveInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/AdditiveInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/AdditiveInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/AdditiveInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/AdditiveInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/AdditiveInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/AdditiveInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/data\/AdditiveInstances.html", "kind" : "class"}, {"name" : "proptics.data.Conj", "shortDescription" : "cats.Monoid and cats.Semigroup for conjunction", "object" : "proptics\/data\/Conj$.html", "members_object" : [{"label" : "monadConj", "tail" : "(): Monad[Conj]", "member" : "proptics.data.ConjInstances.monadConj", "link" : "proptics\/data\/Conj$.html#monadConj:cats.Monad[proptics.data.Conj]", "kind" : "implicit final def"}, {"label" : "bindConj", "tail" : "(): FlatMap[Conj]", "member" : "proptics.data.ConjInstances.bindConj", "link" : "proptics\/data\/Conj$.html#bindConj:cats.FlatMap[proptics.data.Conj]", "kind" : "implicit final def"}, {"label" : "applicativeConj", "tail" : "(): Applicative[Conj]", "member" : "proptics.data.ConjInstances.applicativeConj", "link" : "proptics\/data\/Conj$.html#applicativeConj:cats.Applicative[proptics.data.Conj]", "kind" : "implicit final def"}, {"label" : "applyConj", "tail" : "(): Apply[Conj]", "member" : "proptics.data.ConjInstances.applyConj", "link" : "proptics\/data\/Conj$.html#applyConj:cats.Apply[proptics.data.Conj]", "kind" : "implicit final def"}, {"label" : "functorConj", "tail" : "(): Functor[Conj]", "member" : "proptics.data.ConjInstances.functorConj", "link" : "proptics\/data\/Conj$.html#functorConj:cats.Functor[proptics.data.Conj]", "kind" : "implicit final def"}, {"label" : "semiringConj", "tail" : "(ev: Semiring[A]): Semiring[Conj[A]]", "member" : "proptics.data.ConjInstances.semiringConj", "link" : "proptics\/data\/Conj$.html#semiringConj[A](implicitev:spire.algebra.Semiring[A]):spire.algebra.Semiring[proptics.data.Conj[A]]", "kind" : "implicit final def"}, {"label" : "monoidConj", "tail" : "(ev: Heyting[A]): Monoid[Conj[A]]", "member" : "proptics.data.ConjInstances.monoidConj", "link" : "proptics\/data\/Conj$.html#monoidConj[A](implicitev:spire.algebra.lattice.Heyting[A]):cats.Monoid[proptics.data.Conj[A]]", "kind" : "implicit final def"}, {"label" : "semigroupConj", "tail" : "(ev: Heyting[A]): Semigroup[Conj[A]]", "member" : "proptics.data.ConjInstances.semigroupConj", "link" : "proptics\/data\/Conj$.html#semigroupConj[A](implicitev:spire.algebra.lattice.Heyting[A]):cats.Semigroup[proptics.data.Conj[A]]", "kind" : "implicit final def"}, {"label" : "showConj", "tail" : "(arg0: Show[A]): Show[Conj[A]]", "member" : "proptics.data.ConjInstances.showConj", "link" : "proptics\/data\/Conj$.html#showConj[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.Conj[A]]", "kind" : "implicit final def"}, {"label" : "ordConj", "tail" : "(arg0: Order[A]): Order[Conj[A]]", "member" : "proptics.data.ConjInstances.ordConj", "link" : "proptics\/data\/Conj$.html#ordConj[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.Conj[A]]", "kind" : "implicit final def"}, {"label" : "eqConj", "tail" : "(arg0: Eq[A]): Eq[Conj[A]]", "member" : "proptics.data.ConjInstances.eqConj", "link" : "proptics\/data\/Conj$.html#eqConj[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.Conj[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/Conj$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/Conj$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/Conj$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/Conj$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/Conj$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/Conj$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/Conj$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Conj$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Conj$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Conj$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/Conj$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/Conj$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/Conj$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/Conj$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/Conj$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/Conj$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/Conj$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Conj$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Conj$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "proptics.data.Conj#<init>", "error" : "unsupported entity"}, {"label" : "runConj", "tail" : ": A", "member" : "proptics.data.Conj.runConj", "link" : "proptics\/data\/Conj.html#runConj:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/data\/Conj.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/data\/Conj.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/data\/Conj.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Conj.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Conj.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/data\/Conj.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/data\/Conj.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/data\/Conj.html", "kind" : "case class"}, {"name" : "proptics.data.ConjInstances", "shortDescription" : "", "members_class" : [{"label" : "monadConj", "tail" : "(): Monad[Conj]", "member" : "proptics.data.ConjInstances.monadConj", "link" : "proptics\/data\/ConjInstances.html#monadConj:cats.Monad[proptics.data.Conj]", "kind" : "implicit final def"}, {"label" : "bindConj", "tail" : "(): FlatMap[Conj]", "member" : "proptics.data.ConjInstances.bindConj", "link" : "proptics\/data\/ConjInstances.html#bindConj:cats.FlatMap[proptics.data.Conj]", "kind" : "implicit final def"}, {"label" : "applicativeConj", "tail" : "(): Applicative[Conj]", "member" : "proptics.data.ConjInstances.applicativeConj", "link" : "proptics\/data\/ConjInstances.html#applicativeConj:cats.Applicative[proptics.data.Conj]", "kind" : "implicit final def"}, {"label" : "applyConj", "tail" : "(): Apply[Conj]", "member" : "proptics.data.ConjInstances.applyConj", "link" : "proptics\/data\/ConjInstances.html#applyConj:cats.Apply[proptics.data.Conj]", "kind" : "implicit final def"}, {"label" : "functorConj", "tail" : "(): Functor[Conj]", "member" : "proptics.data.ConjInstances.functorConj", "link" : "proptics\/data\/ConjInstances.html#functorConj:cats.Functor[proptics.data.Conj]", "kind" : "implicit final def"}, {"label" : "semiringConj", "tail" : "(ev: Semiring[A]): Semiring[Conj[A]]", "member" : "proptics.data.ConjInstances.semiringConj", "link" : "proptics\/data\/ConjInstances.html#semiringConj[A](implicitev:spire.algebra.Semiring[A]):spire.algebra.Semiring[proptics.data.Conj[A]]", "kind" : "implicit final def"}, {"label" : "monoidConj", "tail" : "(ev: Heyting[A]): Monoid[Conj[A]]", "member" : "proptics.data.ConjInstances.monoidConj", "link" : "proptics\/data\/ConjInstances.html#monoidConj[A](implicitev:spire.algebra.lattice.Heyting[A]):cats.Monoid[proptics.data.Conj[A]]", "kind" : "implicit final def"}, {"label" : "semigroupConj", "tail" : "(ev: Heyting[A]): Semigroup[Conj[A]]", "member" : "proptics.data.ConjInstances.semigroupConj", "link" : "proptics\/data\/ConjInstances.html#semigroupConj[A](implicitev:spire.algebra.lattice.Heyting[A]):cats.Semigroup[proptics.data.Conj[A]]", "kind" : "implicit final def"}, {"label" : "showConj", "tail" : "(arg0: Show[A]): Show[Conj[A]]", "member" : "proptics.data.ConjInstances.showConj", "link" : "proptics\/data\/ConjInstances.html#showConj[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.Conj[A]]", "kind" : "implicit final def"}, {"label" : "ordConj", "tail" : "(arg0: Order[A]): Order[Conj[A]]", "member" : "proptics.data.ConjInstances.ordConj", "link" : "proptics\/data\/ConjInstances.html#ordConj[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.Conj[A]]", "kind" : "implicit final def"}, {"label" : "eqConj", "tail" : "(arg0: Eq[A]): Eq[Conj[A]]", "member" : "proptics.data.ConjInstances.eqConj", "link" : "proptics\/data\/ConjInstances.html#eqConj[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.Conj[A]]", "kind" : "implicit final def"}, {"member" : "proptics.data.ConjInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/ConjInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/ConjInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/ConjInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/ConjInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/ConjInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/ConjInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/ConjInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/ConjInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/ConjInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/ConjInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/ConjInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/ConjInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/ConjInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/ConjInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/ConjInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/ConjInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/ConjInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/ConjInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/ConjInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/data\/ConjInstances.html", "kind" : "class"}, {"name" : "proptics.data.Disj", "shortDescription" : "cats.Monoid and cats.Semigroup for disjunction", "object" : "proptics\/data\/Disj$.html", "members_object" : [{"label" : "monadDisj", "tail" : "(): Monad[Disj]", "member" : "proptics.data.DisjInstances.monadDisj", "link" : "proptics\/data\/Disj$.html#monadDisj:cats.Monad[proptics.data.Disj]", "kind" : "implicit final def"}, {"label" : "bindDisj", "tail" : "(): FlatMap[Disj]", "member" : "proptics.data.DisjInstances.bindDisj", "link" : "proptics\/data\/Disj$.html#bindDisj:cats.FlatMap[proptics.data.Disj]", "kind" : "implicit final def"}, {"label" : "applicativeDisj", "tail" : "(): Applicative[Disj]", "member" : "proptics.data.DisjInstances.applicativeDisj", "link" : "proptics\/data\/Disj$.html#applicativeDisj:cats.Applicative[proptics.data.Disj]", "kind" : "implicit final def"}, {"label" : "applyDisj", "tail" : "(): Apply[Disj]", "member" : "proptics.data.DisjInstances.applyDisj", "link" : "proptics\/data\/Disj$.html#applyDisj:cats.Apply[proptics.data.Disj]", "kind" : "implicit final def"}, {"label" : "functorDisj", "tail" : "(): Functor[Disj]", "member" : "proptics.data.DisjInstances.functorDisj", "link" : "proptics\/data\/Disj$.html#functorDisj:cats.Functor[proptics.data.Disj]", "kind" : "implicit final def"}, {"label" : "semiringDisj", "tail" : "(ev: Semiring[A]): Semiring[Disj[A]]", "member" : "proptics.data.DisjInstances.semiringDisj", "link" : "proptics\/data\/Disj$.html#semiringDisj[A](implicitev:spire.algebra.Semiring[A]):spire.algebra.Semiring[proptics.data.Disj[A]]", "kind" : "implicit final def"}, {"label" : "monoidDisj", "tail" : "(ev: Heyting[A]): Monoid[Disj[A]]", "member" : "proptics.data.DisjInstances.monoidDisj", "link" : "proptics\/data\/Disj$.html#monoidDisj[A](implicitev:spire.algebra.lattice.Heyting[A]):cats.Monoid[proptics.data.Disj[A]]", "kind" : "implicit final def"}, {"label" : "semigroupDisj", "tail" : "(ev: Heyting[A]): Semigroup[Disj[A]]", "member" : "proptics.data.DisjInstances.semigroupDisj", "link" : "proptics\/data\/Disj$.html#semigroupDisj[A](implicitev:spire.algebra.lattice.Heyting[A]):cats.Semigroup[proptics.data.Disj[A]]", "kind" : "implicit final def"}, {"label" : "showDisj", "tail" : "(arg0: Show[A]): Show[Disj[A]]", "member" : "proptics.data.DisjInstances.showDisj", "link" : "proptics\/data\/Disj$.html#showDisj[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.Disj[A]]", "kind" : "implicit final def"}, {"label" : "ordDisj", "tail" : "(arg0: Order[A]): Order[Disj[A]]", "member" : "proptics.data.DisjInstances.ordDisj", "link" : "proptics\/data\/Disj$.html#ordDisj[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.Disj[A]]", "kind" : "implicit final def"}, {"label" : "eqDisj", "tail" : "(arg0: Eq[A]): Eq[Disj[A]]", "member" : "proptics.data.DisjInstances.eqDisj", "link" : "proptics\/data\/Disj$.html#eqDisj[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.Disj[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/Disj$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/Disj$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/Disj$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/Disj$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/Disj$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/Disj$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/Disj$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Disj$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Disj$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Disj$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/Disj$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/Disj$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/Disj$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/Disj$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/Disj$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/Disj$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/Disj$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Disj$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Disj$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "proptics.data.Disj#<init>", "error" : "unsupported entity"}, {"label" : "runDisj", "tail" : ": A", "member" : "proptics.data.Disj.runDisj", "link" : "proptics\/data\/Disj.html#runDisj:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/data\/Disj.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/data\/Disj.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/data\/Disj.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Disj.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Disj.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/data\/Disj.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/data\/Disj.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/data\/Disj.html", "kind" : "case class"}, {"name" : "proptics.data.DisjInstances", "shortDescription" : "", "members_class" : [{"label" : "monadDisj", "tail" : "(): Monad[Disj]", "member" : "proptics.data.DisjInstances.monadDisj", "link" : "proptics\/data\/DisjInstances.html#monadDisj:cats.Monad[proptics.data.Disj]", "kind" : "implicit final def"}, {"label" : "bindDisj", "tail" : "(): FlatMap[Disj]", "member" : "proptics.data.DisjInstances.bindDisj", "link" : "proptics\/data\/DisjInstances.html#bindDisj:cats.FlatMap[proptics.data.Disj]", "kind" : "implicit final def"}, {"label" : "applicativeDisj", "tail" : "(): Applicative[Disj]", "member" : "proptics.data.DisjInstances.applicativeDisj", "link" : "proptics\/data\/DisjInstances.html#applicativeDisj:cats.Applicative[proptics.data.Disj]", "kind" : "implicit final def"}, {"label" : "applyDisj", "tail" : "(): Apply[Disj]", "member" : "proptics.data.DisjInstances.applyDisj", "link" : "proptics\/data\/DisjInstances.html#applyDisj:cats.Apply[proptics.data.Disj]", "kind" : "implicit final def"}, {"label" : "functorDisj", "tail" : "(): Functor[Disj]", "member" : "proptics.data.DisjInstances.functorDisj", "link" : "proptics\/data\/DisjInstances.html#functorDisj:cats.Functor[proptics.data.Disj]", "kind" : "implicit final def"}, {"label" : "semiringDisj", "tail" : "(ev: Semiring[A]): Semiring[Disj[A]]", "member" : "proptics.data.DisjInstances.semiringDisj", "link" : "proptics\/data\/DisjInstances.html#semiringDisj[A](implicitev:spire.algebra.Semiring[A]):spire.algebra.Semiring[proptics.data.Disj[A]]", "kind" : "implicit final def"}, {"label" : "monoidDisj", "tail" : "(ev: Heyting[A]): Monoid[Disj[A]]", "member" : "proptics.data.DisjInstances.monoidDisj", "link" : "proptics\/data\/DisjInstances.html#monoidDisj[A](implicitev:spire.algebra.lattice.Heyting[A]):cats.Monoid[proptics.data.Disj[A]]", "kind" : "implicit final def"}, {"label" : "semigroupDisj", "tail" : "(ev: Heyting[A]): Semigroup[Disj[A]]", "member" : "proptics.data.DisjInstances.semigroupDisj", "link" : "proptics\/data\/DisjInstances.html#semigroupDisj[A](implicitev:spire.algebra.lattice.Heyting[A]):cats.Semigroup[proptics.data.Disj[A]]", "kind" : "implicit final def"}, {"label" : "showDisj", "tail" : "(arg0: Show[A]): Show[Disj[A]]", "member" : "proptics.data.DisjInstances.showDisj", "link" : "proptics\/data\/DisjInstances.html#showDisj[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.Disj[A]]", "kind" : "implicit final def"}, {"label" : "ordDisj", "tail" : "(arg0: Order[A]): Order[Disj[A]]", "member" : "proptics.data.DisjInstances.ordDisj", "link" : "proptics\/data\/DisjInstances.html#ordDisj[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.Disj[A]]", "kind" : "implicit final def"}, {"label" : "eqDisj", "tail" : "(arg0: Eq[A]): Eq[Disj[A]]", "member" : "proptics.data.DisjInstances.eqDisj", "link" : "proptics\/data\/DisjInstances.html#eqDisj[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.Disj[A]]", "kind" : "implicit final def"}, {"member" : "proptics.data.DisjInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/DisjInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/DisjInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/DisjInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/DisjInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/DisjInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/DisjInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/DisjInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/DisjInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/DisjInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/DisjInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/DisjInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/DisjInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/DisjInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/DisjInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/DisjInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/DisjInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/DisjInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/DisjInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/DisjInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/data\/DisjInstances.html", "kind" : "class"}, {"name" : "proptics.data.Dual", "shortDescription" : "The dual of a cats.Monoid", "object" : "proptics\/data\/Dual$.html", "members_object" : [{"label" : "monadDual", "tail" : "(): Monad[Dual]", "member" : "proptics.data.DualInstances.monadDual", "link" : "proptics\/data\/Dual$.html#monadDual:cats.Monad[proptics.data.Dual]", "kind" : "implicit final def"}, {"label" : "bindDual", "tail" : "(): FlatMap[Dual]", "member" : "proptics.data.DualInstances.bindDual", "link" : "proptics\/data\/Dual$.html#bindDual:cats.FlatMap[proptics.data.Dual]", "kind" : "implicit final def"}, {"label" : "applicativeDual", "tail" : "(): Applicative[Dual]", "member" : "proptics.data.DualInstances.applicativeDual", "link" : "proptics\/data\/Dual$.html#applicativeDual:cats.Applicative[proptics.data.Dual]", "kind" : "implicit final def"}, {"label" : "applyDual", "tail" : "(): Apply[Dual]", "member" : "proptics.data.DualInstances.applyDual", "link" : "proptics\/data\/Dual$.html#applyDual:cats.Apply[proptics.data.Dual]", "kind" : "implicit final def"}, {"label" : "functorDual", "tail" : "(): Functor[Dual]", "member" : "proptics.data.DualInstances.functorDual", "link" : "proptics\/data\/Dual$.html#functorDual:cats.Functor[proptics.data.Dual]", "kind" : "implicit final def"}, {"label" : "monoidDual", "tail" : "(ev: Monoid[A]): Monoid[Dual[A]]", "member" : "proptics.data.DualInstances.monoidDual", "link" : "proptics\/data\/Dual$.html#monoidDual[A](implicitev:cats.Monoid[A]):cats.Monoid[proptics.data.Dual[A]]", "kind" : "implicit final def"}, {"label" : "semigroupDual", "tail" : "(arg0: Semigroup[A]): Semigroup[Dual[A]]", "member" : "proptics.data.DualInstances.semigroupDual", "link" : "proptics\/data\/Dual$.html#semigroupDual[A](implicitevidence$4:cats.Semigroup[A]):cats.Semigroup[proptics.data.Dual[A]]", "kind" : "implicit final def"}, {"label" : "showDual", "tail" : "(arg0: Show[A]): Show[Dual[A]]", "member" : "proptics.data.DualInstances.showDual", "link" : "proptics\/data\/Dual$.html#showDual[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.Dual[A]]", "kind" : "implicit final def"}, {"label" : "ordDual", "tail" : "(arg0: Order[A]): Order[Dual[A]]", "member" : "proptics.data.DualInstances.ordDual", "link" : "proptics\/data\/Dual$.html#ordDual[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.Dual[A]]", "kind" : "implicit final def"}, {"label" : "eqDual", "tail" : "(arg0: Eq[A]): Eq[Dual[A]]", "member" : "proptics.data.DualInstances.eqDual", "link" : "proptics\/data\/Dual$.html#eqDual[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.Dual[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/Dual$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/Dual$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/Dual$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/Dual$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/Dual$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/Dual$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/Dual$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Dual$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Dual$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Dual$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/Dual$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/Dual$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/Dual$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/Dual$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/Dual$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/Dual$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/Dual$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Dual$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Dual$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "proptics.data.Dual#<init>", "error" : "unsupported entity"}, {"label" : "runDual", "tail" : ": A", "member" : "proptics.data.Dual.runDual", "link" : "proptics\/data\/Dual.html#runDual:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/data\/Dual.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/data\/Dual.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/data\/Dual.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Dual.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Dual.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/data\/Dual.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/data\/Dual.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/data\/Dual.html", "kind" : "case class"}, {"name" : "proptics.data.DualInstances", "shortDescription" : "", "members_class" : [{"label" : "monadDual", "tail" : "(): Monad[Dual]", "member" : "proptics.data.DualInstances.monadDual", "link" : "proptics\/data\/DualInstances.html#monadDual:cats.Monad[proptics.data.Dual]", "kind" : "implicit final def"}, {"label" : "bindDual", "tail" : "(): FlatMap[Dual]", "member" : "proptics.data.DualInstances.bindDual", "link" : "proptics\/data\/DualInstances.html#bindDual:cats.FlatMap[proptics.data.Dual]", "kind" : "implicit final def"}, {"label" : "applicativeDual", "tail" : "(): Applicative[Dual]", "member" : "proptics.data.DualInstances.applicativeDual", "link" : "proptics\/data\/DualInstances.html#applicativeDual:cats.Applicative[proptics.data.Dual]", "kind" : "implicit final def"}, {"label" : "applyDual", "tail" : "(): Apply[Dual]", "member" : "proptics.data.DualInstances.applyDual", "link" : "proptics\/data\/DualInstances.html#applyDual:cats.Apply[proptics.data.Dual]", "kind" : "implicit final def"}, {"label" : "functorDual", "tail" : "(): Functor[Dual]", "member" : "proptics.data.DualInstances.functorDual", "link" : "proptics\/data\/DualInstances.html#functorDual:cats.Functor[proptics.data.Dual]", "kind" : "implicit final def"}, {"label" : "monoidDual", "tail" : "(ev: Monoid[A]): Monoid[Dual[A]]", "member" : "proptics.data.DualInstances.monoidDual", "link" : "proptics\/data\/DualInstances.html#monoidDual[A](implicitev:cats.Monoid[A]):cats.Monoid[proptics.data.Dual[A]]", "kind" : "implicit final def"}, {"label" : "semigroupDual", "tail" : "(arg0: Semigroup[A]): Semigroup[Dual[A]]", "member" : "proptics.data.DualInstances.semigroupDual", "link" : "proptics\/data\/DualInstances.html#semigroupDual[A](implicitevidence$4:cats.Semigroup[A]):cats.Semigroup[proptics.data.Dual[A]]", "kind" : "implicit final def"}, {"label" : "showDual", "tail" : "(arg0: Show[A]): Show[Dual[A]]", "member" : "proptics.data.DualInstances.showDual", "link" : "proptics\/data\/DualInstances.html#showDual[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.Dual[A]]", "kind" : "implicit final def"}, {"label" : "ordDual", "tail" : "(arg0: Order[A]): Order[Dual[A]]", "member" : "proptics.data.DualInstances.ordDual", "link" : "proptics\/data\/DualInstances.html#ordDual[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.Dual[A]]", "kind" : "implicit final def"}, {"label" : "eqDual", "tail" : "(arg0: Eq[A]): Eq[Dual[A]]", "member" : "proptics.data.DualInstances.eqDual", "link" : "proptics\/data\/DualInstances.html#eqDual[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.Dual[A]]", "kind" : "implicit final def"}, {"member" : "proptics.data.DualInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/DualInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/DualInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/DualInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/DualInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/DualInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/DualInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/DualInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/DualInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/DualInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/DualInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/DualInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/DualInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/DualInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/DualInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/DualInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/DualInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/DualInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/DualInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/DualInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/data\/DualInstances.html", "kind" : "class"}, {"name" : "proptics.data.Endo", "shortDescription" : "cats.Monoid and cats.Semigroup for category endomorphisms.", "object" : "proptics\/data\/Endo$.html", "members_object" : [{"label" : "monoidEndo", "tail" : "(ev: Category[C]): Monoid[Endo[C, A]]", "member" : "proptics.data.EndoInstances.monoidEndo", "link" : "proptics\/data\/Endo$.html#monoidEndo[C[_,_],A](implicitev:cats.arrow.Category[C]):cats.Monoid[proptics.data.Endo[C,A]]", "kind" : "implicit final def"}, {"label" : "semigroupEndo", "tail" : "(ev: Compose[C]): Semigroup[Endo[C, A]]", "member" : "proptics.data.EndoInstances.semigroupEndo", "link" : "proptics\/data\/Endo$.html#semigroupEndo[C[_,_],A](implicitev:cats.arrow.Compose[C]):cats.Semigroup[proptics.data.Endo[C,A]]", "kind" : "implicit final def"}, {"label" : "ordEndo", "tail" : "(ev: Order[C[A, A]]): Order[Endo[C, A]]", "member" : "proptics.data.EndoInstances.ordEndo", "link" : "proptics\/data\/Endo$.html#ordEndo[C[_,_],A](implicitev:cats.Order[C[A,A]]):cats.Order[proptics.data.Endo[C,A]]", "kind" : "implicit final def"}, {"label" : "eqEndo", "tail" : "(ev: Eq[C[A, A]]): Eq[Endo[C, A]]", "member" : "proptics.data.EndoInstances.eqEndo", "link" : "proptics\/data\/Endo$.html#eqEndo[C[_,_],A](implicitev:cats.Eq[C[A,A]]):cats.Eq[proptics.data.Endo[C,A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/Endo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/Endo$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/Endo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/Endo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/Endo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/Endo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/Endo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Endo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Endo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Endo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/Endo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/Endo$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/Endo$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/Endo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/Endo$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/Endo$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/Endo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Endo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Endo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "proptics.data.Endo#<init>", "error" : "unsupported entity"}, {"label" : "runEndo", "tail" : ": C[A, A]", "member" : "proptics.data.Endo.runEndo", "link" : "proptics\/data\/Endo.html#runEndo:C[A,A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/data\/Endo.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/data\/Endo.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/data\/Endo.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Endo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Endo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/data\/Endo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/data\/Endo.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/data\/Endo.html", "kind" : "case class"}, {"name" : "proptics.data.EndoInstances", "shortDescription" : "", "members_class" : [{"label" : "monoidEndo", "tail" : "(ev: Category[C]): Monoid[Endo[C, A]]", "member" : "proptics.data.EndoInstances.monoidEndo", "link" : "proptics\/data\/EndoInstances.html#monoidEndo[C[_,_],A](implicitev:cats.arrow.Category[C]):cats.Monoid[proptics.data.Endo[C,A]]", "kind" : "implicit final def"}, {"label" : "semigroupEndo", "tail" : "(ev: Compose[C]): Semigroup[Endo[C, A]]", "member" : "proptics.data.EndoInstances.semigroupEndo", "link" : "proptics\/data\/EndoInstances.html#semigroupEndo[C[_,_],A](implicitev:cats.arrow.Compose[C]):cats.Semigroup[proptics.data.Endo[C,A]]", "kind" : "implicit final def"}, {"label" : "ordEndo", "tail" : "(ev: Order[C[A, A]]): Order[Endo[C, A]]", "member" : "proptics.data.EndoInstances.ordEndo", "link" : "proptics\/data\/EndoInstances.html#ordEndo[C[_,_],A](implicitev:cats.Order[C[A,A]]):cats.Order[proptics.data.Endo[C,A]]", "kind" : "implicit final def"}, {"label" : "eqEndo", "tail" : "(ev: Eq[C[A, A]]): Eq[Endo[C, A]]", "member" : "proptics.data.EndoInstances.eqEndo", "link" : "proptics\/data\/EndoInstances.html#eqEndo[C[_,_],A](implicitev:cats.Eq[C[A,A]]):cats.Eq[proptics.data.Endo[C,A]]", "kind" : "implicit final def"}, {"member" : "proptics.data.EndoInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/EndoInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/EndoInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/EndoInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/EndoInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/EndoInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/EndoInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/EndoInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/EndoInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/EndoInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/EndoInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/EndoInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/EndoInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/EndoInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/EndoInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/EndoInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/EndoInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/EndoInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/EndoInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/EndoInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/data\/EndoInstances.html", "kind" : "class"}, {"name" : "proptics.data.First", "shortDescription" : "cats.Semigroup where combine always takes the first option", "object" : "proptics\/data\/First$.html", "members_object" : [{"label" : "monadFirst", "tail" : "(): Monad[First]", "member" : "proptics.data.FirstInstances.monadFirst", "link" : "proptics\/data\/First$.html#monadFirst:cats.Monad[proptics.data.First]", "kind" : "implicit final def"}, {"label" : "bindFirst", "tail" : "(): FlatMap[First]", "member" : "proptics.data.FirstInstances.bindFirst", "link" : "proptics\/data\/First$.html#bindFirst:cats.FlatMap[proptics.data.First]", "kind" : "implicit final def"}, {"label" : "applicativeFirst", "tail" : "(): Applicative[First]", "member" : "proptics.data.FirstInstances.applicativeFirst", "link" : "proptics\/data\/First$.html#applicativeFirst:cats.Applicative[proptics.data.First]", "kind" : "implicit final def"}, {"label" : "applyFirst", "tail" : "(): Apply[First]", "member" : "proptics.data.FirstInstances.applyFirst", "link" : "proptics\/data\/First$.html#applyFirst:cats.Apply[proptics.data.First]", "kind" : "implicit final def"}, {"label" : "functorFirst", "tail" : "(): Functor[First]", "member" : "proptics.data.FirstInstances.functorFirst", "link" : "proptics\/data\/First$.html#functorFirst:cats.Functor[proptics.data.First]", "kind" : "implicit final def"}, {"label" : "monoidFirst", "tail" : "(): Monoid[First[A]]", "member" : "proptics.data.FirstInstances.monoidFirst", "link" : "proptics\/data\/First$.html#monoidFirst[A]:cats.Monoid[proptics.data.First[A]]", "kind" : "implicit final def"}, {"label" : "semigroupFirst", "tail" : "(): Semigroup[First[A]]", "member" : "proptics.data.FirstInstances.semigroupFirst", "link" : "proptics\/data\/First$.html#semigroupFirst[A]:cats.Semigroup[proptics.data.First[A]]", "kind" : "implicit final def"}, {"label" : "showFirst", "tail" : "(arg0: Show[A]): Show[First[A]]", "member" : "proptics.data.FirstInstances.showFirst", "link" : "proptics\/data\/First$.html#showFirst[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.First[A]]", "kind" : "implicit final def"}, {"label" : "ordFirst", "tail" : "(arg0: Order[A]): Order[First[A]]", "member" : "proptics.data.FirstInstances.ordFirst", "link" : "proptics\/data\/First$.html#ordFirst[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.First[A]]", "kind" : "implicit final def"}, {"label" : "eqFirst", "tail" : "(arg0: Eq[A]): Eq[First[A]]", "member" : "proptics.data.FirstInstances.eqFirst", "link" : "proptics\/data\/First$.html#eqFirst[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.First[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/First$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/First$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/First$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/First$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/First$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/First$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/First$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/First$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/First$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/First$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/First$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/First$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/First$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/First$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/First$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/First$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/First$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/First$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/First$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "proptics.data.First#<init>", "error" : "unsupported entity"}, {"label" : "runFirst", "tail" : ": Option[A]", "member" : "proptics.data.First.runFirst", "link" : "proptics\/data\/First.html#runFirst:Option[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/data\/First.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/data\/First.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/data\/First.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/First.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/First.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/data\/First.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/data\/First.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/data\/First.html", "kind" : "case class"}, {"name" : "proptics.data.FirstInstances", "shortDescription" : "", "members_class" : [{"label" : "monadFirst", "tail" : "(): Monad[First]", "member" : "proptics.data.FirstInstances.monadFirst", "link" : "proptics\/data\/FirstInstances.html#monadFirst:cats.Monad[proptics.data.First]", "kind" : "implicit final def"}, {"label" : "bindFirst", "tail" : "(): FlatMap[First]", "member" : "proptics.data.FirstInstances.bindFirst", "link" : "proptics\/data\/FirstInstances.html#bindFirst:cats.FlatMap[proptics.data.First]", "kind" : "implicit final def"}, {"label" : "applicativeFirst", "tail" : "(): Applicative[First]", "member" : "proptics.data.FirstInstances.applicativeFirst", "link" : "proptics\/data\/FirstInstances.html#applicativeFirst:cats.Applicative[proptics.data.First]", "kind" : "implicit final def"}, {"label" : "applyFirst", "tail" : "(): Apply[First]", "member" : "proptics.data.FirstInstances.applyFirst", "link" : "proptics\/data\/FirstInstances.html#applyFirst:cats.Apply[proptics.data.First]", "kind" : "implicit final def"}, {"label" : "functorFirst", "tail" : "(): Functor[First]", "member" : "proptics.data.FirstInstances.functorFirst", "link" : "proptics\/data\/FirstInstances.html#functorFirst:cats.Functor[proptics.data.First]", "kind" : "implicit final def"}, {"label" : "monoidFirst", "tail" : "(): Monoid[First[A]]", "member" : "proptics.data.FirstInstances.monoidFirst", "link" : "proptics\/data\/FirstInstances.html#monoidFirst[A]:cats.Monoid[proptics.data.First[A]]", "kind" : "implicit final def"}, {"label" : "semigroupFirst", "tail" : "(): Semigroup[First[A]]", "member" : "proptics.data.FirstInstances.semigroupFirst", "link" : "proptics\/data\/FirstInstances.html#semigroupFirst[A]:cats.Semigroup[proptics.data.First[A]]", "kind" : "implicit final def"}, {"label" : "showFirst", "tail" : "(arg0: Show[A]): Show[First[A]]", "member" : "proptics.data.FirstInstances.showFirst", "link" : "proptics\/data\/FirstInstances.html#showFirst[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.First[A]]", "kind" : "implicit final def"}, {"label" : "ordFirst", "tail" : "(arg0: Order[A]): Order[First[A]]", "member" : "proptics.data.FirstInstances.ordFirst", "link" : "proptics\/data\/FirstInstances.html#ordFirst[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.First[A]]", "kind" : "implicit final def"}, {"label" : "eqFirst", "tail" : "(arg0: Eq[A]): Eq[First[A]]", "member" : "proptics.data.FirstInstances.eqFirst", "link" : "proptics\/data\/FirstInstances.html#eqFirst[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.First[A]]", "kind" : "implicit final def"}, {"member" : "proptics.data.FirstInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/FirstInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/FirstInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/FirstInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/FirstInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/FirstInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/FirstInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/FirstInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/FirstInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/FirstInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/FirstInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/FirstInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/FirstInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/FirstInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/FirstInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/FirstInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/FirstInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/FirstInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/FirstInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/FirstInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/data\/FirstInstances.html", "kind" : "class"}, {"name" : "proptics.data.Last", "shortDescription" : "cats.Semigroup where combine always takes the last option", "object" : "proptics\/data\/Last$.html", "members_object" : [{"label" : "monadLast", "tail" : "(): Monad[Last]", "member" : "proptics.data.LastInstances.monadLast", "link" : "proptics\/data\/Last$.html#monadLast:cats.Monad[proptics.data.Last]", "kind" : "implicit final def"}, {"label" : "bindLast", "tail" : "(): FlatMap[Last]", "member" : "proptics.data.LastInstances.bindLast", "link" : "proptics\/data\/Last$.html#bindLast:cats.FlatMap[proptics.data.Last]", "kind" : "implicit final def"}, {"label" : "applicativeLast", "tail" : "(): Applicative[Last]", "member" : "proptics.data.LastInstances.applicativeLast", "link" : "proptics\/data\/Last$.html#applicativeLast:cats.Applicative[proptics.data.Last]", "kind" : "implicit final def"}, {"label" : "applyLast", "tail" : "(): Apply[Last]", "member" : "proptics.data.LastInstances.applyLast", "link" : "proptics\/data\/Last$.html#applyLast:cats.Apply[proptics.data.Last]", "kind" : "implicit final def"}, {"label" : "functorLast", "tail" : "(): Functor[Last]", "member" : "proptics.data.LastInstances.functorLast", "link" : "proptics\/data\/Last$.html#functorLast:cats.Functor[proptics.data.Last]", "kind" : "implicit final def"}, {"label" : "monoidLast", "tail" : "(): Monoid[Last[A]]", "member" : "proptics.data.LastInstances.monoidLast", "link" : "proptics\/data\/Last$.html#monoidLast[A]:cats.Monoid[proptics.data.Last[A]]", "kind" : "implicit final def"}, {"label" : "semigroupLast", "tail" : "(): Semigroup[Last[A]]", "member" : "proptics.data.LastInstances.semigroupLast", "link" : "proptics\/data\/Last$.html#semigroupLast[A]:cats.Semigroup[proptics.data.Last[A]]", "kind" : "implicit final def"}, {"label" : "showLast", "tail" : "(arg0: Show[A]): Show[Last[A]]", "member" : "proptics.data.LastInstances.showLast", "link" : "proptics\/data\/Last$.html#showLast[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.Last[A]]", "kind" : "implicit final def"}, {"label" : "ordLast", "tail" : "(arg0: Order[A]): Order[Last[A]]", "member" : "proptics.data.LastInstances.ordLast", "link" : "proptics\/data\/Last$.html#ordLast[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.Last[A]]", "kind" : "implicit final def"}, {"label" : "eqLast", "tail" : "(arg0: Eq[A]): Eq[Last[A]]", "member" : "proptics.data.LastInstances.eqLast", "link" : "proptics\/data\/Last$.html#eqLast[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.Last[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/Last$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/Last$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/Last$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/Last$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/Last$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/Last$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/Last$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Last$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Last$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Last$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/Last$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/Last$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/Last$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/Last$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/Last$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/Last$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/Last$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Last$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Last$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "proptics.data.Last#<init>", "error" : "unsupported entity"}, {"label" : "runLast", "tail" : ": Option[A]", "member" : "proptics.data.Last.runLast", "link" : "proptics\/data\/Last.html#runLast:Option[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/data\/Last.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/data\/Last.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/data\/Last.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Last.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Last.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/data\/Last.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/data\/Last.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/data\/Last.html", "kind" : "case class"}, {"name" : "proptics.data.LastInstances", "shortDescription" : "", "members_class" : [{"label" : "monadLast", "tail" : "(): Monad[Last]", "member" : "proptics.data.LastInstances.monadLast", "link" : "proptics\/data\/LastInstances.html#monadLast:cats.Monad[proptics.data.Last]", "kind" : "implicit final def"}, {"label" : "bindLast", "tail" : "(): FlatMap[Last]", "member" : "proptics.data.LastInstances.bindLast", "link" : "proptics\/data\/LastInstances.html#bindLast:cats.FlatMap[proptics.data.Last]", "kind" : "implicit final def"}, {"label" : "applicativeLast", "tail" : "(): Applicative[Last]", "member" : "proptics.data.LastInstances.applicativeLast", "link" : "proptics\/data\/LastInstances.html#applicativeLast:cats.Applicative[proptics.data.Last]", "kind" : "implicit final def"}, {"label" : "applyLast", "tail" : "(): Apply[Last]", "member" : "proptics.data.LastInstances.applyLast", "link" : "proptics\/data\/LastInstances.html#applyLast:cats.Apply[proptics.data.Last]", "kind" : "implicit final def"}, {"label" : "functorLast", "tail" : "(): Functor[Last]", "member" : "proptics.data.LastInstances.functorLast", "link" : "proptics\/data\/LastInstances.html#functorLast:cats.Functor[proptics.data.Last]", "kind" : "implicit final def"}, {"label" : "monoidLast", "tail" : "(): Monoid[Last[A]]", "member" : "proptics.data.LastInstances.monoidLast", "link" : "proptics\/data\/LastInstances.html#monoidLast[A]:cats.Monoid[proptics.data.Last[A]]", "kind" : "implicit final def"}, {"label" : "semigroupLast", "tail" : "(): Semigroup[Last[A]]", "member" : "proptics.data.LastInstances.semigroupLast", "link" : "proptics\/data\/LastInstances.html#semigroupLast[A]:cats.Semigroup[proptics.data.Last[A]]", "kind" : "implicit final def"}, {"label" : "showLast", "tail" : "(arg0: Show[A]): Show[Last[A]]", "member" : "proptics.data.LastInstances.showLast", "link" : "proptics\/data\/LastInstances.html#showLast[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.Last[A]]", "kind" : "implicit final def"}, {"label" : "ordLast", "tail" : "(arg0: Order[A]): Order[Last[A]]", "member" : "proptics.data.LastInstances.ordLast", "link" : "proptics\/data\/LastInstances.html#ordLast[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.Last[A]]", "kind" : "implicit final def"}, {"label" : "eqLast", "tail" : "(arg0: Eq[A]): Eq[Last[A]]", "member" : "proptics.data.LastInstances.eqLast", "link" : "proptics\/data\/LastInstances.html#eqLast[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.Last[A]]", "kind" : "implicit final def"}, {"member" : "proptics.data.LastInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/LastInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/LastInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/LastInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/LastInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/LastInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/LastInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/LastInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/LastInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/LastInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/LastInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/LastInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/LastInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/LastInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/LastInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/LastInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/LastInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/LastInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/LastInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/LastInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/data\/LastInstances.html", "kind" : "class"}, {"name" : "proptics.data.Multiplicative", "shortDescription" : "cats.Monoid and cats.Semigroup under multiplication", "object" : "proptics\/data\/Multiplicative$.html", "members_object" : [{"label" : "monadMultiplicative", "tail" : "(): Monad[Multiplicative]", "member" : "proptics.data.MultiplicativeInstances.monadMultiplicative", "link" : "proptics\/data\/Multiplicative$.html#monadMultiplicative:cats.Monad[proptics.data.Multiplicative]", "kind" : "implicit final def"}, {"label" : "bindMultiplicative", "tail" : "(): FlatMap[Multiplicative]", "member" : "proptics.data.MultiplicativeInstances.bindMultiplicative", "link" : "proptics\/data\/Multiplicative$.html#bindMultiplicative:cats.FlatMap[proptics.data.Multiplicative]", "kind" : "implicit final def"}, {"label" : "applicativeMultiplicative", "tail" : "(): Applicative[Multiplicative]", "member" : "proptics.data.MultiplicativeInstances.applicativeMultiplicative", "link" : "proptics\/data\/Multiplicative$.html#applicativeMultiplicative:cats.Applicative[proptics.data.Multiplicative]", "kind" : "implicit final def"}, {"label" : "applyMultiplicative", "tail" : "(): Apply[Multiplicative]", "member" : "proptics.data.MultiplicativeInstances.applyMultiplicative", "link" : "proptics\/data\/Multiplicative$.html#applyMultiplicative:cats.Apply[proptics.data.Multiplicative]", "kind" : "implicit final def"}, {"label" : "functorMultiplicative", "tail" : "(): Functor[Multiplicative]", "member" : "proptics.data.MultiplicativeInstances.functorMultiplicative", "link" : "proptics\/data\/Multiplicative$.html#functorMultiplicative:cats.Functor[proptics.data.Multiplicative]", "kind" : "implicit final def"}, {"label" : "monoidMultiplicative", "tail" : "(ev: MultiplicativeMonoid[A]): Monoid[Multiplicative[A]]", "member" : "proptics.data.MultiplicativeInstances.monoidMultiplicative", "link" : "proptics\/data\/Multiplicative$.html#monoidMultiplicative[A](implicitev:spire.algebra.MultiplicativeMonoid[A]):cats.Monoid[proptics.data.Multiplicative[A]]", "kind" : "implicit final def"}, {"label" : "semigroupMultiplicative", "tail" : "(arg0: MultiplicativeMonoid[A]): Semigroup[Multiplicative[A]]", "member" : "proptics.data.MultiplicativeInstances.semigroupMultiplicative", "link" : "proptics\/data\/Multiplicative$.html#semigroupMultiplicative[A](implicitevidence$4:spire.algebra.MultiplicativeMonoid[A]):cats.Semigroup[proptics.data.Multiplicative[A]]", "kind" : "implicit final def"}, {"label" : "showMultiplicative", "tail" : "(arg0: Show[A]): Show[Multiplicative[A]]", "member" : "proptics.data.MultiplicativeInstances.showMultiplicative", "link" : "proptics\/data\/Multiplicative$.html#showMultiplicative[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.Multiplicative[A]]", "kind" : "implicit final def"}, {"label" : "ordMultiplicative", "tail" : "(arg0: Order[A]): Order[Multiplicative[A]]", "member" : "proptics.data.MultiplicativeInstances.ordMultiplicative", "link" : "proptics\/data\/Multiplicative$.html#ordMultiplicative[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.Multiplicative[A]]", "kind" : "implicit final def"}, {"label" : "eqMultiplicative", "tail" : "(arg0: Eq[A]): Eq[Multiplicative[A]]", "member" : "proptics.data.MultiplicativeInstances.eqMultiplicative", "link" : "proptics\/data\/Multiplicative$.html#eqMultiplicative[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.Multiplicative[A]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/Multiplicative$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/Multiplicative$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/Multiplicative$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/Multiplicative$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/Multiplicative$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/Multiplicative$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/Multiplicative$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Multiplicative$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Multiplicative$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/Multiplicative$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/Multiplicative$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/Multiplicative$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/Multiplicative$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/Multiplicative$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/Multiplicative$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/Multiplicative$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/Multiplicative$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Multiplicative$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Multiplicative$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "proptics.data.Multiplicative#<init>", "error" : "unsupported entity"}, {"label" : "runMultiplicative", "tail" : ": A", "member" : "proptics.data.Multiplicative.runMultiplicative", "link" : "proptics\/data\/Multiplicative.html#runMultiplicative:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/data\/Multiplicative.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/data\/Multiplicative.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/data\/Multiplicative.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/Multiplicative.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/Multiplicative.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/data\/Multiplicative.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/data\/Multiplicative.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/data\/Multiplicative.html", "kind" : "case class"}, {"name" : "proptics.data.MultiplicativeInstances", "shortDescription" : "", "members_class" : [{"label" : "monadMultiplicative", "tail" : "(): Monad[Multiplicative]", "member" : "proptics.data.MultiplicativeInstances.monadMultiplicative", "link" : "proptics\/data\/MultiplicativeInstances.html#monadMultiplicative:cats.Monad[proptics.data.Multiplicative]", "kind" : "implicit final def"}, {"label" : "bindMultiplicative", "tail" : "(): FlatMap[Multiplicative]", "member" : "proptics.data.MultiplicativeInstances.bindMultiplicative", "link" : "proptics\/data\/MultiplicativeInstances.html#bindMultiplicative:cats.FlatMap[proptics.data.Multiplicative]", "kind" : "implicit final def"}, {"label" : "applicativeMultiplicative", "tail" : "(): Applicative[Multiplicative]", "member" : "proptics.data.MultiplicativeInstances.applicativeMultiplicative", "link" : "proptics\/data\/MultiplicativeInstances.html#applicativeMultiplicative:cats.Applicative[proptics.data.Multiplicative]", "kind" : "implicit final def"}, {"label" : "applyMultiplicative", "tail" : "(): Apply[Multiplicative]", "member" : "proptics.data.MultiplicativeInstances.applyMultiplicative", "link" : "proptics\/data\/MultiplicativeInstances.html#applyMultiplicative:cats.Apply[proptics.data.Multiplicative]", "kind" : "implicit final def"}, {"label" : "functorMultiplicative", "tail" : "(): Functor[Multiplicative]", "member" : "proptics.data.MultiplicativeInstances.functorMultiplicative", "link" : "proptics\/data\/MultiplicativeInstances.html#functorMultiplicative:cats.Functor[proptics.data.Multiplicative]", "kind" : "implicit final def"}, {"label" : "monoidMultiplicative", "tail" : "(ev: MultiplicativeMonoid[A]): Monoid[Multiplicative[A]]", "member" : "proptics.data.MultiplicativeInstances.monoidMultiplicative", "link" : "proptics\/data\/MultiplicativeInstances.html#monoidMultiplicative[A](implicitev:spire.algebra.MultiplicativeMonoid[A]):cats.Monoid[proptics.data.Multiplicative[A]]", "kind" : "implicit final def"}, {"label" : "semigroupMultiplicative", "tail" : "(arg0: MultiplicativeMonoid[A]): Semigroup[Multiplicative[A]]", "member" : "proptics.data.MultiplicativeInstances.semigroupMultiplicative", "link" : "proptics\/data\/MultiplicativeInstances.html#semigroupMultiplicative[A](implicitevidence$4:spire.algebra.MultiplicativeMonoid[A]):cats.Semigroup[proptics.data.Multiplicative[A]]", "kind" : "implicit final def"}, {"label" : "showMultiplicative", "tail" : "(arg0: Show[A]): Show[Multiplicative[A]]", "member" : "proptics.data.MultiplicativeInstances.showMultiplicative", "link" : "proptics\/data\/MultiplicativeInstances.html#showMultiplicative[A](implicitevidence$3:cats.Show[A]):cats.Show[proptics.data.Multiplicative[A]]", "kind" : "implicit final def"}, {"label" : "ordMultiplicative", "tail" : "(arg0: Order[A]): Order[Multiplicative[A]]", "member" : "proptics.data.MultiplicativeInstances.ordMultiplicative", "link" : "proptics\/data\/MultiplicativeInstances.html#ordMultiplicative[A](implicitevidence$2:cats.Order[A]):cats.Order[proptics.data.Multiplicative[A]]", "kind" : "implicit final def"}, {"label" : "eqMultiplicative", "tail" : "(arg0: Eq[A]): Eq[Multiplicative[A]]", "member" : "proptics.data.MultiplicativeInstances.eqMultiplicative", "link" : "proptics\/data\/MultiplicativeInstances.html#eqMultiplicative[A](implicitevidence$1:cats.Eq[A]):cats.Eq[proptics.data.Multiplicative[A]]", "kind" : "implicit final def"}, {"member" : "proptics.data.MultiplicativeInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/data\/MultiplicativeInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/data\/MultiplicativeInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/data\/MultiplicativeInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/data\/MultiplicativeInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/data\/MultiplicativeInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/data\/MultiplicativeInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/data\/MultiplicativeInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/MultiplicativeInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/MultiplicativeInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/data\/MultiplicativeInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/data\/MultiplicativeInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/data\/MultiplicativeInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/data\/MultiplicativeInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/data\/MultiplicativeInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/data\/MultiplicativeInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/data\/MultiplicativeInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/data\/MultiplicativeInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/data\/MultiplicativeInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/data\/MultiplicativeInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/data\/MultiplicativeInstances.html", "kind" : "class"}], "proptics.internal" : [{"name" : "proptics.internal.Bazaar", "object" : "proptics\/internal\/Bazaar$.html", "members_object" : [{"label" : "wanderBazaar", "tail" : "(): Wander[[δ$38$, ε$39$]Bazaar[P, G, H, δ$38$, ε$39$]]", "member" : "proptics.internal.BazaarInstances.wanderBazaar", "link" : "proptics\/internal\/Bazaar$.html#wanderBazaar[P[_,_],G,H]:proptics.profunctor.Wander[[δ$38$,ε$39$]proptics.internal.Bazaar[P,G,H,δ$38$,ε$39$]]", "kind" : "implicit final def"}, {"label" : "choiceBazaar", "tail" : "(): Choice[[δ$34$, ε$35$]Bazaar[P, G, H, δ$34$, ε$35$]]", "member" : "proptics.internal.BazaarInstances.choiceBazaar", "link" : "proptics\/internal\/Bazaar$.html#choiceBazaar[P[_,_],G,H]:proptics.profunctor.Choice[[δ$34$,ε$35$]proptics.internal.Bazaar[P,G,H,δ$34$,ε$35$]]", "kind" : "implicit final def"}, {"label" : "strongBazaar", "tail" : "(): Strong[[δ$30$, ε$31$]Bazaar[P, G, H, δ$30$, ε$31$]]", "member" : "proptics.internal.BazaarInstances.strongBazaar", "link" : "proptics\/internal\/Bazaar$.html#strongBazaar[P[_,_],G,H]:cats.arrow.Strong[[δ$30$,ε$31$]proptics.internal.Bazaar[P,G,H,δ$30$,ε$31$]]", "kind" : "implicit final def"}, {"label" : "profunctorBazaar", "tail" : "(): Profunctor[[δ$26$, ε$27$]Bazaar[P, G, H, δ$26$, ε$27$]]", "member" : "proptics.internal.BazaarInstances.profunctorBazaar", "link" : "proptics\/internal\/Bazaar$.html#profunctorBazaar[P[_,_],G,H]:cats.arrow.Profunctor[[δ$26$,ε$27$]proptics.internal.Bazaar[P,G,H,δ$26$,ε$27$]]", "kind" : "implicit final def"}, {"label" : "applicativeBazaar", "tail" : "(): Applicative[[ε$2$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, C, D, Unit, ε$2$]]", "member" : "proptics.internal.BazaarInstances.applicativeBazaar", "link" : "proptics\/internal\/Bazaar$.html#applicativeBazaar[C,D]:cats.Applicative[[ε$2$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,C,D,Unit,ε$2$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Bazaar$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Bazaar$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Bazaar$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Bazaar$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Bazaar$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Bazaar$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Bazaar$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Bazaar$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Bazaar$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Bazaar$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Bazaar$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Bazaar$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Bazaar$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Bazaar$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Bazaar$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Bazaar$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Bazaar$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Bazaar$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Bazaar$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/internal\/Bazaar.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Bazaar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Bazaar.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Bazaar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Bazaar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Bazaar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Bazaar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Bazaar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Bazaar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Bazaar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Bazaar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Bazaar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Bazaar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Bazaar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Bazaar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Bazaar.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Bazaar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Bazaar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Bazaar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Bazaar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "runBazaar", "tail" : "(): RunBazaar[P, A, B, S, T]", "member" : "proptics.internal.Bazaar.runBazaar", "link" : "proptics\/internal\/Bazaar.html#runBazaar:proptics.internal.RunBazaar[P,A,B,S,T]", "kind" : "abstract def"}], "shortDescription" : "Bazaar is used to characterize a proptics.Traversal_"}, {"name" : "proptics.internal.BazaarInstances", "shortDescription" : "", "members_class" : [{"label" : "wanderBazaar", "tail" : "(): Wander[[δ$38$, ε$39$]Bazaar[P, G, H, δ$38$, ε$39$]]", "member" : "proptics.internal.BazaarInstances.wanderBazaar", "link" : "proptics\/internal\/BazaarInstances.html#wanderBazaar[P[_,_],G,H]:proptics.profunctor.Wander[[δ$38$,ε$39$]proptics.internal.Bazaar[P,G,H,δ$38$,ε$39$]]", "kind" : "implicit final def"}, {"label" : "choiceBazaar", "tail" : "(): Choice[[δ$34$, ε$35$]Bazaar[P, G, H, δ$34$, ε$35$]]", "member" : "proptics.internal.BazaarInstances.choiceBazaar", "link" : "proptics\/internal\/BazaarInstances.html#choiceBazaar[P[_,_],G,H]:proptics.profunctor.Choice[[δ$34$,ε$35$]proptics.internal.Bazaar[P,G,H,δ$34$,ε$35$]]", "kind" : "implicit final def"}, {"label" : "strongBazaar", "tail" : "(): Strong[[δ$30$, ε$31$]Bazaar[P, G, H, δ$30$, ε$31$]]", "member" : "proptics.internal.BazaarInstances.strongBazaar", "link" : "proptics\/internal\/BazaarInstances.html#strongBazaar[P[_,_],G,H]:cats.arrow.Strong[[δ$30$,ε$31$]proptics.internal.Bazaar[P,G,H,δ$30$,ε$31$]]", "kind" : "implicit final def"}, {"label" : "profunctorBazaar", "tail" : "(): Profunctor[[δ$26$, ε$27$]Bazaar[P, G, H, δ$26$, ε$27$]]", "member" : "proptics.internal.BazaarInstances.profunctorBazaar", "link" : "proptics\/internal\/BazaarInstances.html#profunctorBazaar[P[_,_],G,H]:cats.arrow.Profunctor[[δ$26$,ε$27$]proptics.internal.Bazaar[P,G,H,δ$26$,ε$27$]]", "kind" : "implicit final def"}, {"label" : "applicativeBazaar", "tail" : "(): Applicative[[ε$2$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, C, D, Unit, ε$2$]]", "member" : "proptics.internal.BazaarInstances.applicativeBazaar", "link" : "proptics\/internal\/BazaarInstances.html#applicativeBazaar[C,D]:cats.Applicative[[ε$2$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,C,D,Unit,ε$2$]]", "kind" : "implicit final def"}, {"member" : "proptics.internal.BazaarInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/BazaarInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/BazaarInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/BazaarInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/BazaarInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/BazaarInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/BazaarInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/BazaarInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/BazaarInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/BazaarInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/BazaarInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/BazaarInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/BazaarInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/BazaarInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/BazaarInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/BazaarInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/BazaarInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/BazaarInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/BazaarInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/BazaarInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/internal\/BazaarInstances.html", "kind" : "class"}, {"name" : "proptics.internal.Corepresentable", "shortDescription" : "", "object" : "proptics\/internal\/Corepresentable$.html", "members_object" : [{"label" : "corepresentableState", "tail" : "(): Aux[[α$20$, β$21$](α$20$) => β$21$, [β$22$]IndexedStateT[Eval, List[C], List[C], β$22$]]", "member" : "proptics.internal.CorepresentableInstances.corepresentableState", "link" : "proptics\/internal\/Corepresentable$.html#corepresentableState[C]:proptics.profunctor.Corepresentable.Aux[[α$20$,β$21$]α$20$=>β$21$,[β$22$]cats.data.IndexedStateT[cats.Eval,List[C],List[C],β$22$]]", "kind" : "implicit def"}, {"label" : "corepresentableBazaar", "tail" : "(): Aux[[α$2$, β$3$](α$2$) => β$3$, [ε$4$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, List[C], List[D], Unit, ε$4$]]", "member" : "proptics.internal.CorepresentableInstances.corepresentableBazaar", "link" : "proptics\/internal\/Corepresentable$.html#corepresentableBazaar[C,D]:proptics.profunctor.Corepresentable.Aux[[α$2$,β$3$]α$2$=>β$3$,[ε$4$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,List[C],List[D],Unit,ε$4$]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Corepresentable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Corepresentable$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Corepresentable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Corepresentable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Corepresentable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Corepresentable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Corepresentable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Corepresentable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Corepresentable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Corepresentable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Corepresentable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Corepresentable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Corepresentable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Corepresentable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Corepresentable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Corepresentable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Corepresentable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Corepresentable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Corepresentable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.internal.CorepresentableInstances", "trait" : "proptics\/internal\/CorepresentableInstances.html", "kind" : "trait", "members_trait" : [{"label" : "corepresentableState", "tail" : "(): Aux[[α$20$, β$21$](α$20$) => β$21$, [β$22$]IndexedStateT[Eval, List[C], List[C], β$22$]]", "member" : "proptics.internal.CorepresentableInstances.corepresentableState", "link" : "proptics\/internal\/CorepresentableInstances.html#corepresentableState[C]:proptics.profunctor.Corepresentable.Aux[[α$20$,β$21$]α$20$=>β$21$,[β$22$]cats.data.IndexedStateT[cats.Eval,List[C],List[C],β$22$]]", "kind" : "implicit def"}, {"label" : "corepresentableBazaar", "tail" : "(): Aux[[α$2$, β$3$](α$2$) => β$3$, [ε$4$]Bazaar[[α$0$, β$1$](α$0$) => β$1$, List[C], List[D], Unit, ε$4$]]", "member" : "proptics.internal.CorepresentableInstances.corepresentableBazaar", "link" : "proptics\/internal\/CorepresentableInstances.html#corepresentableBazaar[C,D]:proptics.profunctor.Corepresentable.Aux[[α$2$,β$3$]α$2$=>β$3$,[ε$4$]proptics.internal.Bazaar[[α$0$,β$1$]α$0$=>β$1$,List[C],List[D],Unit,ε$4$]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/CorepresentableInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/CorepresentableInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/CorepresentableInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/CorepresentableInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/CorepresentableInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/CorepresentableInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/CorepresentableInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/CorepresentableInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/CorepresentableInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/CorepresentableInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/CorepresentableInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/CorepresentableInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/CorepresentableInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/CorepresentableInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/CorepresentableInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/CorepresentableInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/CorepresentableInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/CorepresentableInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/CorepresentableInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.internal.Exchange", "shortDescription" : "The Exchange cats.arrow.Profunctor characterizes an proptics.Iso_", "object" : "proptics\/internal\/Exchange$.html", "members_object" : [{"label" : "profunctorExchange", "tail" : "(): Profunctor[[γ$2$, δ$3$]Exchange[E, F, γ$2$, δ$3$]]", "member" : "proptics.internal.ExchangeInstances.profunctorExchange", "link" : "proptics\/internal\/Exchange$.html#profunctorExchange[E,F]:cats.arrow.Profunctor[[γ$2$,δ$3$]proptics.internal.Exchange[E,F,γ$2$,δ$3$]]", "kind" : "implicit final def"}, {"label" : "functorExchange", "tail" : "(): Functor[[δ$0$]Exchange[C, D, S, δ$0$]]", "member" : "proptics.internal.ExchangeInstances.functorExchange", "link" : "proptics\/internal\/Exchange$.html#functorExchange[C,D,S]:cats.Functor[[δ$0$]proptics.internal.Exchange[C,D,S,δ$0$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Exchange$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Exchange$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Exchange$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Exchange$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Exchange$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Exchange$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Exchange$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Exchange$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Exchange$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Exchange$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Exchange$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Exchange$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Exchange$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Exchange$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Exchange$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Exchange$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Exchange$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Exchange$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Exchange$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "compose", "tail" : "(other: Exchange[C, D, A, B]): Exchange[C, D, S, T]", "member" : "proptics.internal.Exchange.compose", "link" : "proptics\/internal\/Exchange.html#compose[C,D](other:proptics.internal.Exchange[C,D,A,B]):proptics.internal.Exchange[C,D,S,T]", "kind" : "def"}, {"member" : "proptics.internal.Exchange#<init>", "error" : "unsupported entity"}, {"label" : "review", "tail" : ": (B) => T", "member" : "proptics.internal.Exchange.review", "link" : "proptics\/internal\/Exchange.html#review:B=>T", "kind" : "val"}, {"label" : "view", "tail" : ": (S) => A", "member" : "proptics.internal.Exchange.view", "link" : "proptics\/internal\/Exchange.html#view:S=>A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/internal\/Exchange.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Exchange.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Exchange.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Exchange.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Exchange.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Exchange.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Exchange.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Exchange.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Exchange.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Exchange.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Exchange.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Exchange.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Exchange.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Exchange.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Exchange.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Exchange.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Exchange.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "proptics\/internal\/Exchange.html", "kind" : "case class"}, {"name" : "proptics.internal.ExchangeInstances", "shortDescription" : "", "members_class" : [{"label" : "profunctorExchange", "tail" : "(): Profunctor[[γ$2$, δ$3$]Exchange[E, F, γ$2$, δ$3$]]", "member" : "proptics.internal.ExchangeInstances.profunctorExchange", "link" : "proptics\/internal\/ExchangeInstances.html#profunctorExchange[E,F]:cats.arrow.Profunctor[[γ$2$,δ$3$]proptics.internal.Exchange[E,F,γ$2$,δ$3$]]", "kind" : "implicit final def"}, {"label" : "functorExchange", "tail" : "(): Functor[[δ$0$]Exchange[C, D, S, δ$0$]]", "member" : "proptics.internal.ExchangeInstances.functorExchange", "link" : "proptics\/internal\/ExchangeInstances.html#functorExchange[C,D,S]:cats.Functor[[δ$0$]proptics.internal.Exchange[C,D,S,δ$0$]]", "kind" : "implicit final def"}, {"member" : "proptics.internal.ExchangeInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/ExchangeInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/ExchangeInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/ExchangeInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/ExchangeInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/ExchangeInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/ExchangeInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/ExchangeInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ExchangeInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ExchangeInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ExchangeInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/ExchangeInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/ExchangeInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/ExchangeInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/ExchangeInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/ExchangeInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/ExchangeInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/ExchangeInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/ExchangeInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/ExchangeInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/internal\/ExchangeInstances.html", "kind" : "class"}, {"name" : "proptics.internal.Forget", "shortDescription" : "Forget is a cats.arrow.Profunctor that forgets the B value and returns an accumulated value of type R.", "object" : "proptics\/internal\/Forget$.html", "members_object" : [{"label" : "wanderForget", "tail" : "(arg0: Monoid[R]): Wander[[β$18$, γ$19$]Forget[R, β$18$, γ$19$]]", "member" : "proptics.internal.ForgetInstances.wanderForget", "link" : "proptics\/internal\/Forget$.html#wanderForget[R](implicitevidence$1:cats.Monoid[R]):proptics.profunctor.Wander[[β$18$,γ$19$]proptics.internal.Forget[R,β$18$,γ$19$]]", "kind" : "implicit final def"}, {"label" : "cochoiceForget", "tail" : "(ev: Monoid[R]): Cochoice[[β$14$, γ$15$]Forget[R, β$14$, γ$15$]]", "member" : "proptics.internal.ForgetInstances.cochoiceForget", "link" : "proptics\/internal\/Forget$.html#cochoiceForget[R](implicitev:cats.Monoid[R]):proptics.profunctor.Cochoice[[β$14$,γ$15$]proptics.internal.Forget[R,β$14$,γ$15$]]", "kind" : "implicit final def"}, {"label" : "strongForget", "tail" : "(ev: Profunctor[[β$8$, γ$9$]Forget[R, β$8$, γ$9$]]): Strong[[β$10$, γ$11$]Forget[R, β$10$, γ$11$]]", "member" : "proptics.internal.ForgetInstances.strongForget", "link" : "proptics\/internal\/Forget$.html#strongForget[R](implicitev:cats.arrow.Profunctor[[β$8$,γ$9$]proptics.internal.Forget[R,β$8$,γ$9$]]):cats.arrow.Strong[[β$10$,γ$11$]proptics.internal.Forget[R,β$10$,γ$11$]]", "kind" : "implicit final def"}, {"label" : "choiceForget", "tail" : "(ev: Monoid[R]): Choice[[β$4$, γ$5$]Forget[R, β$4$, γ$5$]]", "member" : "proptics.internal.ForgetInstances.choiceForget", "link" : "proptics\/internal\/Forget$.html#choiceForget[R](implicitev:cats.Monoid[R]):proptics.profunctor.Choice[[β$4$,γ$5$]proptics.internal.Forget[R,β$4$,γ$5$]]", "kind" : "implicit final def"}, {"label" : "profunctorForget", "tail" : "(): Profunctor[[β$0$, γ$1$]Forget[R, β$0$, γ$1$]]", "member" : "proptics.internal.ForgetInstances.profunctorForget", "link" : "proptics\/internal\/Forget$.html#profunctorForget[R]:cats.arrow.Profunctor[[β$0$,γ$1$]proptics.internal.Forget[R,β$0$,γ$1$]]", "kind" : "implicit final def"}, {"label" : "monoidForget", "tail" : "(ev: Monoid[R]): Monoid[Forget[R, A, B]]", "member" : "proptics.internal.ForgetInstances.monoidForget", "link" : "proptics\/internal\/Forget$.html#monoidForget[R,A,B](implicitev:cats.Monoid[R]):cats.Monoid[proptics.internal.Forget[R,A,B]]", "kind" : "implicit final def"}, {"label" : "semigroupForget", "tail" : "(ev: Semigroup[R]): Semigroup[Forget[R, A, B]]", "member" : "proptics.internal.ForgetInstances.semigroupForget", "link" : "proptics\/internal\/Forget$.html#semigroupForget[R,A,B](implicitev:cats.Semigroup[R]):cats.Semigroup[proptics.internal.Forget[R,A,B]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Forget$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Forget$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Forget$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Forget$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Forget$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Forget$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Forget$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Forget$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Forget$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Forget$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Forget$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Forget$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Forget$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Forget$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Forget$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Forget$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Forget$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Forget$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Forget$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "proptics.internal.Forget#<init>", "error" : "unsupported entity"}, {"label" : "runForget", "tail" : ": (A) => R", "member" : "proptics.internal.Forget.runForget", "link" : "proptics\/internal\/Forget.html#runForget:A=>R", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/internal\/Forget.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/internal\/Forget.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/internal\/Forget.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Forget.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Forget.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/internal\/Forget.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/internal\/Forget.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/internal\/Forget.html", "kind" : "case class"}, {"name" : "proptics.internal.ForgetInstances", "shortDescription" : "", "members_class" : [{"label" : "wanderForget", "tail" : "(arg0: Monoid[R]): Wander[[β$18$, γ$19$]Forget[R, β$18$, γ$19$]]", "member" : "proptics.internal.ForgetInstances.wanderForget", "link" : "proptics\/internal\/ForgetInstances.html#wanderForget[R](implicitevidence$1:cats.Monoid[R]):proptics.profunctor.Wander[[β$18$,γ$19$]proptics.internal.Forget[R,β$18$,γ$19$]]", "kind" : "implicit final def"}, {"label" : "cochoiceForget", "tail" : "(ev: Monoid[R]): Cochoice[[β$14$, γ$15$]Forget[R, β$14$, γ$15$]]", "member" : "proptics.internal.ForgetInstances.cochoiceForget", "link" : "proptics\/internal\/ForgetInstances.html#cochoiceForget[R](implicitev:cats.Monoid[R]):proptics.profunctor.Cochoice[[β$14$,γ$15$]proptics.internal.Forget[R,β$14$,γ$15$]]", "kind" : "implicit final def"}, {"label" : "strongForget", "tail" : "(ev: Profunctor[[β$8$, γ$9$]Forget[R, β$8$, γ$9$]]): Strong[[β$10$, γ$11$]Forget[R, β$10$, γ$11$]]", "member" : "proptics.internal.ForgetInstances.strongForget", "link" : "proptics\/internal\/ForgetInstances.html#strongForget[R](implicitev:cats.arrow.Profunctor[[β$8$,γ$9$]proptics.internal.Forget[R,β$8$,γ$9$]]):cats.arrow.Strong[[β$10$,γ$11$]proptics.internal.Forget[R,β$10$,γ$11$]]", "kind" : "implicit final def"}, {"label" : "choiceForget", "tail" : "(ev: Monoid[R]): Choice[[β$4$, γ$5$]Forget[R, β$4$, γ$5$]]", "member" : "proptics.internal.ForgetInstances.choiceForget", "link" : "proptics\/internal\/ForgetInstances.html#choiceForget[R](implicitev:cats.Monoid[R]):proptics.profunctor.Choice[[β$4$,γ$5$]proptics.internal.Forget[R,β$4$,γ$5$]]", "kind" : "implicit final def"}, {"label" : "profunctorForget", "tail" : "(): Profunctor[[β$0$, γ$1$]Forget[R, β$0$, γ$1$]]", "member" : "proptics.internal.ForgetInstances.profunctorForget", "link" : "proptics\/internal\/ForgetInstances.html#profunctorForget[R]:cats.arrow.Profunctor[[β$0$,γ$1$]proptics.internal.Forget[R,β$0$,γ$1$]]", "kind" : "implicit final def"}, {"label" : "monoidForget", "tail" : "(ev: Monoid[R]): Monoid[Forget[R, A, B]]", "member" : "proptics.internal.ForgetInstances.monoidForget", "link" : "proptics\/internal\/ForgetInstances.html#monoidForget[R,A,B](implicitev:cats.Monoid[R]):cats.Monoid[proptics.internal.Forget[R,A,B]]", "kind" : "implicit final def"}, {"label" : "semigroupForget", "tail" : "(ev: Semigroup[R]): Semigroup[Forget[R, A, B]]", "member" : "proptics.internal.ForgetInstances.semigroupForget", "link" : "proptics\/internal\/ForgetInstances.html#semigroupForget[R,A,B](implicitev:cats.Semigroup[R]):cats.Semigroup[proptics.internal.Forget[R,A,B]]", "kind" : "implicit final def"}, {"member" : "proptics.internal.ForgetInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/ForgetInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/ForgetInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/ForgetInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/ForgetInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/ForgetInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/ForgetInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/ForgetInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ForgetInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ForgetInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ForgetInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/ForgetInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/ForgetInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/ForgetInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/ForgetInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/ForgetInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/ForgetInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/ForgetInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/ForgetInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/ForgetInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/internal\/ForgetInstances.html", "kind" : "class"}, {"name" : "proptics.internal.Indexed", "shortDescription" : "cats.arrow.Profunctor used for indexed optics", "object" : "proptics\/internal\/Indexed$.html", "members_object" : [{"label" : "wanderIndexed", "tail" : "(ev: Wander[P]): Wander[[γ$12$, δ$13$]Indexed[P, I, γ$12$, δ$13$]]", "member" : "proptics.internal.IndexedInstances.wanderIndexed", "link" : "proptics\/internal\/Indexed$.html#wanderIndexed[P[_,_],I](implicitev:proptics.profunctor.Wander[P]):proptics.profunctor.Wander[[γ$12$,δ$13$]proptics.internal.Indexed[P,I,γ$12$,δ$13$]]", "kind" : "implicit final def"}, {"label" : "choiceIndexed", "tail" : "(ev: Choice[P]): Choice[[γ$8$, δ$9$]Indexed[P, I, γ$8$, δ$9$]]", "member" : "proptics.internal.IndexedInstances.choiceIndexed", "link" : "proptics\/internal\/Indexed$.html#choiceIndexed[P[_,_],I](implicitev:proptics.profunctor.Choice[P]):proptics.profunctor.Choice[[γ$8$,δ$9$]proptics.internal.Indexed[P,I,γ$8$,δ$9$]]", "kind" : "implicit final def"}, {"label" : "strongIndexed", "tail" : "(ev: Strong[P]): Strong[[γ$4$, δ$5$]Indexed[P, I, γ$4$, δ$5$]]", "member" : "proptics.internal.IndexedInstances.strongIndexed", "link" : "proptics\/internal\/Indexed$.html#strongIndexed[P[_,_],I](implicitev:cats.arrow.Strong[P]):cats.arrow.Strong[[γ$4$,δ$5$]proptics.internal.Indexed[P,I,γ$4$,δ$5$]]", "kind" : "implicit final def"}, {"label" : "profunctorIndexed", "tail" : "(ev: Profunctor[P]): Profunctor[[γ$0$, δ$1$]Indexed[P, I, γ$0$, δ$1$]]", "member" : "proptics.internal.IndexedInstances.profunctorIndexed", "link" : "proptics\/internal\/Indexed$.html#profunctorIndexed[P[_,_],I](implicitev:cats.arrow.Profunctor[P]):cats.arrow.Profunctor[[γ$0$,δ$1$]proptics.internal.Indexed[P,I,γ$0$,δ$1$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Indexed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Indexed$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Indexed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Indexed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Indexed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Indexed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Indexed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Indexed$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Indexed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Indexed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Indexed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Indexed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Indexed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Indexed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Indexed$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Indexed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Indexed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Indexed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Indexed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "reindex", "tail" : "(f: (J) => I)(ev: Profunctor[P]): Indexed[P, J, S, T]", "member" : "proptics.internal.Indexed.reindex", "link" : "proptics\/internal\/Indexed.html#reindex[J](f:J=>I)(implicitev:cats.arrow.Profunctor[P]):proptics.internal.Indexed[P,J,S,T]", "kind" : "def"}, {"member" : "proptics.internal.Indexed#<init>", "error" : "unsupported entity"}, {"label" : "runIndex", "tail" : ": P[(S, I), T]", "member" : "proptics.internal.Indexed.runIndex", "link" : "proptics\/internal\/Indexed.html#runIndex:P[(S,I),T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/internal\/Indexed.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/internal\/Indexed.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/internal\/Indexed.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Indexed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Indexed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/internal\/Indexed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/internal\/Indexed.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/internal\/Indexed.html", "kind" : "case class"}, {"name" : "proptics.internal.IndexedInstances", "shortDescription" : "", "members_class" : [{"label" : "wanderIndexed", "tail" : "(ev: Wander[P]): Wander[[γ$12$, δ$13$]Indexed[P, I, γ$12$, δ$13$]]", "member" : "proptics.internal.IndexedInstances.wanderIndexed", "link" : "proptics\/internal\/IndexedInstances.html#wanderIndexed[P[_,_],I](implicitev:proptics.profunctor.Wander[P]):proptics.profunctor.Wander[[γ$12$,δ$13$]proptics.internal.Indexed[P,I,γ$12$,δ$13$]]", "kind" : "implicit final def"}, {"label" : "choiceIndexed", "tail" : "(ev: Choice[P]): Choice[[γ$8$, δ$9$]Indexed[P, I, γ$8$, δ$9$]]", "member" : "proptics.internal.IndexedInstances.choiceIndexed", "link" : "proptics\/internal\/IndexedInstances.html#choiceIndexed[P[_,_],I](implicitev:proptics.profunctor.Choice[P]):proptics.profunctor.Choice[[γ$8$,δ$9$]proptics.internal.Indexed[P,I,γ$8$,δ$9$]]", "kind" : "implicit final def"}, {"label" : "strongIndexed", "tail" : "(ev: Strong[P]): Strong[[γ$4$, δ$5$]Indexed[P, I, γ$4$, δ$5$]]", "member" : "proptics.internal.IndexedInstances.strongIndexed", "link" : "proptics\/internal\/IndexedInstances.html#strongIndexed[P[_,_],I](implicitev:cats.arrow.Strong[P]):cats.arrow.Strong[[γ$4$,δ$5$]proptics.internal.Indexed[P,I,γ$4$,δ$5$]]", "kind" : "implicit final def"}, {"label" : "profunctorIndexed", "tail" : "(ev: Profunctor[P]): Profunctor[[γ$0$, δ$1$]Indexed[P, I, γ$0$, δ$1$]]", "member" : "proptics.internal.IndexedInstances.profunctorIndexed", "link" : "proptics\/internal\/IndexedInstances.html#profunctorIndexed[P[_,_],I](implicitev:cats.arrow.Profunctor[P]):cats.arrow.Profunctor[[γ$0$,δ$1$]proptics.internal.Indexed[P,I,γ$0$,δ$1$]]", "kind" : "implicit final def"}, {"member" : "proptics.internal.IndexedInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/IndexedInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/IndexedInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/IndexedInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/IndexedInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/IndexedInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/IndexedInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/IndexedInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/IndexedInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/IndexedInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/IndexedInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/IndexedInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/IndexedInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/IndexedInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/IndexedInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/IndexedInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/IndexedInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/IndexedInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/IndexedInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/IndexedInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/internal\/IndexedInstances.html", "kind" : "class"}, {"name" : "proptics.internal.Market", "shortDescription" : "The Market cats.arrow.Profunctor characterizes a proptics.Prism_", "object" : "proptics\/internal\/Market$.html", "members_object" : [{"label" : "choiceMarket", "tail" : "(): Choice[[γ$8$, δ$9$]Market[E, F, γ$8$, δ$9$]]", "member" : "proptics.internal.MarketInstances.choiceMarket", "link" : "proptics\/internal\/Market$.html#choiceMarket[E,F]:proptics.profunctor.Choice[[γ$8$,δ$9$]proptics.internal.Market[E,F,γ$8$,δ$9$]]", "kind" : "implicit final def"}, {"label" : "profunctorMarket", "tail" : "(): Profunctor[[γ$4$, δ$5$]Market[E, F, γ$4$, δ$5$]]", "member" : "proptics.internal.MarketInstances.profunctorMarket", "link" : "proptics\/internal\/Market$.html#profunctorMarket[E,F]:cats.arrow.Profunctor[[γ$4$,δ$5$]proptics.internal.Market[E,F,γ$4$,δ$5$]]", "kind" : "implicit final def"}, {"label" : "functorMarket", "tail" : "(): Functor[[δ$2$]Market[C, D, S, δ$2$]]", "member" : "proptics.internal.MarketInstances.functorMarket", "link" : "proptics\/internal\/Market$.html#functorMarket[C,D,S]:cats.Functor[[δ$2$]proptics.internal.Market[C,D,S,δ$2$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Market$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Market$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Market$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Market$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Market$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Market$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Market$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Market$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Market$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Market$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Market$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Market$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Market$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Market$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Market$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Market$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Market$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Market$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Market$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "compose", "tail" : "(other: Market[C, D, A, B])(ev: FlatMap[[β$0$]Either[T, β$0$]]): Market[C, D, S, T]", "member" : "proptics.internal.Market.compose", "link" : "proptics\/internal\/Market.html#compose[C,D](other:proptics.internal.Market[C,D,A,B])(implicitev:cats.FlatMap[[β$0$]scala.util.Either[T,β$0$]]):proptics.internal.Market[C,D,S,T]", "kind" : "def"}, {"member" : "proptics.internal.Market#<init>", "error" : "unsupported entity"}, {"label" : "review", "tail" : ": (B) => T", "member" : "proptics.internal.Market.review", "link" : "proptics\/internal\/Market.html#review:B=>T", "kind" : "val"}, {"label" : "viewOrModify", "tail" : ": (S) => Either[T, A]", "member" : "proptics.internal.Market.viewOrModify", "link" : "proptics\/internal\/Market.html#viewOrModify:S=>Either[T,A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/internal\/Market.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Market.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Market.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Market.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Market.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Market.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Market.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Market.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Market.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Market.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Market.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Market.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Market.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Market.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Market.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Market.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Market.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "proptics\/internal\/Market.html", "kind" : "case class"}, {"name" : "proptics.internal.MarketInstances", "shortDescription" : "", "members_class" : [{"label" : "choiceMarket", "tail" : "(): Choice[[γ$8$, δ$9$]Market[E, F, γ$8$, δ$9$]]", "member" : "proptics.internal.MarketInstances.choiceMarket", "link" : "proptics\/internal\/MarketInstances.html#choiceMarket[E,F]:proptics.profunctor.Choice[[γ$8$,δ$9$]proptics.internal.Market[E,F,γ$8$,δ$9$]]", "kind" : "implicit final def"}, {"label" : "profunctorMarket", "tail" : "(): Profunctor[[γ$4$, δ$5$]Market[E, F, γ$4$, δ$5$]]", "member" : "proptics.internal.MarketInstances.profunctorMarket", "link" : "proptics\/internal\/MarketInstances.html#profunctorMarket[E,F]:cats.arrow.Profunctor[[γ$4$,δ$5$]proptics.internal.Market[E,F,γ$4$,δ$5$]]", "kind" : "implicit final def"}, {"label" : "functorMarket", "tail" : "(): Functor[[δ$2$]Market[C, D, S, δ$2$]]", "member" : "proptics.internal.MarketInstances.functorMarket", "link" : "proptics\/internal\/MarketInstances.html#functorMarket[C,D,S]:cats.Functor[[δ$2$]proptics.internal.Market[C,D,S,δ$2$]]", "kind" : "implicit final def"}, {"member" : "proptics.internal.MarketInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/MarketInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/MarketInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/MarketInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/MarketInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/MarketInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/MarketInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/MarketInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/MarketInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/MarketInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/MarketInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/MarketInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/MarketInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/MarketInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/MarketInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/MarketInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/MarketInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/MarketInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/MarketInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/MarketInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/internal\/MarketInstances.html", "kind" : "class"}, {"name" : "proptics.internal.Re", "shortDescription" : "Re is a class for optics that can be reversed.", "object" : "proptics\/internal\/Re$.html", "members_object" : [{"label" : "cochoiceRe", "tail" : "(ev: Choice[P]): Cochoice[[δ$8$, ε$9$]Re[P, S, T, δ$8$, ε$9$]]", "member" : "proptics.internal.ReInstances.cochoiceRe", "link" : "proptics\/internal\/Re$.html#cochoiceRe[P[_,_],S,T](implicitev:proptics.profunctor.Choice[P]):proptics.profunctor.Cochoice[[δ$8$,ε$9$]proptics.internal.Re[P,S,T,δ$8$,ε$9$]]", "kind" : "implicit final def"}, {"label" : "choiceRe", "tail" : "(ev: Cochoice[P]): Choice[[δ$4$, ε$5$]Re[P, S, T, δ$4$, ε$5$]]", "member" : "proptics.internal.ReInstances.choiceRe", "link" : "proptics\/internal\/Re$.html#choiceRe[P[_,_],S,T](implicitev:proptics.profunctor.Cochoice[P]):proptics.profunctor.Choice[[δ$4$,ε$5$]proptics.internal.Re[P,S,T,δ$4$,ε$5$]]", "kind" : "implicit final def"}, {"label" : "profunctorRe", "tail" : "(ev: Profunctor[P]): Profunctor[[δ$0$, ε$1$]Re[P, S, T, δ$0$, ε$1$]]", "member" : "proptics.internal.ReInstances.profunctorRe", "link" : "proptics\/internal\/Re$.html#profunctorRe[P[_,_],S,T](implicitev:cats.arrow.Profunctor[P]):cats.arrow.Profunctor[[δ$0$,ε$1$]proptics.internal.Re[P,S,T,δ$0$,ε$1$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Re$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Re$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Re$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Re$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Re$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Re$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Re$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Re$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Re$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Re$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Re$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Re$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Re$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Re$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Re$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Re$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Re$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Re$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Re$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "proptics.internal.Re#<init>", "error" : "unsupported entity"}, {"label" : "runRe", "tail" : ": (P[B, A]) => P[T, S]", "member" : "proptics.internal.Re.runRe", "link" : "proptics\/internal\/Re.html#runRe:P[B,A]=>P[T,S]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/internal\/Re.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/internal\/Re.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/internal\/Re.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Re.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Re.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/internal\/Re.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/internal\/Re.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/internal\/Re.html", "kind" : "case class"}, {"name" : "proptics.internal.ReInstances", "shortDescription" : "", "members_class" : [{"label" : "cochoiceRe", "tail" : "(ev: Choice[P]): Cochoice[[δ$8$, ε$9$]Re[P, S, T, δ$8$, ε$9$]]", "member" : "proptics.internal.ReInstances.cochoiceRe", "link" : "proptics\/internal\/ReInstances.html#cochoiceRe[P[_,_],S,T](implicitev:proptics.profunctor.Choice[P]):proptics.profunctor.Cochoice[[δ$8$,ε$9$]proptics.internal.Re[P,S,T,δ$8$,ε$9$]]", "kind" : "implicit final def"}, {"label" : "choiceRe", "tail" : "(ev: Cochoice[P]): Choice[[δ$4$, ε$5$]Re[P, S, T, δ$4$, ε$5$]]", "member" : "proptics.internal.ReInstances.choiceRe", "link" : "proptics\/internal\/ReInstances.html#choiceRe[P[_,_],S,T](implicitev:proptics.profunctor.Cochoice[P]):proptics.profunctor.Choice[[δ$4$,ε$5$]proptics.internal.Re[P,S,T,δ$4$,ε$5$]]", "kind" : "implicit final def"}, {"label" : "profunctorRe", "tail" : "(ev: Profunctor[P]): Profunctor[[δ$0$, ε$1$]Re[P, S, T, δ$0$, ε$1$]]", "member" : "proptics.internal.ReInstances.profunctorRe", "link" : "proptics\/internal\/ReInstances.html#profunctorRe[P[_,_],S,T](implicitev:cats.arrow.Profunctor[P]):cats.arrow.Profunctor[[δ$0$,ε$1$]proptics.internal.Re[P,S,T,δ$0$,ε$1$]]", "kind" : "implicit final def"}, {"member" : "proptics.internal.ReInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/ReInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/ReInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/ReInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/ReInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/ReInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/ReInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/ReInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ReInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ReInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ReInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/ReInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/ReInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/ReInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/ReInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/ReInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/ReInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/ReInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/ReInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/ReInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/internal\/ReInstances.html", "kind" : "class"}, {"name" : "proptics.internal.RunBazaar", "trait" : "proptics\/internal\/RunBazaar.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/RunBazaar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/RunBazaar.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/RunBazaar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/RunBazaar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/RunBazaar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/RunBazaar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/RunBazaar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/RunBazaar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/RunBazaar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/RunBazaar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/RunBazaar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/RunBazaar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/RunBazaar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/RunBazaar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/RunBazaar.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/RunBazaar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/RunBazaar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/RunBazaar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/RunBazaar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(pafb: P[A, F[B]])(s: S)(ev: Applicative[F]): F[T]", "member" : "proptics.internal.RunBazaar.apply", "link" : "proptics\/internal\/RunBazaar.html#apply[F[_]](pafb:P[A,F[B]])(s:S)(implicitev:cats.Applicative[F]):F[T]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.internal.Sellable", "object" : "proptics\/internal\/Sellable$.html", "members_object" : [{"label" : "apply", "tail" : "(ev0: Sellable[P, [β$6$, γ$7$, ε$8$]Bazaar[P, β$6$, γ$7$, Unit, ε$8$]]): Sellable[P, [β$9$, γ$10$, ε$11$]Bazaar[P, β$9$, γ$10$, Unit, ε$11$]]", "member" : "proptics.internal.Sellable.apply", "link" : "proptics\/internal\/Sellable$.html#apply[P[_,_]](implicitev0:proptics.internal.Sellable[P,[β$6$,γ$7$,ε$8$]proptics.internal.Bazaar[P,β$6$,γ$7$,Unit,ε$8$]]):proptics.internal.Sellable[P,[β$9$,γ$10$,ε$11$]proptics.internal.Bazaar[P,β$9$,γ$10$,Unit,ε$11$]]", "kind" : "def"}, {"label" : "sellableBazaar", "tail" : "(arg0: Profunctor[P], ev1: Aux[P, G]): Sellable[P, [β$0$, γ$1$, ε$2$]Bazaar[P, β$0$, γ$1$, Unit, ε$2$]]", "member" : "proptics.internal.SellableInstances.sellableBazaar", "link" : "proptics\/internal\/Sellable$.html#sellableBazaar[P[_,_],G[_]](implicitevidence$1:cats.arrow.Profunctor[P],implicitev1:proptics.profunctor.Corepresentable.Aux[P,G]):proptics.internal.Sellable[P,[β$0$,γ$1$,ε$2$]proptics.internal.Bazaar[P,β$0$,γ$1$,Unit,ε$2$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Sellable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Sellable$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Sellable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Sellable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Sellable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Sellable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Sellable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Sellable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Sellable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Sellable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Sellable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Sellable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Sellable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Sellable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Sellable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Sellable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Sellable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Sellable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Sellable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/internal\/Sellable.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Sellable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Sellable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Sellable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Sellable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Sellable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Sellable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Sellable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Sellable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Sellable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Sellable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Sellable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Sellable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Sellable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Sellable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Sellable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Sellable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Sellable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Sellable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Sellable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sell", "tail" : "(): P[A, W[A, B, B]]", "member" : "proptics.internal.Sellable.sell", "link" : "proptics\/internal\/Sellable.html#sell[A,B]:P[A,W[A,B,B]]", "kind" : "abstract def"}], "shortDescription" : "The Sellable is used internally to construct a Bazaar"}, {"name" : "proptics.internal.SellableInstances", "shortDescription" : "", "members_class" : [{"label" : "sellableBazaar", "tail" : "(arg0: Profunctor[P], ev1: Aux[P, G]): Sellable[P, [β$0$, γ$1$, ε$2$]Bazaar[P, β$0$, γ$1$, Unit, ε$2$]]", "member" : "proptics.internal.SellableInstances.sellableBazaar", "link" : "proptics\/internal\/SellableInstances.html#sellableBazaar[P[_,_],G[_]](implicitevidence$1:cats.arrow.Profunctor[P],implicitev1:proptics.profunctor.Corepresentable.Aux[P,G]):proptics.internal.Sellable[P,[β$0$,γ$1$,ε$2$]proptics.internal.Bazaar[P,β$0$,γ$1$,Unit,ε$2$]]", "kind" : "implicit final def"}, {"member" : "proptics.internal.SellableInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/SellableInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/SellableInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/SellableInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/SellableInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/SellableInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/SellableInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/SellableInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/SellableInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/SellableInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/SellableInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/SellableInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/SellableInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/SellableInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/SellableInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/SellableInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/SellableInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/SellableInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/SellableInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/SellableInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/internal\/SellableInstances.html", "kind" : "class"}, {"name" : "proptics.internal.Shop", "shortDescription" : "The Shop profunctor characterizes a proptics.Lens_", "object" : "proptics\/internal\/Shop$.html", "members_object" : [{"label" : "strongShop", "tail" : "(): Strong[[γ$4$, δ$5$]Shop[E, F, γ$4$, δ$5$]]", "member" : "proptics.internal.ShopInstances.strongShop", "link" : "proptics\/internal\/Shop$.html#strongShop[E,F]:cats.arrow.Strong[[γ$4$,δ$5$]proptics.internal.Shop[E,F,γ$4$,δ$5$]]", "kind" : "implicit final def"}, {"label" : "profunctorShop", "tail" : "(): Profunctor[[γ$0$, δ$1$]Shop[E, F, γ$0$, δ$1$]]", "member" : "proptics.internal.ShopInstances.profunctorShop", "link" : "proptics\/internal\/Shop$.html#profunctorShop[E,F]:cats.arrow.Profunctor[[γ$0$,δ$1$]proptics.internal.Shop[E,F,γ$0$,δ$1$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Shop$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Shop$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Shop$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Shop$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Shop$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Shop$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Shop$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Shop$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Shop$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Shop$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Shop$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Shop$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Shop$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Shop$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Shop$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Shop$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Shop$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Shop$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Shop$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "compose", "tail" : "(other: Shop[C, D, A, B]): Shop[C, D, S, T]", "member" : "proptics.internal.Shop.compose", "link" : "proptics\/internal\/Shop.html#compose[C,D](other:proptics.internal.Shop[C,D,A,B]):proptics.internal.Shop[C,D,S,T]", "kind" : "def"}, {"member" : "proptics.internal.Shop#<init>", "error" : "unsupported entity"}, {"label" : "set", "tail" : ": (S) => (B) => T", "member" : "proptics.internal.Shop.set", "link" : "proptics\/internal\/Shop.html#set:S=>(B=>T)", "kind" : "val"}, {"label" : "view", "tail" : ": (S) => A", "member" : "proptics.internal.Shop.view", "link" : "proptics\/internal\/Shop.html#view:S=>A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/internal\/Shop.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Shop.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Shop.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Shop.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Shop.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Shop.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Shop.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Shop.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Shop.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Shop.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Shop.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Shop.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Shop.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Shop.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Shop.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Shop.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Shop.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "proptics\/internal\/Shop.html", "kind" : "case class"}, {"name" : "proptics.internal.ShopInstances", "shortDescription" : "", "members_class" : [{"label" : "strongShop", "tail" : "(): Strong[[γ$4$, δ$5$]Shop[E, F, γ$4$, δ$5$]]", "member" : "proptics.internal.ShopInstances.strongShop", "link" : "proptics\/internal\/ShopInstances.html#strongShop[E,F]:cats.arrow.Strong[[γ$4$,δ$5$]proptics.internal.Shop[E,F,γ$4$,δ$5$]]", "kind" : "implicit final def"}, {"label" : "profunctorShop", "tail" : "(): Profunctor[[γ$0$, δ$1$]Shop[E, F, γ$0$, δ$1$]]", "member" : "proptics.internal.ShopInstances.profunctorShop", "link" : "proptics\/internal\/ShopInstances.html#profunctorShop[E,F]:cats.arrow.Profunctor[[γ$0$,δ$1$]proptics.internal.Shop[E,F,γ$0$,δ$1$]]", "kind" : "implicit final def"}, {"member" : "proptics.internal.ShopInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/ShopInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/ShopInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/ShopInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/ShopInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/ShopInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/ShopInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/ShopInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ShopInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ShopInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ShopInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/ShopInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/ShopInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/ShopInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/ShopInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/ShopInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/ShopInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/ShopInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/ShopInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/ShopInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/internal\/ShopInstances.html", "kind" : "class"}, {"name" : "proptics.internal.Stall", "shortDescription" : "The Stall cats.arrow.Profunctor characterizes an proptics.AffineTraversal_", "object" : "proptics\/internal\/Stall$.html", "members_object" : [{"label" : "choiceStall", "tail" : "(): Choice[[γ$10$, δ$11$]Stall[E, F, γ$10$, δ$11$]]", "member" : "proptics.internal.StallInstances.choiceStall", "link" : "proptics\/internal\/Stall$.html#choiceStall[E,F]:proptics.profunctor.Choice[[γ$10$,δ$11$]proptics.internal.Stall[E,F,γ$10$,δ$11$]]", "kind" : "implicit final def"}, {"label" : "strongStall", "tail" : "(): Strong[[γ$6$, δ$7$]Stall[E, F, γ$6$, δ$7$]]", "member" : "proptics.internal.StallInstances.strongStall", "link" : "proptics\/internal\/Stall$.html#strongStall[E,F]:cats.arrow.Strong[[γ$6$,δ$7$]proptics.internal.Stall[E,F,γ$6$,δ$7$]]", "kind" : "implicit final def"}, {"label" : "profunctorStall", "tail" : "(): Profunctor[[γ$2$, δ$3$]Stall[E, F, γ$2$, δ$3$]]", "member" : "proptics.internal.StallInstances.profunctorStall", "link" : "proptics\/internal\/Stall$.html#profunctorStall[E,F]:cats.arrow.Profunctor[[γ$2$,δ$3$]proptics.internal.Stall[E,F,γ$2$,δ$3$]]", "kind" : "implicit final def"}, {"label" : "functorStall", "tail" : "(): Functor[[δ$0$]Stall[C, D, E, δ$0$]]", "member" : "proptics.internal.StallInstances.functorStall", "link" : "proptics\/internal\/Stall$.html#functorStall[C,D,E]:cats.Functor[[δ$0$]proptics.internal.Stall[C,D,E,δ$0$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Stall$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Stall$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Stall$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Stall$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Stall$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Stall$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Stall$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Stall$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Stall$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Stall$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Stall$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Stall$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Stall$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Stall$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Stall$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Stall$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Stall$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Stall$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Stall$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "proptics.internal.Stall#<init>", "error" : "unsupported entity"}, {"label" : "set", "tail" : ": (S) => (B) => T", "member" : "proptics.internal.Stall.set", "link" : "proptics\/internal\/Stall.html#set:S=>(B=>T)", "kind" : "val"}, {"label" : "viewOrModify", "tail" : ": (S) => Either[T, A]", "member" : "proptics.internal.Stall.viewOrModify", "link" : "proptics\/internal\/Stall.html#viewOrModify:S=>Either[T,A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/internal\/Stall.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Stall.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Stall.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Stall.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Stall.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Stall.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Stall.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Stall.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Stall.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Stall.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Stall.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Stall.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Stall.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Stall.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Stall.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Stall.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Stall.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "proptics\/internal\/Stall.html", "kind" : "case class"}, {"name" : "proptics.internal.StallInstances", "shortDescription" : "", "members_class" : [{"label" : "choiceStall", "tail" : "(): Choice[[γ$10$, δ$11$]Stall[E, F, γ$10$, δ$11$]]", "member" : "proptics.internal.StallInstances.choiceStall", "link" : "proptics\/internal\/StallInstances.html#choiceStall[E,F]:proptics.profunctor.Choice[[γ$10$,δ$11$]proptics.internal.Stall[E,F,γ$10$,δ$11$]]", "kind" : "implicit final def"}, {"label" : "strongStall", "tail" : "(): Strong[[γ$6$, δ$7$]Stall[E, F, γ$6$, δ$7$]]", "member" : "proptics.internal.StallInstances.strongStall", "link" : "proptics\/internal\/StallInstances.html#strongStall[E,F]:cats.arrow.Strong[[γ$6$,δ$7$]proptics.internal.Stall[E,F,γ$6$,δ$7$]]", "kind" : "implicit final def"}, {"label" : "profunctorStall", "tail" : "(): Profunctor[[γ$2$, δ$3$]Stall[E, F, γ$2$, δ$3$]]", "member" : "proptics.internal.StallInstances.profunctorStall", "link" : "proptics\/internal\/StallInstances.html#profunctorStall[E,F]:cats.arrow.Profunctor[[γ$2$,δ$3$]proptics.internal.Stall[E,F,γ$2$,δ$3$]]", "kind" : "implicit final def"}, {"label" : "functorStall", "tail" : "(): Functor[[δ$0$]Stall[C, D, E, δ$0$]]", "member" : "proptics.internal.StallInstances.functorStall", "link" : "proptics\/internal\/StallInstances.html#functorStall[C,D,E]:cats.Functor[[δ$0$]proptics.internal.Stall[C,D,E,δ$0$]]", "kind" : "implicit final def"}, {"member" : "proptics.internal.StallInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/StallInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/StallInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/StallInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/StallInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/StallInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/StallInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/StallInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/StallInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/StallInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/StallInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/StallInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/StallInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/StallInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/StallInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/StallInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/StallInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/StallInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/StallInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/StallInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/internal\/StallInstances.html", "kind" : "class"}, {"name" : "proptics.internal.Tagged", "shortDescription" : "A Tagged value is a value of type B with an attached phantom type A", "object" : "proptics\/internal\/Tagged$.html", "members_object" : [{"label" : "traverseTagged", "tail" : "(): Traverse[[β$4$]Tagged[C, β$4$]]", "member" : "proptics.internal.TaggedInstances.traverseTagged", "link" : "proptics\/internal\/Tagged$.html#traverseTagged[C]:cats.Traverse[[β$4$]proptics.internal.Tagged[C,β$4$]]", "kind" : "implicit final def"}, {"label" : "foldableTagged", "tail" : "(): Foldable[[β$2$]Tagged[C, β$2$]]", "member" : "proptics.internal.TaggedInstances.foldableTagged", "link" : "proptics\/internal\/Tagged$.html#foldableTagged[C]:cats.Foldable[[β$2$]proptics.internal.Tagged[C,β$2$]]", "kind" : "implicit final def"}, {"label" : "closedTagged", "tail" : ": Closed[Tagged]", "member" : "proptics.internal.TaggedInstances.closedTagged", "link" : "proptics\/internal\/Tagged$.html#closedTagged:proptics.profunctor.Closed[proptics.internal.Tagged]", "kind" : "implicit final val"}, {"label" : "choiceTagged", "tail" : ": Choice[Tagged]", "member" : "proptics.internal.TaggedInstances.choiceTagged", "link" : "proptics\/internal\/Tagged$.html#choiceTagged:proptics.profunctor.Choice[proptics.internal.Tagged]", "kind" : "implicit final val"}, {"label" : "profunctorTagged", "tail" : ": Profunctor[Tagged]", "member" : "proptics.internal.TaggedInstances.profunctorTagged", "link" : "proptics\/internal\/Tagged$.html#profunctorTagged:cats.arrow.Profunctor[proptics.internal.Tagged]", "kind" : "implicit final val"}, {"label" : "functorTagged", "tail" : "(): Functor[[β$0$]Tagged[C, β$0$]]", "member" : "proptics.internal.TaggedInstances.functorTagged", "link" : "proptics\/internal\/Tagged$.html#functorTagged[F[_],C]:cats.Functor[[β$0$]proptics.internal.Tagged[C,β$0$]]", "kind" : "implicit final def"}, {"label" : "orderTagged", "tail" : "(ev: Order[B]): Order[Tagged[A, B]]", "member" : "proptics.internal.TaggedInstances.orderTagged", "link" : "proptics\/internal\/Tagged$.html#orderTagged[A,B](implicitev:cats.Order[B]):cats.Order[proptics.internal.Tagged[A,B]]", "kind" : "implicit final def"}, {"label" : "eqTagged", "tail" : "(ev: Eq[B]): Eq[Tagged[A, B]]", "member" : "proptics.internal.TaggedInstances.eqTagged", "link" : "proptics\/internal\/Tagged$.html#eqTagged[A,B](implicitev:cats.Eq[B]):cats.Eq[proptics.internal.Tagged[A,B]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Tagged$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Tagged$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Tagged$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Tagged$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Tagged$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Tagged$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Tagged$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Tagged$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Tagged$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Tagged$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Tagged$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Tagged$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Tagged$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Tagged$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Tagged$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Tagged$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Tagged$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Tagged$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Tagged$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "proptics.internal.Tagged#<init>", "error" : "unsupported entity"}, {"label" : "runTag", "tail" : ": B", "member" : "proptics.internal.Tagged.runTag", "link" : "proptics\/internal\/Tagged.html#runTag:B", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/internal\/Tagged.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/internal\/Tagged.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/internal\/Tagged.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Tagged.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Tagged.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/internal\/Tagged.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/internal\/Tagged.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/internal\/Tagged.html", "kind" : "case class"}, {"name" : "proptics.internal.TaggedInstances", "shortDescription" : "", "members_class" : [{"label" : "traverseTagged", "tail" : "(): Traverse[[β$4$]Tagged[C, β$4$]]", "member" : "proptics.internal.TaggedInstances.traverseTagged", "link" : "proptics\/internal\/TaggedInstances.html#traverseTagged[C]:cats.Traverse[[β$4$]proptics.internal.Tagged[C,β$4$]]", "kind" : "implicit final def"}, {"label" : "foldableTagged", "tail" : "(): Foldable[[β$2$]Tagged[C, β$2$]]", "member" : "proptics.internal.TaggedInstances.foldableTagged", "link" : "proptics\/internal\/TaggedInstances.html#foldableTagged[C]:cats.Foldable[[β$2$]proptics.internal.Tagged[C,β$2$]]", "kind" : "implicit final def"}, {"label" : "closedTagged", "tail" : ": Closed[Tagged]", "member" : "proptics.internal.TaggedInstances.closedTagged", "link" : "proptics\/internal\/TaggedInstances.html#closedTagged:proptics.profunctor.Closed[proptics.internal.Tagged]", "kind" : "implicit final val"}, {"label" : "choiceTagged", "tail" : ": Choice[Tagged]", "member" : "proptics.internal.TaggedInstances.choiceTagged", "link" : "proptics\/internal\/TaggedInstances.html#choiceTagged:proptics.profunctor.Choice[proptics.internal.Tagged]", "kind" : "implicit final val"}, {"label" : "profunctorTagged", "tail" : ": Profunctor[Tagged]", "member" : "proptics.internal.TaggedInstances.profunctorTagged", "link" : "proptics\/internal\/TaggedInstances.html#profunctorTagged:cats.arrow.Profunctor[proptics.internal.Tagged]", "kind" : "implicit final val"}, {"label" : "functorTagged", "tail" : "(): Functor[[β$0$]Tagged[C, β$0$]]", "member" : "proptics.internal.TaggedInstances.functorTagged", "link" : "proptics\/internal\/TaggedInstances.html#functorTagged[F[_],C]:cats.Functor[[β$0$]proptics.internal.Tagged[C,β$0$]]", "kind" : "implicit final def"}, {"label" : "orderTagged", "tail" : "(ev: Order[B]): Order[Tagged[A, B]]", "member" : "proptics.internal.TaggedInstances.orderTagged", "link" : "proptics\/internal\/TaggedInstances.html#orderTagged[A,B](implicitev:cats.Order[B]):cats.Order[proptics.internal.Tagged[A,B]]", "kind" : "implicit final def"}, {"label" : "eqTagged", "tail" : "(ev: Eq[B]): Eq[Tagged[A, B]]", "member" : "proptics.internal.TaggedInstances.eqTagged", "link" : "proptics\/internal\/TaggedInstances.html#eqTagged[A,B](implicitev:cats.Eq[B]):cats.Eq[proptics.internal.Tagged[A,B]]", "kind" : "implicit final def"}, {"member" : "proptics.internal.TaggedInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/TaggedInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/TaggedInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/TaggedInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/TaggedInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/TaggedInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/TaggedInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/TaggedInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/TaggedInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/TaggedInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/TaggedInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/TaggedInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/TaggedInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/TaggedInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/TaggedInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/TaggedInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/TaggedInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/TaggedInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/TaggedInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/TaggedInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/internal\/TaggedInstances.html", "kind" : "class"}, {"name" : "proptics.internal.Zipping", "shortDescription" : "The Zipping cats.arrow.Profunctor characterizes an proptics.Grate_", "object" : "proptics\/internal\/Zipping$.html", "members_object" : [{"label" : "closedZipping", "tail" : ": Closed[Zipping]", "member" : "proptics.internal.ZippingInstances.closedZipping", "link" : "proptics\/internal\/Zipping$.html#closedZipping:proptics.profunctor.Closed[proptics.internal.Zipping]", "kind" : "implicit final val"}, {"label" : "strongZipping", "tail" : ": Strong[Zipping]", "member" : "proptics.internal.ZippingInstances.strongZipping", "link" : "proptics\/internal\/Zipping$.html#strongZipping:cats.arrow.Strong[proptics.internal.Zipping]", "kind" : "implicit final val"}, {"label" : "profunctorZipping", "tail" : ": Profunctor[Zipping]", "member" : "proptics.internal.ZippingInstances.profunctorZipping", "link" : "proptics\/internal\/Zipping$.html#profunctorZipping:cats.arrow.Profunctor[proptics.internal.Zipping]", "kind" : "implicit final val"}, {"label" : "functorZipping", "tail" : "(): Functor[[β$0$]Zipping[C, β$0$]]", "member" : "proptics.internal.ZippingInstances.functorZipping", "link" : "proptics\/internal\/Zipping$.html#functorZipping[C]:cats.Functor[[β$0$]proptics.internal.Zipping[C,β$0$]]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/Zipping$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/Zipping$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/Zipping$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/Zipping$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/Zipping$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/Zipping$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/Zipping$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Zipping$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Zipping$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/Zipping$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/Zipping$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/Zipping$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/Zipping$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/Zipping$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/Zipping$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/Zipping$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/Zipping$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Zipping$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Zipping$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "proptics.internal.Zipping#<init>", "error" : "unsupported entity"}, {"label" : "runZipping", "tail" : ": (A) => (A) => B", "member" : "proptics.internal.Zipping.runZipping", "link" : "proptics\/internal\/Zipping.html#runZipping:A=>(A=>B)", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "proptics\/internal\/Zipping.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "proptics\/internal\/Zipping.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "proptics\/internal\/Zipping.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/Zipping.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/Zipping.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "proptics\/internal\/Zipping.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "proptics\/internal\/Zipping.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "proptics\/internal\/Zipping.html", "kind" : "case class"}, {"name" : "proptics.internal.ZippingInstances", "shortDescription" : "", "members_class" : [{"label" : "closedZipping", "tail" : ": Closed[Zipping]", "member" : "proptics.internal.ZippingInstances.closedZipping", "link" : "proptics\/internal\/ZippingInstances.html#closedZipping:proptics.profunctor.Closed[proptics.internal.Zipping]", "kind" : "implicit final val"}, {"label" : "strongZipping", "tail" : ": Strong[Zipping]", "member" : "proptics.internal.ZippingInstances.strongZipping", "link" : "proptics\/internal\/ZippingInstances.html#strongZipping:cats.arrow.Strong[proptics.internal.Zipping]", "kind" : "implicit final val"}, {"label" : "profunctorZipping", "tail" : ": Profunctor[Zipping]", "member" : "proptics.internal.ZippingInstances.profunctorZipping", "link" : "proptics\/internal\/ZippingInstances.html#profunctorZipping:cats.arrow.Profunctor[proptics.internal.Zipping]", "kind" : "implicit final val"}, {"label" : "functorZipping", "tail" : "(): Functor[[β$0$]Zipping[C, β$0$]]", "member" : "proptics.internal.ZippingInstances.functorZipping", "link" : "proptics\/internal\/ZippingInstances.html#functorZipping[C]:cats.Functor[[β$0$]proptics.internal.Zipping[C,β$0$]]", "kind" : "implicit final def"}, {"member" : "proptics.internal.ZippingInstances#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/internal\/ZippingInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/internal\/ZippingInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/internal\/ZippingInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/internal\/ZippingInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/internal\/ZippingInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/internal\/ZippingInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/internal\/ZippingInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ZippingInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ZippingInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/internal\/ZippingInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/internal\/ZippingInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/internal\/ZippingInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/internal\/ZippingInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/internal\/ZippingInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/internal\/ZippingInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/internal\/ZippingInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/internal\/ZippingInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/internal\/ZippingInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/internal\/ZippingInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/internal\/ZippingInstances.html", "kind" : "class"}], "proptics" : [{"name" : "proptics.AffineTraversal", "shortDescription" : "", "object" : "proptics\/AffineTraversal$.html", "members_object" : [{"label" : "id", "tail" : "(): AffineTraversal[S, S]", "member" : "proptics.AffineTraversal.id", "link" : "proptics\/AffineTraversal$.html#id[S]:proptics.AffineTraversal[S,S]", "kind" : "final def"}, {"label" : "traversal", "tail" : "(to: (S) => (Either[S, A], (A) => S)): AffineTraversal[S, A]", "member" : "proptics.AffineTraversal.traversal", "link" : "proptics\/AffineTraversal$.html#traversal[S,A](to:S=>(Either[S,A],A=>S)):proptics.AffineTraversal[S,A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(viewOrModify: (S) => Either[S, A])(set: (S) => (A) => S): AffineTraversal[S, A]", "member" : "proptics.AffineTraversal.apply", "link" : "proptics\/AffineTraversal$.html#apply[S,A](viewOrModify:S=>Either[S,A])(set:S=>(A=>S)):proptics.AffineTraversal[S,A]", "kind" : "final def"}, {"label" : "fromPartial", "tail" : "(preview: PartialFunction[S, A])(set: (S) => (A) => S): AffineTraversal[S, A]", "member" : "proptics.AffineTraversal.fromPartial", "link" : "proptics\/AffineTraversal$.html#fromPartial[S,A](preview:PartialFunction[S,A])(set:S=>(A=>S)):proptics.AffineTraversal[S,A]", "kind" : "final def"}, {"label" : "fromPreview", "tail" : "(preview: (S) => Option[A])(set: (S) => (A) => S): AffineTraversal[S, A]", "member" : "proptics.AffineTraversal.fromPreview", "link" : "proptics\/AffineTraversal$.html#fromPreview[S,A](preview:S=>Option[A])(set:S=>(A=>S)):proptics.AffineTraversal[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/AffineTraversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/AffineTraversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/AffineTraversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/AffineTraversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/AffineTraversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/AffineTraversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/AffineTraversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AffineTraversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AffineTraversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AffineTraversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/AffineTraversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/AffineTraversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/AffineTraversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/AffineTraversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/AffineTraversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/AffineTraversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/AffineTraversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/AffineTraversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/AffineTraversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.AffineTraversal_", "shortDescription" : "AffineTraversal_ has at most one focus, but is not a Prism_", "object" : "proptics\/AffineTraversal_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedFold_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[I,C,D](other:proptics.IndexedFold_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedGetter_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[I,C,D](other:proptics.IndexedGetter_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedSetter_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[I,C,D](other:proptics.IndexedSetter_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[I,C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[I,C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[I,C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.AffineTraversal_.compose", "link" : "proptics\/AffineTraversal_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "to", "tail" : "(f: (A) => C): Fold_[S, T, C, D]", "member" : "proptics.AffineTraversal_.to", "link" : "proptics\/AffineTraversal_.html#to[C,D](f:A=>C):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "asFold", "tail" : "(): Fold_[S, T, A, B]", "member" : "proptics.AffineTraversal_.asFold", "link" : "proptics\/AffineTraversal_.html#asFold:proptics.Fold_[S,T,A,B]", "kind" : "final def"}, {"label" : "asTraversal", "tail" : "(): Traversal_[S, T, A, B]", "member" : "proptics.AffineTraversal_.asTraversal", "link" : "proptics\/AffineTraversal_.html#asTraversal:proptics.Traversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "find", "tail" : "(p: (A) => Boolean): (S) => Option[A]", "member" : "proptics.AffineTraversal_.find", "link" : "proptics\/AffineTraversal_.html#find(p:A=>Boolean):S=>Option[A]", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.AffineTraversal_.nonEmpty", "link" : "proptics\/AffineTraversal_.html#nonEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.AffineTraversal_.isEmpty", "link" : "proptics\/AffineTraversal_.html#isEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.AffineTraversal_.notContains", "link" : "proptics\/AffineTraversal_.html#notContains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.AffineTraversal_.contains", "link" : "proptics\/AffineTraversal_.html#contains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.AffineTraversal_.notExists", "link" : "proptics\/AffineTraversal_.html#notExists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.AffineTraversal_.exists", "link" : "proptics\/AffineTraversal_.html#exists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "forall", "tail" : "(s: S)(f: (A) => R)(arg0: Heyting[R]): R", "member" : "proptics.AffineTraversal_.forall", "link" : "proptics\/AffineTraversal_.html#forall[R](s:S)(f:A=>R)(implicitevidence$3:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "forall", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.AffineTraversal_.forall", "link" : "proptics\/AffineTraversal_.html#forall(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "traverse", "tail" : "(s: S)(f: (A) => F[B])(arg0: Applicative[F]): F[T]", "member" : "proptics.AffineTraversal_.traverse", "link" : "proptics\/AffineTraversal_.html#traverse[F[_]](s:S)(f:A=>F[B])(implicitevidence$2:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "overF", "tail" : "(f: (A) => F[B])(s: S)(arg0: Applicative[F]): F[T]", "member" : "proptics.AffineTraversal_.overF", "link" : "proptics\/AffineTraversal_.html#overF[F[_]](f:A=>F[B])(s:S)(implicitevidence$1:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "overOption", "tail" : "(f: (A) => B): (S) => Option[T]", "member" : "proptics.AffineTraversal_.overOption", "link" : "proptics\/AffineTraversal_.html#overOption(f:A=>B):S=>Option[T]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: (A) => B): (S) => T", "member" : "proptics.AffineTraversal_.over", "link" : "proptics\/AffineTraversal_.html#over(f:A=>B):S=>T", "kind" : "final def"}, {"label" : "setOption", "tail" : "(b: B): (S) => Option[T]", "member" : "proptics.AffineTraversal_.setOption", "link" : "proptics\/AffineTraversal_.html#setOption(b:B):S=>Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.AffineTraversal_.set", "link" : "proptics\/AffineTraversal_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "preview", "tail" : "(s: S): Option[A]", "member" : "proptics.AffineTraversal_.preview", "link" : "proptics\/AffineTraversal_.html#preview(s:S):Option[A]", "kind" : "final def"}, {"member" : "proptics.AffineTraversal_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/AffineTraversal_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/AffineTraversal_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/AffineTraversal_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/AffineTraversal_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/AffineTraversal_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/AffineTraversal_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/AffineTraversal_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AffineTraversal_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AffineTraversal_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AffineTraversal_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/AffineTraversal_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/AffineTraversal_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/AffineTraversal_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/AffineTraversal_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/AffineTraversal_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/AffineTraversal_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/AffineTraversal_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/AffineTraversal_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/AffineTraversal_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "viewOrModify", "tail" : "(s: S): Either[T, A]", "member" : "proptics.AffineTraversal_.viewOrModify", "link" : "proptics\/AffineTraversal_.html#viewOrModify(s:S):Either[T,A]", "kind" : "abstract def"}], "members_object" : [{"label" : "id", "tail" : "(): AffineTraversal_[S, T, S, T]", "member" : "proptics.AffineTraversal_.id", "link" : "proptics\/AffineTraversal_$.html#id[S,T]:proptics.AffineTraversal_[S,T,S,T]", "kind" : "final def"}, {"label" : "traversal", "tail" : "(combined: (S) => (Either[T, A], (B) => T)): AffineTraversal_[S, T, A, B]", "member" : "proptics.AffineTraversal_.traversal", "link" : "proptics\/AffineTraversal_$.html#traversal[S,T,A,B](combined:S=>(Either[T,A],B=>T)):proptics.AffineTraversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "apply", "tail" : "(_viewOrModify: (S) => Either[T, A])(_set: (S) => (B) => T): AffineTraversal_[S, T, A, B]", "member" : "proptics.AffineTraversal_.apply", "link" : "proptics\/AffineTraversal_$.html#apply[S,T,A,B](_viewOrModify:S=>Either[T,A])(_set:S=>(B=>T)):proptics.AffineTraversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/AffineTraversal_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/AffineTraversal_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/AffineTraversal_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/AffineTraversal_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/AffineTraversal_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/AffineTraversal_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/AffineTraversal_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AffineTraversal_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AffineTraversal_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AffineTraversal_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/AffineTraversal_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/AffineTraversal_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/AffineTraversal_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/AffineTraversal_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/AffineTraversal_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/AffineTraversal_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/AffineTraversal_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/AffineTraversal_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/AffineTraversal_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/AffineTraversal_.html", "kind" : "class"}, {"name" : "proptics.ALens", "shortDescription" : "", "object" : "proptics\/ALens$.html", "members_object" : [{"label" : "outside", "tail" : "(aPrism: Prism[S, A]): ALens[(S) => R, (A) => R]", "member" : "proptics.ALens.outside", "link" : "proptics\/ALens$.html#outside[S,A,R](aPrism:proptics.Prism[S,A]):proptics.ALens[S=>R,A=>R]", "kind" : "final def"}, {"label" : "id", "tail" : "(): ALens[S, S]", "member" : "proptics.ALens.id", "link" : "proptics\/ALens$.html#id[S]:proptics.ALens[S,S]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => A)(set: (S) => (A) => S): ALens[S, A]", "member" : "proptics.ALens.apply", "link" : "proptics\/ALens$.html#apply[S,A](get:S=>A)(set:S=>(A=>S)):proptics.ALens[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/ALens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/ALens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/ALens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/ALens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/ALens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/ALens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/ALens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ALens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ALens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ALens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/ALens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/ALens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/ALens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/ALens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/ALens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/ALens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/ALens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/ALens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/ALens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.ALens_", "shortDescription" : "An ALens_] focuses a single piece of data within a larger structure.", "object" : "proptics\/ALens_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedFold_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[I,C,D](other:proptics.IndexedFold_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedGetter_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[I,C,D](other:proptics.IndexedGetter_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedSetter_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[I,C,D](other:proptics.IndexedSetter_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[I,C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[I,C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedLens_[I, S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[I,C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): Getter_[S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): ALens_[S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.ALens_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): ALens_[S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.ALens_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): ALens_[S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.ALens_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): ALens_[S, T, C, D]", "member" : "proptics.ALens_.compose", "link" : "proptics\/ALens_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.ALens_[S,T,C,D]", "kind" : "final def"}, {"label" : "to", "tail" : "(f: (A) => C): Getter_[S, T, C, D]", "member" : "proptics.ALens_.to", "link" : "proptics\/ALens_.html#to[C,D](f:A=>C):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "lensStore", "tail" : "(s: S): (A, (B) => T)", "member" : "proptics.ALens_.lensStore", "link" : "proptics\/ALens_.html#lensStore(s:S):(A,B=>T)", "kind" : "final def"}, {"label" : "asFold", "tail" : "(): Fold_[S, T, A, B]", "member" : "proptics.ALens_.asFold", "link" : "proptics\/ALens_.html#asFold:proptics.Fold_[S,T,A,B]", "kind" : "final def"}, {"label" : "asLens", "tail" : "(): Lens_[S, T, A, B]", "member" : "proptics.ALens_.asLens", "link" : "proptics\/ALens_.html#asLens:proptics.Lens_[S,T,A,B]", "kind" : "final def"}, {"label" : "toShop", "tail" : "(): Shop[A, B, S, T]", "member" : "proptics.ALens_.toShop", "link" : "proptics\/ALens_.html#toShop:proptics.internal.Shop[A,B,S,T]", "kind" : "final def"}, {"label" : "withLens", "tail" : "(f: ((S) => A) => ((S) => (B) => T) => R): R", "member" : "proptics.ALens_.withLens", "link" : "proptics\/ALens_.html#withLens[R](f:(S=>A)=>((S=>(B=>T))=>R)):R", "kind" : "final def"}, {"label" : "use", "tail" : "(ev: State[S, A]): State[S, A]", "member" : "proptics.ALens_.use", "link" : "proptics\/ALens_.html#use(implicitev:cats.data.State[S,A]):cats.data.State[S,A]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: (A) => Boolean): (S) => Option[A]", "member" : "proptics.ALens_.find", "link" : "proptics\/ALens_.html#find(f:A=>Boolean):S=>Option[A]", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.ALens_.notContains", "link" : "proptics\/ALens_.html#notContains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.ALens_.contains", "link" : "proptics\/ALens_.html#contains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.ALens_.notExists", "link" : "proptics\/ALens_.html#notExists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.ALens_.exists", "link" : "proptics\/ALens_.html#exists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "traverse", "tail" : "(s: S)(f: (A) => F[B])(arg0: Functor[F], ev: Functor[F]): F[T]", "member" : "proptics.ALens_.traverse", "link" : "proptics\/ALens_.html#traverse[F[_]](s:S)(f:A=>F[B])(implicitevidence$2:cats.Functor[F],implicitev:cats.Functor[F]):F[T]", "kind" : "final def"}, {"label" : "overF", "tail" : "(f: (A) => F[B])(s: S)(arg0: Functor[F]): F[T]", "member" : "proptics.ALens_.overF", "link" : "proptics\/ALens_.html#overF[F[_]](f:A=>F[B])(s:S)(implicitevidence$1:cats.Functor[F]):F[T]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: (A) => B): (S) => T", "member" : "proptics.ALens_.over", "link" : "proptics\/ALens_.html#over(f:A=>B):S=>T", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.ALens_.set", "link" : "proptics\/ALens_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "view", "tail" : "(s: S): A", "member" : "proptics.ALens_.view", "link" : "proptics\/ALens_.html#view(s:S):A", "kind" : "final def"}, {"member" : "proptics.ALens_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/ALens_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/ALens_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/ALens_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/ALens_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/ALens_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/ALens_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/ALens_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ALens_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ALens_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ALens_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/ALens_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/ALens_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/ALens_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/ALens_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/ALens_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/ALens_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/ALens_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/ALens_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/ALens_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "outside", "tail" : "(prism: Prism_[S, T, A, B]): ALens_[(T) => R, (S) => R, (B) => R, (A) => R]", "member" : "proptics.ALens_.outside", "link" : "proptics\/ALens_$.html#outside[S,T,A,B,R](prism:proptics.Prism_[S,T,A,B]):proptics.ALens_[T=>R,S=>R,B=>R,A=>R]", "kind" : "final def"}, {"label" : "id", "tail" : "(): ALens_[S, T, S, T]", "member" : "proptics.ALens_.id", "link" : "proptics\/ALens_$.html#id[S,T]:proptics.ALens_[S,T,S,T]", "kind" : "final def"}, {"label" : "lens", "tail" : "(get: (S) => A)(set: (S) => (B) => T): ALens_[S, T, A, B]", "member" : "proptics.ALens_.lens", "link" : "proptics\/ALens_$.html#lens[S,T,A,B](get:S=>A)(set:S=>(B=>T)):proptics.ALens_[S,T,A,B]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => A)(set: (S) => (B) => T): ALens_[S, T, A, B]", "member" : "proptics.ALens_.apply", "link" : "proptics\/ALens_$.html#apply[S,T,A,B](get:S=>A)(set:S=>(B=>T)):proptics.ALens_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/ALens_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/ALens_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/ALens_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/ALens_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/ALens_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/ALens_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/ALens_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ALens_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ALens_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ALens_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/ALens_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/ALens_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/ALens_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/ALens_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/ALens_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/ALens_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/ALens_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/ALens_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/ALens_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/ALens_.html", "kind" : "class"}, {"name" : "proptics.AnAffineTraversal", "shortDescription" : "", "object" : "proptics\/AnAffineTraversal$.html", "members_object" : [{"label" : "id", "tail" : "(): AnAffineTraversal[S, S]", "member" : "proptics.AnAffineTraversal.id", "link" : "proptics\/AnAffineTraversal$.html#id[S]:proptics.AnAffineTraversal[S,S]", "kind" : "final def"}, {"label" : "apply", "tail" : "(viewOrModify: (S) => Either[S, A])(set: (S) => (A) => S): AnAffineTraversal[S, A]", "member" : "proptics.AnAffineTraversal.apply", "link" : "proptics\/AnAffineTraversal$.html#apply[S,A](viewOrModify:S=>Either[S,A])(set:S=>(A=>S)):proptics.AnAffineTraversal[S,A]", "kind" : "final def"}, {"label" : "fromPartial", "tail" : "(preview: PartialFunction[S, A])(set: (S) => (A) => S): AnAffineTraversal[S, A]", "member" : "proptics.AnAffineTraversal.fromPartial", "link" : "proptics\/AnAffineTraversal$.html#fromPartial[S,A](preview:PartialFunction[S,A])(set:S=>(A=>S)):proptics.AnAffineTraversal[S,A]", "kind" : "final def"}, {"label" : "fromOption", "tail" : "(preview: (S) => Option[A])(set: (S) => (A) => S): AnAffineTraversal[S, A]", "member" : "proptics.AnAffineTraversal.fromOption", "link" : "proptics\/AnAffineTraversal$.html#fromOption[S,A](preview:S=>Option[A])(set:S=>(A=>S)):proptics.AnAffineTraversal[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/AnAffineTraversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/AnAffineTraversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/AnAffineTraversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/AnAffineTraversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/AnAffineTraversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/AnAffineTraversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/AnAffineTraversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnAffineTraversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnAffineTraversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnAffineTraversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/AnAffineTraversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/AnAffineTraversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/AnAffineTraversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/AnAffineTraversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/AnAffineTraversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/AnAffineTraversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/AnAffineTraversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/AnAffineTraversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/AnAffineTraversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.AnAffineTraversal_", "shortDescription" : "AnAffineTraversal_ has at most one focus, but is not a Prism_.", "object" : "proptics\/AnAffineTraversal_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedFold_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[I,C,D](other:proptics.IndexedFold_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedGetter_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[I,C,D](other:proptics.IndexedGetter_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedSetter_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[I,C,D](other:proptics.IndexedSetter_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[I,C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[I,C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[I,C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.compose", "link" : "proptics\/AnAffineTraversal_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "to", "tail" : "(f: (A) => C): Fold_[S, T, C, D]", "member" : "proptics.AnAffineTraversal_.to", "link" : "proptics\/AnAffineTraversal_.html#to[C,D](f:A=>C):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "asFold", "tail" : "(): Fold_[S, T, A, B]", "member" : "proptics.AnAffineTraversal_.asFold", "link" : "proptics\/AnAffineTraversal_.html#asFold:proptics.Fold_[S,T,A,B]", "kind" : "final def"}, {"label" : "asAffineTraversal", "tail" : "(): AffineTraversal_[S, T, A, B]", "member" : "proptics.AnAffineTraversal_.asAffineTraversal", "link" : "proptics\/AnAffineTraversal_.html#asAffineTraversal:proptics.AffineTraversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "toStall", "tail" : "(): Stall[A, B, S, T]", "member" : "proptics.AnAffineTraversal_.toStall", "link" : "proptics\/AnAffineTraversal_.html#toStall:proptics.internal.Stall[A,B,S,T]", "kind" : "final def"}, {"label" : "withAffineTraversal", "tail" : "(f: ((S) => Either[T, A]) => ((S) => (B) => T) => R): R", "member" : "proptics.AnAffineTraversal_.withAffineTraversal", "link" : "proptics\/AnAffineTraversal_.html#withAffineTraversal[R](f:(S=>Either[T,A])=>((S=>(B=>T))=>R)):R", "kind" : "final def"}, {"label" : "find", "tail" : "(p: (A) => Boolean): (S) => Option[A]", "member" : "proptics.AnAffineTraversal_.find", "link" : "proptics\/AnAffineTraversal_.html#find(p:A=>Boolean):S=>Option[A]", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.AnAffineTraversal_.nonEmpty", "link" : "proptics\/AnAffineTraversal_.html#nonEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.AnAffineTraversal_.isEmpty", "link" : "proptics\/AnAffineTraversal_.html#isEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.AnAffineTraversal_.notContains", "link" : "proptics\/AnAffineTraversal_.html#notContains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.AnAffineTraversal_.contains", "link" : "proptics\/AnAffineTraversal_.html#contains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.AnAffineTraversal_.notExists", "link" : "proptics\/AnAffineTraversal_.html#notExists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.AnAffineTraversal_.exists", "link" : "proptics\/AnAffineTraversal_.html#exists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "forall", "tail" : "(s: S)(f: (A) => R)(arg0: Heyting[R]): R", "member" : "proptics.AnAffineTraversal_.forall", "link" : "proptics\/AnAffineTraversal_.html#forall[R](s:S)(f:A=>R)(implicitevidence$3:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "forall", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.AnAffineTraversal_.forall", "link" : "proptics\/AnAffineTraversal_.html#forall(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "traverse", "tail" : "(s: S)(f: (A) => F[B])(arg0: Applicative[F]): F[T]", "member" : "proptics.AnAffineTraversal_.traverse", "link" : "proptics\/AnAffineTraversal_.html#traverse[F[_]](s:S)(f:A=>F[B])(implicitevidence$2:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "overF", "tail" : "(f: (A) => F[B])(s: S)(arg0: Applicative[F]): F[T]", "member" : "proptics.AnAffineTraversal_.overF", "link" : "proptics\/AnAffineTraversal_.html#overF[F[_]](f:A=>F[B])(s:S)(implicitevidence$1:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "overOption", "tail" : "(f: (A) => B): (S) => Option[T]", "member" : "proptics.AnAffineTraversal_.overOption", "link" : "proptics\/AnAffineTraversal_.html#overOption(f:A=>B):S=>Option[T]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: (A) => B): (S) => T", "member" : "proptics.AnAffineTraversal_.over", "link" : "proptics\/AnAffineTraversal_.html#over(f:A=>B):S=>T", "kind" : "final def"}, {"label" : "setOption", "tail" : "(b: B): (S) => Option[T]", "member" : "proptics.AnAffineTraversal_.setOption", "link" : "proptics\/AnAffineTraversal_.html#setOption(b:B):S=>Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.AnAffineTraversal_.set", "link" : "proptics\/AnAffineTraversal_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "preview", "tail" : "(s: S): Option[A]", "member" : "proptics.AnAffineTraversal_.preview", "link" : "proptics\/AnAffineTraversal_.html#preview(s:S):Option[A]", "kind" : "final def"}, {"member" : "proptics.AnAffineTraversal_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/AnAffineTraversal_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/AnAffineTraversal_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/AnAffineTraversal_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/AnAffineTraversal_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/AnAffineTraversal_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/AnAffineTraversal_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/AnAffineTraversal_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnAffineTraversal_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnAffineTraversal_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnAffineTraversal_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/AnAffineTraversal_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/AnAffineTraversal_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/AnAffineTraversal_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/AnAffineTraversal_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/AnAffineTraversal_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/AnAffineTraversal_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/AnAffineTraversal_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/AnAffineTraversal_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/AnAffineTraversal_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "viewOrModify", "tail" : "(s: S): Either[T, A]", "member" : "proptics.AnAffineTraversal_.viewOrModify", "link" : "proptics\/AnAffineTraversal_.html#viewOrModify(s:S):Either[T,A]", "kind" : "abstract def"}], "members_object" : [{"label" : "id", "tail" : "(): AnAffineTraversal_[S, T, S, T]", "member" : "proptics.AnAffineTraversal_.id", "link" : "proptics\/AnAffineTraversal_$.html#id[S,T]:proptics.AnAffineTraversal_[S,T,S,T]", "kind" : "final def"}, {"label" : "apply", "tail" : "(viewOrModify: (S) => Either[T, A])(set: (S) => (B) => T): AnAffineTraversal_[S, T, A, B]", "member" : "proptics.AnAffineTraversal_.apply", "link" : "proptics\/AnAffineTraversal_$.html#apply[S,T,A,B](viewOrModify:S=>Either[T,A])(set:S=>(B=>T)):proptics.AnAffineTraversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/AnAffineTraversal_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/AnAffineTraversal_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/AnAffineTraversal_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/AnAffineTraversal_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/AnAffineTraversal_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/AnAffineTraversal_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/AnAffineTraversal_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnAffineTraversal_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnAffineTraversal_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnAffineTraversal_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/AnAffineTraversal_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/AnAffineTraversal_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/AnAffineTraversal_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/AnAffineTraversal_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/AnAffineTraversal_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/AnAffineTraversal_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/AnAffineTraversal_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/AnAffineTraversal_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/AnAffineTraversal_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/AnAffineTraversal_.html", "kind" : "class"}, {"name" : "proptics.AnIndexedLens", "shortDescription" : "", "object" : "proptics\/AnIndexedLens$.html", "members_object" : [{"label" : "lens", "tail" : "(to: (S) => ((A, I), (A) => S)): AnIndexedLens[I, S, A]", "member" : "proptics.AnIndexedLens.lens", "link" : "proptics\/AnIndexedLens$.html#lens[I,S,A](to:S=>((A,I),A=>S)):proptics.AnIndexedLens[I,S,A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => (A, I))(set: (S) => (A) => S): AnIndexedLens[I, S, A]", "member" : "proptics.AnIndexedLens.apply", "link" : "proptics\/AnIndexedLens$.html#apply[I,S,A](get:S=>(A,I))(set:S=>(A=>S)):proptics.AnIndexedLens[I,S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/AnIndexedLens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/AnIndexedLens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/AnIndexedLens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/AnIndexedLens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/AnIndexedLens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/AnIndexedLens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/AnIndexedLens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIndexedLens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIndexedLens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIndexedLens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/AnIndexedLens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/AnIndexedLens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/AnIndexedLens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/AnIndexedLens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/AnIndexedLens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/AnIndexedLens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/AnIndexedLens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/AnIndexedLens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/AnIndexedLens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.AnIndexedLens_", "shortDescription" : "An AnIndexedLens_] focuses a single piece of data and index within a larger structure.", "object" : "proptics\/AnIndexedLens_$.html", "members_class" : [{"label" : "<<*", "tail" : "(other: IndexedFold_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.<<*", "link" : "proptics\/AnIndexedLens_.html#<<*[J,C,D](other:proptics.IndexedFold_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedFold_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.composeWithLeftIndex", "link" : "proptics\/AnIndexedLens_.html#composeWithLeftIndex[C,D](other:proptics.IndexedFold_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedFold_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.AnIndexedLens_.*>>", "link" : "proptics\/AnIndexedLens_.html#*>>[J,C,D](other:proptics.IndexedFold_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedFold_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.AnIndexedLens_.composeWithRightIndex", "link" : "proptics\/AnIndexedLens_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedFold_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedGetter_[_, A, B, C, D]): IndexedGetter_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.<<*", "link" : "proptics\/AnIndexedLens_.html#<<*[J,C,D](other:proptics.IndexedGetter_[_,A,B,C,D]):proptics.IndexedGetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedGetter_[_, A, B, C, D]): IndexedGetter_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.composeWithLeftIndex", "link" : "proptics\/AnIndexedLens_.html#composeWithLeftIndex[J,C,D](other:proptics.IndexedGetter_[_,A,B,C,D]):proptics.IndexedGetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedGetter_[J, A, B, C, D]): IndexedGetter_[J, S, T, C, D]", "member" : "proptics.AnIndexedLens_.*>>", "link" : "proptics\/AnIndexedLens_.html#*>>[J,C,D](other:proptics.IndexedGetter_[J,A,B,C,D]):proptics.IndexedGetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedGetter_[J, A, B, C, D]): IndexedGetter_[J, S, T, C, D]", "member" : "proptics.AnIndexedLens_.composeWithRightIndex", "link" : "proptics\/AnIndexedLens_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedGetter_[J,A,B,C,D]):proptics.IndexedGetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedSetter_[_, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.<<*", "link" : "proptics\/AnIndexedLens_.html#<<*[J,C,D](other:proptics.IndexedSetter_[_,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedSetter_[_, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.composeWithLeftIndex", "link" : "proptics\/AnIndexedLens_.html#composeWithLeftIndex[J,C,D](other:proptics.IndexedSetter_[_,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedSetter_[J, A, B, C, D]): IndexedSetter_[J, S, T, C, D]", "member" : "proptics.AnIndexedLens_.*>>", "link" : "proptics\/AnIndexedLens_.html#*>>[J,C,D](other:proptics.IndexedSetter_[J,A,B,C,D]):proptics.IndexedSetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedSetter_[J, A, B, C, D]): IndexedSetter_[J, S, T, C, D]", "member" : "proptics.AnIndexedLens_.composeWithRightIndex", "link" : "proptics\/AnIndexedLens_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedSetter_[J,A,B,C,D]):proptics.IndexedSetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedTraversal_[_, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.<<*", "link" : "proptics\/AnIndexedLens_.html#<<*[J,C,D](other:proptics.IndexedTraversal_[_,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedTraversal_[_, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.composeWithLeftIndex", "link" : "proptics\/AnIndexedLens_.html#composeWithLeftIndex[C,D](other:proptics.IndexedTraversal_[_,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedTraversal_[J, A, B, C, D]): IndexedTraversal_[J, S, T, C, D]", "member" : "proptics.AnIndexedLens_.*>>", "link" : "proptics\/AnIndexedLens_.html#*>>[J,C,D](other:proptics.IndexedTraversal_[J,A,B,C,D]):proptics.IndexedTraversal_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedTraversal_[J, A, B, C, D]): IndexedTraversal_[J, S, T, C, D]", "member" : "proptics.AnIndexedLens_.composeWithRightIndex", "link" : "proptics\/AnIndexedLens_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedTraversal_[J,A,B,C,D]):proptics.IndexedTraversal_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: AnIndexedLens_[_, A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.<<*", "link" : "proptics\/AnIndexedLens_.html#<<*[C,D](other:proptics.AnIndexedLens_[_,A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: AnIndexedLens_[_, A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.composeWithLeftIndex", "link" : "proptics\/AnIndexedLens_.html#composeWithLeftIndex[C,D](other:proptics.AnIndexedLens_[_,A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: AnIndexedLens_[J, A, B, C, D]): AnIndexedLens_[J, S, T, C, D]", "member" : "proptics.AnIndexedLens_.*>>", "link" : "proptics\/AnIndexedLens_.html#*>>[J,C,D](other:proptics.AnIndexedLens_[J,A,B,C,D]):proptics.AnIndexedLens_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: AnIndexedLens_[J, A, B, C, D]): AnIndexedLens_[J, S, T, C, D]", "member" : "proptics.AnIndexedLens_.composeWithRightIndex", "link" : "proptics\/AnIndexedLens_.html#composeWithRightIndex[J,C,D](other:proptics.AnIndexedLens_[J,A,B,C,D]):proptics.AnIndexedLens_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedLens_[_, A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.<<*", "link" : "proptics\/AnIndexedLens_.html#<<*[C,D](other:proptics.IndexedLens_[_,A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedLens_[_, A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.composeWithLeftIndex", "link" : "proptics\/AnIndexedLens_.html#composeWithLeftIndex[C,D](other:proptics.IndexedLens_[_,A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedLens_[J, A, B, C, D]): AnIndexedLens_[J, S, T, C, D]", "member" : "proptics.AnIndexedLens_.*>>", "link" : "proptics\/AnIndexedLens_.html#*>>[J,C,D](other:proptics.IndexedLens_[J,A,B,C,D]):proptics.AnIndexedLens_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedLens_[J, A, B, C, D]): AnIndexedLens_[J, S, T, C, D]", "member" : "proptics.AnIndexedLens_.composeWithRightIndex", "link" : "proptics\/AnIndexedLens_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedLens_[J,A,B,C,D]):proptics.AnIndexedLens_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): Fold_[S, T, (C, I), D]", "member" : "proptics.AnIndexedLens_.compose", "link" : "proptics\/AnIndexedLens_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.Fold_[S,T,(C,I),D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): Getter_[S, T, (C, I), D]", "member" : "proptics.AnIndexedLens_.compose", "link" : "proptics\/AnIndexedLens_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.Getter_[S,T,(C,I),D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): Setter_[S, T, (C, I), D]", "member" : "proptics.AnIndexedLens_.compose", "link" : "proptics\/AnIndexedLens_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.Setter_[S,T,(C,I),D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.compose", "link" : "proptics\/AnIndexedLens_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.compose", "link" : "proptics\/AnIndexedLens_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.compose", "link" : "proptics\/AnIndexedLens_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.compose", "link" : "proptics\/AnIndexedLens_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.compose", "link" : "proptics\/AnIndexedLens_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.compose", "link" : "proptics\/AnIndexedLens_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.compose", "link" : "proptics\/AnIndexedLens_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.compose", "link" : "proptics\/AnIndexedLens_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.compose", "link" : "proptics\/AnIndexedLens_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.AnIndexedLens_.compose", "link" : "proptics\/AnIndexedLens_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "asIndexedFold", "tail" : "(): IndexedFold_[I, S, T, A, B]", "member" : "proptics.AnIndexedLens_.asIndexedFold", "link" : "proptics\/AnIndexedLens_.html#asIndexedFold:proptics.IndexedFold_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "asLens", "tail" : "(): Lens_[S, T, A, B]", "member" : "proptics.AnIndexedLens_.asLens", "link" : "proptics\/AnIndexedLens_.html#asLens:proptics.Lens_[S,T,A,B]", "kind" : "final def"}, {"label" : "reindex", "tail" : "(f: (I) => J): AnIndexedLens_[J, S, T, A, B]", "member" : "proptics.AnIndexedLens_.reindex", "link" : "proptics\/AnIndexedLens_.html#reindex[J](f:I=>J):proptics.AnIndexedLens_[J,S,T,A,B]", "kind" : "final def"}, {"label" : "unindex", "tail" : "(): Lens_[S, T, A, B]", "member" : "proptics.AnIndexedLens_.unindex", "link" : "proptics\/AnIndexedLens_.html#unindex:proptics.Lens_[S,T,A,B]", "kind" : "final def"}, {"label" : "asIndexedLens", "tail" : "(): IndexedLens_[I, S, T, A, B]", "member" : "proptics.AnIndexedLens_.asIndexedLens", "link" : "proptics\/AnIndexedLens_.html#asIndexedLens:proptics.IndexedLens_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "toShop", "tail" : "(): Shop[(A, I), B, S, T]", "member" : "proptics.AnIndexedLens_.toShop", "link" : "proptics\/AnIndexedLens_.html#toShop:proptics.internal.Shop[(A,I),B,S,T]", "kind" : "final def"}, {"label" : "withIndexedLens", "tail" : "(f: ((S) => (A, I)) => ((S) => (B) => T) => R): R", "member" : "proptics.AnIndexedLens_.withIndexedLens", "link" : "proptics\/AnIndexedLens_.html#withIndexedLens[R](f:(S=>(A,I))=>((S=>(B=>T))=>R)):R", "kind" : "final def"}, {"label" : "use", "tail" : "(ev: State[S, A]): State[S, (A, I)]", "member" : "proptics.AnIndexedLens_.use", "link" : "proptics\/AnIndexedLens_.html#use(implicitev:cats.data.State[S,A]):cats.data.State[S,(A,I)]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: ((A, I)) => Boolean): (S) => Option[(A, I)]", "member" : "proptics.AnIndexedLens_.find", "link" : "proptics\/AnIndexedLens_.html#find(f:((A,I))=>Boolean):S=>Option[(A,I)]", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: (A, I))(s: S)(ev: Eq[(A, I)]): Boolean", "member" : "proptics.AnIndexedLens_.notContains", "link" : "proptics\/AnIndexedLens_.html#notContains(a:(A,I))(s:S)(implicitev:cats.Eq[(A,I)]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: (A, I))(s: S)(ev: Eq[(A, I)]): Boolean", "member" : "proptics.AnIndexedLens_.contains", "link" : "proptics\/AnIndexedLens_.html#contains(a:(A,I))(s:S)(implicitev:cats.Eq[(A,I)]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: ((A, I)) => Boolean): (S) => Boolean", "member" : "proptics.AnIndexedLens_.notExists", "link" : "proptics\/AnIndexedLens_.html#notExists(f:((A,I))=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: ((A, I)) => Boolean): (S) => Boolean", "member" : "proptics.AnIndexedLens_.exists", "link" : "proptics\/AnIndexedLens_.html#exists(f:((A,I))=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "traverse", "tail" : "(s: S)(f: ((A, I)) => F[B])(ev: Applicative[F]): F[T]", "member" : "proptics.AnIndexedLens_.traverse", "link" : "proptics\/AnIndexedLens_.html#traverse[F[_]](s:S)(f:((A,I))=>F[B])(implicitev:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "overF", "tail" : "(f: ((A, I)) => F[B])(s: S)(arg0: Applicative[F]): F[T]", "member" : "proptics.AnIndexedLens_.overF", "link" : "proptics\/AnIndexedLens_.html#overF[F[_]](f:((A,I))=>F[B])(s:S)(implicitevidence$1:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: ((A, I)) => B): (S) => T", "member" : "proptics.AnIndexedLens_.over", "link" : "proptics\/AnIndexedLens_.html#over(f:((A,I))=>B):S=>T", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.AnIndexedLens_.set", "link" : "proptics\/AnIndexedLens_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "view", "tail" : "(s: S): (A, I)", "member" : "proptics.AnIndexedLens_.view", "link" : "proptics\/AnIndexedLens_.html#view(s:S):(A,I)", "kind" : "final def"}, {"member" : "proptics.AnIndexedLens_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/AnIndexedLens_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/AnIndexedLens_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/AnIndexedLens_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/AnIndexedLens_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/AnIndexedLens_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/AnIndexedLens_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/AnIndexedLens_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIndexedLens_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIndexedLens_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIndexedLens_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/AnIndexedLens_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/AnIndexedLens_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/AnIndexedLens_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/AnIndexedLens_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/AnIndexedLens_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/AnIndexedLens_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/AnIndexedLens_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/AnIndexedLens_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/AnIndexedLens_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "lens", "tail" : "(to: (S) => ((A, I), (B) => T)): AnIndexedLens_[I, S, T, A, B]", "member" : "proptics.AnIndexedLens_.lens", "link" : "proptics\/AnIndexedLens_$.html#lens[I,S,T,A,B](to:S=>((A,I),B=>T)):proptics.AnIndexedLens_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => (A, I))(_set: (S) => (B) => T): AnIndexedLens_[I, S, T, A, B]", "member" : "proptics.AnIndexedLens_.apply", "link" : "proptics\/AnIndexedLens_$.html#apply[I,S,T,A,B](get:S=>(A,I))(_set:S=>(B=>T)):proptics.AnIndexedLens_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/AnIndexedLens_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/AnIndexedLens_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/AnIndexedLens_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/AnIndexedLens_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/AnIndexedLens_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/AnIndexedLens_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/AnIndexedLens_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIndexedLens_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIndexedLens_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIndexedLens_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/AnIndexedLens_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/AnIndexedLens_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/AnIndexedLens_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/AnIndexedLens_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/AnIndexedLens_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/AnIndexedLens_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/AnIndexedLens_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/AnIndexedLens_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/AnIndexedLens_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/AnIndexedLens_.html", "kind" : "class"}, {"name" : "proptics.AnIso", "shortDescription" : "", "object" : "proptics\/AnIso$.html", "members_object" : [{"label" : "id", "tail" : "(): AnIso[S, S]", "member" : "proptics.AnIso.id", "link" : "proptics\/AnIso$.html#id[S]:proptics.AnIso[S,S]", "kind" : "final def"}, {"label" : "apply", "tail" : "(view: (S) => A)(review: (A) => S): AnIso[S, A]", "member" : "proptics.AnIso.apply", "link" : "proptics\/AnIso$.html#apply[S,A](view:S=>A)(review:A=>S):proptics.AnIso[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/AnIso$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/AnIso$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/AnIso$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/AnIso$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/AnIso$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/AnIso$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/AnIso$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIso$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIso$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIso$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/AnIso$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/AnIso$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/AnIso$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/AnIso$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/AnIso$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/AnIso$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/AnIso$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/AnIso$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/AnIso$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.AnIso_", "shortDescription" : "An AnIso_ is a generalized isomorphism.", "object" : "proptics\/AnIso_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedFold_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[I,C,D](other:proptics.IndexedFold_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedGetter_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[I,C,D](other:proptics.IndexedGetter_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedSetter_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[I,C,D](other:proptics.IndexedSetter_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[I,C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[I,C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedLens_[I, S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[I,C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Review_[A, B, C, D]): Review_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.Review_[A,B,C,D]):proptics.Review_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Grate_[A, B, C, D]): Grate_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.Grate_[A,B,C,D]):proptics.Grate_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): Getter_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): APrism_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.APrism_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): Prism_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.Prism_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): ALens_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.ALens_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): Lens_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.Lens_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): AnIso_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.AnIso_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): AnIso_[S, T, C, D]", "member" : "proptics.AnIso_.compose", "link" : "proptics\/AnIso_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.AnIso_[S,T,C,D]", "kind" : "final def"}, {"label" : "to", "tail" : "(f: (A) => C): Getter_[S, T, C, D]", "member" : "proptics.AnIso_.to", "link" : "proptics\/AnIso_.html#to[C,D](f:A=>C):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "asIso", "tail" : "(): Iso_[S, T, A, B]", "member" : "proptics.AnIso_.asIso", "link" : "proptics\/AnIso_.html#asIso:proptics.Iso_[S,T,A,B]", "kind" : "final def"}, {"label" : "reverse", "tail" : "(): AnIso_[B, A, T, S]", "member" : "proptics.AnIso_.reverse", "link" : "proptics\/AnIso_.html#reverse:proptics.AnIso_[B,A,T,S]", "kind" : "final def"}, {"label" : "dimapping", "tail" : "(other: AnIso_[SS, TT, AA, BB])(ev0: Profunctor[P], ev1: Profunctor[Q]): Iso_[P[A, SS], Q[B, TT], P[S, AA], Q[T, BB]]", "member" : "proptics.AnIso_.dimapping", "link" : "proptics\/AnIso_.html#dimapping[P[_,_],Q[_,_],SS,TT,AA,BB](other:proptics.AnIso_[SS,TT,AA,BB])(implicitev0:cats.arrow.Profunctor[P],implicitev1:cats.arrow.Profunctor[Q]):proptics.Iso_[P[A,SS],Q[B,TT],P[S,AA],Q[T,BB]]", "kind" : "final def"}, {"label" : "mapping", "tail" : "(ev0: Functor[F], ev1: Functor[G]): Iso_[F[S], G[T], F[A], G[B]]", "member" : "proptics.AnIso_.mapping", "link" : "proptics\/AnIso_.html#mapping[F[_],G[_]](implicitev0:cats.Functor[F],implicitev1:cats.Functor[G]):proptics.Iso_[F[S],G[T],F[A],G[B]]", "kind" : "final def"}, {"label" : "under", "tail" : "(f: (T) => S): (B) => A", "member" : "proptics.AnIso_.under", "link" : "proptics\/AnIso_.html#under(f:T=>S):B=>A", "kind" : "final def"}, {"label" : "zipWithF", "tail" : "(f: (F[A]) => B)(fs: F[S])(arg0: Applicative[F]): T", "member" : "proptics.AnIso_.zipWithF", "link" : "proptics\/AnIso_.html#zipWithF[F[_]](f:F[A]=>B)(fs:F[S])(implicitevidence$2:cats.Applicative[F]):T", "kind" : "final def"}, {"label" : "cotraverse", "tail" : "(fs: F[S])(f: (F[A]) => B)(ev: Applicative[F]): T", "member" : "proptics.AnIso_.cotraverse", "link" : "proptics\/AnIso_.html#cotraverse[F[_]](fs:F[S])(f:F[A]=>B)(implicitev:cats.Applicative[F]):T", "kind" : "final def"}, {"label" : "use", "tail" : "(ev: State[S, A]): State[S, A]", "member" : "proptics.AnIso_.use", "link" : "proptics\/AnIso_.html#use(implicitev:cats.data.State[S,A]):cats.data.State[S,A]", "kind" : "final def"}, {"label" : "toExchange", "tail" : "(): Exchange[A, B, S, T]", "member" : "proptics.AnIso_.toExchange", "link" : "proptics\/AnIso_.html#toExchange:proptics.internal.Exchange[A,B,S,T]", "kind" : "final def"}, {"label" : "withIso", "tail" : "(f: ((S) => A) => ((B) => T) => R): R", "member" : "proptics.AnIso_.withIso", "link" : "proptics\/AnIso_.html#withIso[R](f:(S=>A)=>((B=>T)=>R)):R", "kind" : "final def"}, {"label" : "find", "tail" : "(f: (A) => Boolean): (S) => Option[A]", "member" : "proptics.AnIso_.find", "link" : "proptics\/AnIso_.html#find(f:A=>Boolean):S=>Option[A]", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.AnIso_.notContains", "link" : "proptics\/AnIso_.html#notContains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.AnIso_.contains", "link" : "proptics\/AnIso_.html#contains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.AnIso_.notExists", "link" : "proptics\/AnIso_.html#notExists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.AnIso_.exists", "link" : "proptics\/AnIso_.html#exists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "traverse", "tail" : "(s: S)(f: (A) => F[B])(ev: Applicative[F]): F[T]", "member" : "proptics.AnIso_.traverse", "link" : "proptics\/AnIso_.html#traverse[F[_]](s:S)(f:A=>F[B])(implicitev:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "overF", "tail" : "(f: (A) => F[B])(s: S)(arg0: Applicative[F]): F[T]", "member" : "proptics.AnIso_.overF", "link" : "proptics\/AnIso_.html#overF[F[_]](f:A=>F[B])(s:S)(implicitevidence$1:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: (A) => B): (S) => T", "member" : "proptics.AnIso_.over", "link" : "proptics\/AnIso_.html#over(f:A=>B):S=>T", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.AnIso_.set", "link" : "proptics\/AnIso_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "view", "tail" : "(s: S): A", "member" : "proptics.AnIso_.view", "link" : "proptics\/AnIso_.html#view(s:S):A", "kind" : "final def"}, {"member" : "proptics.AnIso_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/AnIso_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/AnIso_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/AnIso_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/AnIso_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/AnIso_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/AnIso_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/AnIso_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIso_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIso_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIso_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/AnIso_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/AnIso_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/AnIso_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/AnIso_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/AnIso_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/AnIso_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/AnIso_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/AnIso_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/AnIso_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "review", "tail" : "(b: B): T", "member" : "proptics.AnIso_.review", "link" : "proptics\/AnIso_.html#review(b:B):T", "kind" : "abstract def"}], "members_object" : [{"label" : "id", "tail" : "(): AnIso_[S, T, S, T]", "member" : "proptics.AnIso_.id", "link" : "proptics\/AnIso_$.html#id[S,T]:proptics.AnIso_[S,T,S,T]", "kind" : "final def"}, {"label" : "apply", "tail" : "(view: (S) => A)(review: (B) => T): AnIso_[S, T, A, B]", "member" : "proptics.AnIso_.apply", "link" : "proptics\/AnIso_$.html#apply[S,T,A,B](view:S=>A)(review:B=>T):proptics.AnIso_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/AnIso_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/AnIso_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/AnIso_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/AnIso_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/AnIso_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/AnIso_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/AnIso_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIso_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIso_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/AnIso_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/AnIso_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/AnIso_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/AnIso_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/AnIso_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/AnIso_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/AnIso_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/AnIso_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/AnIso_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/AnIso_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/AnIso_.html", "kind" : "class"}, {"name" : "proptics.APrism", "shortDescription" : "", "object" : "proptics\/APrism$.html", "members_object" : [{"label" : "id", "tail" : "(): APrism[S, S]", "member" : "proptics.APrism.id", "link" : "proptics\/APrism$.html#id[S]:proptics.APrism[S,S]", "kind" : "final def"}, {"label" : "apply", "tail" : "(viewOrModify: (S) => Either[S, A])(review: (A) => S): APrism[S, A]", "member" : "proptics.APrism.apply", "link" : "proptics\/APrism$.html#apply[S,A](viewOrModify:S=>Either[S,A])(review:A=>S):proptics.APrism[S,A]", "kind" : "final def"}, {"label" : "fromPartial", "tail" : "(preview: PartialFunction[S, A])(review: (A) => S): APrism[S, A]", "member" : "proptics.APrism.fromPartial", "link" : "proptics\/APrism$.html#fromPartial[S,A](preview:PartialFunction[S,A])(review:A=>S):proptics.APrism[S,A]", "kind" : "final def"}, {"label" : "fromPreview", "tail" : "(preview: (S) => Option[A])(review: (A) => S): APrism[S, A]", "member" : "proptics.APrism.fromPreview", "link" : "proptics\/APrism$.html#fromPreview[S,A](preview:S=>Option[A])(review:A=>S):proptics.APrism[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/APrism$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/APrism$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/APrism$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/APrism$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/APrism$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/APrism$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/APrism$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/APrism$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/APrism$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/APrism$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/APrism$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/APrism$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/APrism$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/APrism$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/APrism$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/APrism$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/APrism$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/APrism$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/APrism$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.APrism_", "shortDescription" : "APrism_ is used for selecting cases of a type, most often a sum type.", "object" : "proptics\/APrism_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedFold_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[I,C,D](other:proptics.IndexedFold_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedGetter_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[I,C,D](other:proptics.IndexedGetter_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedSetter_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[I,C,D](other:proptics.IndexedSetter_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[I,C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[I,C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[I,C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Review_[A, B, C, D]): Review_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.Review_[A,B,C,D]):proptics.Review_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): APrism_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.APrism_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): APrism_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.APrism_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): APrism_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.APrism_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): APrism_[S, T, C, D]", "member" : "proptics.APrism_.compose", "link" : "proptics\/APrism_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.APrism_[S,T,C,D]", "kind" : "final def"}, {"label" : "to", "tail" : "(f: (A) => C): Fold_[S, T, C, D]", "member" : "proptics.APrism_.to", "link" : "proptics\/APrism_.html#to[C,D](f:A=>C):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "asFold", "tail" : "(): Fold_[S, T, A, B]", "member" : "proptics.APrism_.asFold", "link" : "proptics\/APrism_.html#asFold:proptics.Fold_[S,T,A,B]", "kind" : "final def"}, {"label" : "asPrism", "tail" : "(): Prism_[S, T, A, B]", "member" : "proptics.APrism_.asPrism", "link" : "proptics\/APrism_.html#asPrism:proptics.Prism_[S,T,A,B]", "kind" : "final def"}, {"label" : "toMarket", "tail" : "(): Market[A, B, S, T]", "member" : "proptics.APrism_.toMarket", "link" : "proptics\/APrism_.html#toMarket:proptics.internal.Market[A,B,S,T]", "kind" : "final def"}, {"label" : "withPrism", "tail" : "(f: ((S) => Either[T, A]) => ((B) => T) => R): R", "member" : "proptics.APrism_.withPrism", "link" : "proptics\/APrism_.html#withPrism[R](f:(S=>Either[T,A])=>((B=>T)=>R)):R", "kind" : "final def"}, {"label" : "find", "tail" : "(p: (A) => Boolean): (S) => Option[A]", "member" : "proptics.APrism_.find", "link" : "proptics\/APrism_.html#find(p:A=>Boolean):S=>Option[A]", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.APrism_.nonEmpty", "link" : "proptics\/APrism_.html#nonEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.APrism_.isEmpty", "link" : "proptics\/APrism_.html#isEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.APrism_.notContains", "link" : "proptics\/APrism_.html#notContains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.APrism_.contains", "link" : "proptics\/APrism_.html#contains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.APrism_.notExists", "link" : "proptics\/APrism_.html#notExists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.APrism_.exists", "link" : "proptics\/APrism_.html#exists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "forall", "tail" : "(s: S)(f: (A) => R)(arg0: Heyting[R]): R", "member" : "proptics.APrism_.forall", "link" : "proptics\/APrism_.html#forall[R](s:S)(f:A=>R)(implicitevidence$2:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "forall", "tail" : "(p: (A) => Boolean): (S) => Boolean", "member" : "proptics.APrism_.forall", "link" : "proptics\/APrism_.html#forall(p:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "overF", "tail" : "(f: (A) => F[B])(s: S)(arg0: Applicative[F]): F[T]", "member" : "proptics.APrism_.overF", "link" : "proptics\/APrism_.html#overF[F[_]](f:A=>F[B])(s:S)(implicitevidence$1:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "overOption", "tail" : "(f: (A) => B): (S) => Option[T]", "member" : "proptics.APrism_.overOption", "link" : "proptics\/APrism_.html#overOption(f:A=>B):S=>Option[T]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: (A) => B): (S) => T", "member" : "proptics.APrism_.over", "link" : "proptics\/APrism_.html#over(f:A=>B):S=>T", "kind" : "final def"}, {"label" : "setOption", "tail" : "(b: B): (S) => Option[T]", "member" : "proptics.APrism_.setOption", "link" : "proptics\/APrism_.html#setOption(b:B):S=>Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.APrism_.set", "link" : "proptics\/APrism_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "review", "tail" : "(b: B): T", "member" : "proptics.APrism_.review", "link" : "proptics\/APrism_.html#review(b:B):T", "kind" : "final def"}, {"label" : "preview", "tail" : "(s: S): Option[A]", "member" : "proptics.APrism_.preview", "link" : "proptics\/APrism_.html#preview(s:S):Option[A]", "kind" : "final def"}, {"label" : "viewOrModify", "tail" : "(s: S): Either[T, A]", "member" : "proptics.APrism_.viewOrModify", "link" : "proptics\/APrism_.html#viewOrModify(s:S):Either[T,A]", "kind" : "final def"}, {"member" : "proptics.APrism_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/APrism_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/APrism_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/APrism_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/APrism_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/APrism_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/APrism_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/APrism_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/APrism_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/APrism_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/APrism_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/APrism_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/APrism_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/APrism_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/APrism_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/APrism_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/APrism_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/APrism_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/APrism_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/APrism_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "traverse", "tail" : "(s: S)(f: (A) => F[B])(ev: Applicative[F]): F[T]", "member" : "proptics.APrism_.traverse", "link" : "proptics\/APrism_.html#traverse[F[_]](s:S)(f:A=>F[B])(implicitev:cats.Applicative[F]):F[T]", "kind" : "abstract def"}], "members_object" : [{"label" : "id", "tail" : "(): APrism_[S, T, S, T]", "member" : "proptics.APrism_.id", "link" : "proptics\/APrism_$.html#id[S,T]:proptics.APrism_[S,T,S,T]", "kind" : "final def"}, {"label" : "apply", "tail" : "(_viewOrModify: (S) => Either[T, A])(_review: (B) => T): APrism_[S, T, A, B]", "member" : "proptics.APrism_.apply", "link" : "proptics\/APrism_$.html#apply[S,T,A,B](_viewOrModify:S=>Either[T,A])(_review:B=>T):proptics.APrism_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/APrism_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/APrism_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/APrism_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/APrism_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/APrism_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/APrism_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/APrism_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/APrism_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/APrism_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/APrism_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/APrism_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/APrism_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/APrism_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/APrism_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/APrism_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/APrism_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/APrism_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/APrism_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/APrism_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/APrism_.html", "kind" : "class"}, {"name" : "proptics.ATraversal", "shortDescription" : "", "object" : "proptics\/ATraversal$.html", "members_object" : [{"label" : "partsOf", "tail" : "(traversal: ATraversal_[S, T, A, A])(ev0: Sellable[[α$120$, β$121$](α$120$) => β$121$, [β$122$, γ$123$, ε$124$]Bazaar[[α$118$, β$119$](α$118$) => β$119$, β$122$, γ$123$, Unit, ε$124$]]): Lens_[S, T, List[A], List[A]]", "member" : "proptics.ATraversal.partsOf", "link" : "proptics\/ATraversal$.html#partsOf[S,T,A](traversal:proptics.ATraversal_[S,T,A,A])(implicitev0:proptics.internal.Sellable[[α$120$,β$121$]α$120$=>β$121$,[β$122$,γ$123$,ε$124$]proptics.internal.Bazaar[[α$118$,β$119$]α$118$=>β$119$,β$122$,γ$123$,Unit,ε$124$]]):proptics.Lens_[S,T,List[A],List[A]]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(predicate: (A) => Boolean)(arg0: Traverse[G]): ATraversal[G[A], A]", "member" : "proptics.ATraversal.dropWhile", "link" : "proptics\/ATraversal$.html#dropWhile[G[_],A](predicate:A=>Boolean)(implicitevidence$17:cats.Traverse[G]):proptics.ATraversal[G[A],A]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(predicate: (A) => Boolean)(arg0: Traverse[G]): ATraversal[G[A], A]", "member" : "proptics.ATraversal.takeWhile", "link" : "proptics\/ATraversal$.html#takeWhile[G[_],A](predicate:A=>Boolean)(implicitevidence$16:cats.Traverse[G]):proptics.ATraversal[G[A],A]", "kind" : "final def"}, {"label" : "drop", "tail" : "(i: Int)(arg0: Traverse[F]): ATraversal[F[A], A]", "member" : "proptics.ATraversal.drop", "link" : "proptics\/ATraversal$.html#drop[F[_],A](i:Int)(implicitevidence$15:cats.Traverse[F]):proptics.ATraversal[F[A],A]", "kind" : "final def"}, {"label" : "take", "tail" : "(i: Int)(arg0: Traverse[F]): ATraversal[F[A], A]", "member" : "proptics.ATraversal.take", "link" : "proptics\/ATraversal$.html#take[F[_],A](i:Int)(implicitevidence$14:cats.Traverse[F]):proptics.ATraversal[F[A],A]", "kind" : "final def"}, {"label" : "elementAt", "tail" : "(i: Int)(arg0: Traverse[F]): ATraversal[F[A], A]", "member" : "proptics.ATraversal.elementAt", "link" : "proptics\/ATraversal$.html#elementAt[F[_],A](i:Int)(implicitevidence$13:cats.Traverse[F]):proptics.ATraversal[F[A],A]", "kind" : "final def"}, {"label" : "id", "tail" : "(): ATraversal[S, S]", "member" : "proptics.ATraversal.id", "link" : "proptics\/ATraversal$.html#id[S]:proptics.ATraversal[S,S]", "kind" : "final def"}, {"label" : "fromBazaar", "tail" : "(bazaar: Bazaar[[α$116$, β$117$](α$116$) => β$117$, A, A, S, S]): ATraversal[S, A]", "member" : "proptics.ATraversal.fromBazaar", "link" : "proptics\/ATraversal$.html#fromBazaar[S,A](bazaar:proptics.internal.Bazaar[[α$116$,β$117$]α$116$=>β$117$,A,A,S,S]):proptics.ATraversal[S,A]", "kind" : "final def"}, {"label" : "both", "tail" : "(arg0: Bitraverse[G]): ATraversal[G[A, A], A]", "member" : "proptics.ATraversal.both", "link" : "proptics\/ATraversal$.html#both[G[_,_],A](implicitevidence$12:cats.Bitraverse[G]):proptics.ATraversal[G[A,A],A]", "kind" : "final def"}, {"label" : "fromTraverse", "tail" : "(arg0: Traverse[G]): ATraversal[G[A], A]", "member" : "proptics.ATraversal.fromTraverse", "link" : "proptics\/ATraversal$.html#fromTraverse[G[_],A](implicitevidence$11:cats.Traverse[G]):proptics.ATraversal[G[A],A]", "kind" : "final def"}, {"label" : "filter", "tail" : "(fold: Fold[A, B]): ATraversal[A, A]", "member" : "proptics.ATraversal.filter", "link" : "proptics\/ATraversal$.html#filter[A,B](fold:proptics.Fold[A,B]):proptics.ATraversal[A,A]", "kind" : "final def"}, {"label" : "filter", "tail" : "(predicate: (A) => Boolean): ATraversal[A, A]", "member" : "proptics.ATraversal.filter", "link" : "proptics\/ATraversal$.html#filter[A](predicate:A=>Boolean):proptics.ATraversal[A,A]", "kind" : "final def"}, {"label" : "traverse", "tail" : "(to: (S) => (A, (A) => S)): ATraversal[S, A]", "member" : "proptics.ATraversal.traverse", "link" : "proptics\/ATraversal$.html#traverse[S,A](to:S=>(A,A=>S)):proptics.ATraversal[S,A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => A)(set: (S) => (A) => S): ATraversal[S, A]", "member" : "proptics.ATraversal.apply", "link" : "proptics\/ATraversal$.html#apply[S,A](get:S=>A)(set:S=>(A=>S)):proptics.ATraversal[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/ATraversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/ATraversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/ATraversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/ATraversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/ATraversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/ATraversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/ATraversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ATraversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ATraversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ATraversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/ATraversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/ATraversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/ATraversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/ATraversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/ATraversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/ATraversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/ATraversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/ATraversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/ATraversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.ATraversal_", "shortDescription" : "ATraversal_ is an optic that focuses on zero or more values.", "object" : "proptics\/ATraversal_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedFold_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[I,C,D](other:proptics.IndexedFold_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedGetter_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[I,C,D](other:proptics.IndexedGetter_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedSetter_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[I,C,D](other:proptics.IndexedSetter_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[I,C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[I,C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[I,C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.ATraversal_.compose", "link" : "proptics\/ATraversal_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "unsafePartsOf", "tail" : "(ev0: Sellable[[α$22$, β$23$](α$22$) => β$23$, [β$24$, γ$25$, ε$26$]Bazaar[[α$20$, β$21$](α$20$) => β$21$, β$24$, γ$25$, Unit, ε$26$]], ev1: Aux[[α$27$, β$28$](α$27$) => β$28$, [β$29$]IndexedStateT[Eval, List[B], List[B], β$29$]]): Lens_[S, T, List[A], List[B]]", "member" : "proptics.ATraversal_.unsafePartsOf", "link" : "proptics\/ATraversal_.html#unsafePartsOf(implicitev0:proptics.internal.Sellable[[α$22$,β$23$]α$22$=>β$23$,[β$24$,γ$25$,ε$26$]proptics.internal.Bazaar[[α$20$,β$21$]α$20$=>β$21$,β$24$,γ$25$,Unit,ε$26$]],implicitev1:proptics.profunctor.Corepresentable.Aux[[α$27$,β$28$]α$27$=>β$28$,[β$29$]cats.data.IndexedStateT[cats.Eval,List[B],List[B],β$29$]]):proptics.Lens_[S,T,List[A],List[B]]", "kind" : "final def"}, {"label" : "to", "tail" : "(f: (A) => C): Fold_[S, T, C, D]", "member" : "proptics.ATraversal_.to", "link" : "proptics\/ATraversal_.html#to[C,D](f:A=>C):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "asFold", "tail" : "(): Fold_[S, T, A, B]", "member" : "proptics.ATraversal_.asFold", "link" : "proptics\/ATraversal_.html#asFold:proptics.Fold_[S,T,A,B]", "kind" : "final def"}, {"label" : "asIndexableTraversal", "tail" : "(ev0: Applicative[[β$19$]IndexedStateT[Eval, Int, Int, β$19$]]): IndexedTraversal_[Int, S, T, A, B]", "member" : "proptics.ATraversal_.asIndexableTraversal", "link" : "proptics\/ATraversal_.html#asIndexableTraversal(implicitev0:cats.Applicative[[β$19$]cats.data.IndexedStateT[cats.Eval,Int,Int,β$19$]]):proptics.IndexedTraversal_[Int,S,T,A,B]", "kind" : "final def"}, {"label" : "asTraversal", "tail" : "(): Traversal_[S, T, A, B]", "member" : "proptics.ATraversal_.asTraversal", "link" : "proptics\/ATraversal_.html#asTraversal:proptics.Traversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "toBazaar", "tail" : "(): Bazaar[[α$11$, β$12$](α$11$) => β$12$, A, B, S, T]", "member" : "proptics.ATraversal_.toBazaar", "link" : "proptics\/ATraversal_.html#toBazaar:proptics.internal.Bazaar[[α$11$,β$12$]α$11$=>β$12$,A,B,S,T]", "kind" : "final def"}, {"label" : "use", "tail" : "(ev: State[S, A]): State[S, List[A]]", "member" : "proptics.ATraversal_.use", "link" : "proptics\/ATraversal_.html#use(implicitev:cats.data.State[S,A]):cats.data.State[S,List[A]]", "kind" : "final def"}, {"label" : "toList", "tail" : "(s: S): List[A]", "member" : "proptics.ATraversal_.toList", "link" : "proptics\/ATraversal_.html#toList(s:S):List[A]", "kind" : "final def"}, {"label" : "toArray", "tail" : "(s: S)(arg0: ClassTag[AA]): Array[AA]", "member" : "proptics.ATraversal_.toArray", "link" : "proptics\/ATraversal_.html#toArray[AA>:A](s:S)(implicitevidence$5:scala.reflect.ClassTag[AA]):Array[AA]", "kind" : "final def"}, {"label" : "maximum", "tail" : "(s: S)(ev: Order[A]): Option[A]", "member" : "proptics.ATraversal_.maximum", "link" : "proptics\/ATraversal_.html#maximum(s:S)(implicitev:cats.Order[A]):Option[A]", "kind" : "final def"}, {"label" : "minimum", "tail" : "(s: S)(ev: Order[A]): Option[A]", "member" : "proptics.ATraversal_.minimum", "link" : "proptics\/ATraversal_.html#minimum(s:S)(implicitev:cats.Order[A]):Option[A]", "kind" : "final def"}, {"label" : "last", "tail" : "(s: S): Option[A]", "member" : "proptics.ATraversal_.last", "link" : "proptics\/ATraversal_.html#last(s:S):Option[A]", "kind" : "final def"}, {"label" : "first", "tail" : "(s: S): Option[A]", "member" : "proptics.ATraversal_.first", "link" : "proptics\/ATraversal_.html#first(s:S):Option[A]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: (A) => Boolean): (S) => Option[A]", "member" : "proptics.ATraversal_.find", "link" : "proptics\/ATraversal_.html#find(f:A=>Boolean):S=>Option[A]", "kind" : "final def"}, {"label" : "length", "tail" : "(s: S): Int", "member" : "proptics.ATraversal_.length", "link" : "proptics\/ATraversal_.html#length(s:S):Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.ATraversal_.nonEmpty", "link" : "proptics\/ATraversal_.html#nonEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.ATraversal_.isEmpty", "link" : "proptics\/ATraversal_.html#isEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.ATraversal_.notContains", "link" : "proptics\/ATraversal_.html#notContains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.ATraversal_.contains", "link" : "proptics\/ATraversal_.html#contains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.ATraversal_.notExists", "link" : "proptics\/ATraversal_.html#notExists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.ATraversal_.exists", "link" : "proptics\/ATraversal_.html#exists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "any", "tail" : "(s: S)(f: (A) => R)(arg0: Heyting[R]): R", "member" : "proptics.ATraversal_.any", "link" : "proptics\/ATraversal_.html#any[R](s:S)(f:A=>R)(implicitevidence$4:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "or", "tail" : "(s: S)(ev: Heyting[A]): A", "member" : "proptics.ATraversal_.or", "link" : "proptics\/ATraversal_.html#or(s:S)(implicitev:spire.algebra.lattice.Heyting[A]):A", "kind" : "final def"}, {"label" : "and", "tail" : "(s: S)(ev: Heyting[A]): A", "member" : "proptics.ATraversal_.and", "link" : "proptics\/ATraversal_.html#and(s:S)(implicitev:spire.algebra.lattice.Heyting[A]):A", "kind" : "final def"}, {"label" : "forall", "tail" : "(s: S)(f: (A) => R)(arg0: Heyting[R]): R", "member" : "proptics.ATraversal_.forall", "link" : "proptics\/ATraversal_.html#forall[R](s:S)(f:A=>R)(implicitevidence$3:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "forall", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.ATraversal_.forall", "link" : "proptics\/ATraversal_.html#forall(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "product", "tail" : "(s: S)(ev: MultiplicativeMonoid[A]): A", "member" : "proptics.ATraversal_.product", "link" : "proptics\/ATraversal_.html#product(s:S)(implicitev:spire.algebra.MultiplicativeMonoid[A]):A", "kind" : "final def"}, {"label" : "sum", "tail" : "(s: S)(ev: AdditiveMonoid[A]): A", "member" : "proptics.ATraversal_.sum", "link" : "proptics\/ATraversal_.html#sum(s:S)(implicitev:spire.algebra.AdditiveMonoid[A]):A", "kind" : "final def"}, {"label" : "traverse_", "tail" : "(s: S)(f: (A) => F[R])(ev: Applicative[F]): F[Unit]", "member" : "proptics.ATraversal_.traverse_", "link" : "proptics\/ATraversal_.html#traverse_[F[_],R](s:S)(f:A=>F[R])(implicitev:cats.Applicative[F]):F[Unit]", "kind" : "final def"}, {"label" : "sequence_", "tail" : "(s: S)(ev: Applicative[F]): F[Unit]", "member" : "proptics.ATraversal_.sequence_", "link" : "proptics\/ATraversal_.html#sequence_[F[_]](s:S)(implicitev:cats.Applicative[F]):F[Unit]", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(s: S)(r: R)(f: (R, A) => R): R", "member" : "proptics.ATraversal_.foldLeft", "link" : "proptics\/ATraversal_.html#foldLeft[R](s:S)(r:R)(f:(R,A)=>R):R", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(s: S)(r: R)(f: (A, R) => R): R", "member" : "proptics.ATraversal_.foldRight", "link" : "proptics\/ATraversal_.html#foldRight[R](s:S)(r:R)(f:(A,R)=>R):R", "kind" : "final def"}, {"label" : "fold", "tail" : "(s: S)(ev: Monoid[A]): A", "member" : "proptics.ATraversal_.fold", "link" : "proptics\/ATraversal_.html#fold(s:S)(implicitev:cats.Monoid[A]):A", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(s: S)(f: (A) => R)(arg0: Monoid[R]): R", "member" : "proptics.ATraversal_.foldMap", "link" : "proptics\/ATraversal_.html#foldMap[R](s:S)(f:A=>R)(implicitevidence$2:cats.Monoid[R]):R", "kind" : "final def"}, {"label" : "overF", "tail" : "(f: (A) => F[B])(s: S)(arg0: Applicative[F]): F[T]", "member" : "proptics.ATraversal_.overF", "link" : "proptics\/ATraversal_.html#overF[F[_]](f:A=>F[B])(s:S)(implicitevidence$1:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: (A) => B): (S) => T", "member" : "proptics.ATraversal_.over", "link" : "proptics\/ATraversal_.html#over(f:A=>B):S=>T", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.ATraversal_.set", "link" : "proptics\/ATraversal_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "preview", "tail" : "(s: S): Option[A]", "member" : "proptics.ATraversal_.preview", "link" : "proptics\/ATraversal_.html#preview(s:S):Option[A]", "kind" : "final def"}, {"label" : "viewAll", "tail" : "(s: S): List[A]", "member" : "proptics.ATraversal_.viewAll", "link" : "proptics\/ATraversal_.html#viewAll(s:S):List[A]", "kind" : "final def"}, {"label" : "view", "tail" : "(s: S)(ev: Monoid[A]): A", "member" : "proptics.ATraversal_.view", "link" : "proptics\/ATraversal_.html#view(s:S)(implicitev:cats.Monoid[A]):A", "kind" : "final def"}, {"member" : "proptics.ATraversal_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/ATraversal_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/ATraversal_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/ATraversal_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/ATraversal_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/ATraversal_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/ATraversal_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/ATraversal_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ATraversal_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ATraversal_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ATraversal_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/ATraversal_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/ATraversal_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/ATraversal_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/ATraversal_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/ATraversal_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/ATraversal_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/ATraversal_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/ATraversal_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/ATraversal_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "traverse", "tail" : "(s: S)(f: (A) => G[B])(ev: Applicative[G]): G[T]", "member" : "proptics.ATraversal_.traverse", "link" : "proptics\/ATraversal_.html#traverse[G[_]](s:S)(f:A=>G[B])(implicitev:cats.Applicative[G]):G[T]", "kind" : "abstract def"}], "members_object" : [{"label" : "unsafePartsOf", "tail" : "(aTraversal: ATraversal_[S, T, A, B])(ev0: Sellable[[α$106$, β$107$](α$106$) => β$107$, [β$108$, γ$109$, ε$110$]Bazaar[[α$104$, β$105$](α$104$) => β$105$, β$108$, γ$109$, Unit, ε$110$]], ev2: Aux[[α$111$, β$112$](α$111$) => β$112$, [β$113$]IndexedStateT[Eval, List[B], List[B], β$113$]]): Lens_[S, T, List[A], List[B]]", "member" : "proptics.ATraversal_.unsafePartsOf", "link" : "proptics\/ATraversal_$.html#unsafePartsOf[S,T,A,B](aTraversal:proptics.ATraversal_[S,T,A,B])(implicitev0:proptics.internal.Sellable[[α$106$,β$107$]α$106$=>β$107$,[β$108$,γ$109$,ε$110$]proptics.internal.Bazaar[[α$104$,β$105$]α$104$=>β$105$,β$108$,γ$109$,Unit,ε$110$]],implicitev2:proptics.profunctor.Corepresentable.Aux[[α$111$,β$112$]α$111$=>β$112$,[β$113$]cats.data.IndexedStateT[cats.Eval,List[B],List[B],β$113$]]):proptics.Lens_[S,T,List[A],List[B]]", "kind" : "final def"}, {"label" : "id", "tail" : "(): ATraversal_[S, T, S, T]", "member" : "proptics.ATraversal_.id", "link" : "proptics\/ATraversal_$.html#id[S,T]:proptics.ATraversal_[S,T,S,T]", "kind" : "final def"}, {"label" : "both", "tail" : "(arg0: Bitraverse[G]): ATraversal_[G[A, A], G[B, B], A, B]", "member" : "proptics.ATraversal_.both", "link" : "proptics\/ATraversal_$.html#both[G[_,_],A,B](implicitevidence$10:cats.Bitraverse[G]):proptics.ATraversal_[G[A,A],G[B,B],A,B]", "kind" : "final def"}, {"label" : "fromBazaar", "tail" : "(bazaar: Bazaar[[α$100$, β$101$](α$100$) => β$101$, A, B, S, T]): ATraversal_[S, T, A, B]", "member" : "proptics.ATraversal_.fromBazaar", "link" : "proptics\/ATraversal_$.html#fromBazaar[S,T,A,B](bazaar:proptics.internal.Bazaar[[α$100$,β$101$]α$100$=>β$101$,A,B,S,T]):proptics.ATraversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "fromTraverse", "tail" : "(ev0: Traverse[G]): ATraversal_[G[A], G[B], A, B]", "member" : "proptics.ATraversal_.fromTraverse", "link" : "proptics\/ATraversal_$.html#fromTraverse[G[_],A,B](implicitev0:cats.Traverse[G]):proptics.ATraversal_[G[A],G[B],A,B]", "kind" : "final def"}, {"label" : "filter", "tail" : "(predicate: (A) => Boolean): ATraversal_[A, A, A, A]", "member" : "proptics.ATraversal_.filter", "link" : "proptics\/ATraversal_$.html#filter[A](predicate:A=>Boolean):proptics.ATraversal_[A,A,A,A]", "kind" : "final def"}, {"label" : "traverse", "tail" : "(combined: (S) => (A, (B) => T)): ATraversal_[S, T, A, B]", "member" : "proptics.ATraversal_.traverse", "link" : "proptics\/ATraversal_$.html#traverse[P[_,_],S,T,A,B](combined:S=>(A,B=>T)):proptics.ATraversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => A)(_set: (S) => (B) => T): ATraversal_[S, T, A, B]", "member" : "proptics.ATraversal_.apply", "link" : "proptics\/ATraversal_$.html#apply[S,T,A,B](get:S=>A)(_set:S=>(B=>T)):proptics.ATraversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/ATraversal_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/ATraversal_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/ATraversal_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/ATraversal_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/ATraversal_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/ATraversal_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/ATraversal_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ATraversal_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ATraversal_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/ATraversal_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/ATraversal_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/ATraversal_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/ATraversal_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/ATraversal_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/ATraversal_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/ATraversal_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/ATraversal_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/ATraversal_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/ATraversal_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/ATraversal_.html", "kind" : "class"}, {"name" : "proptics.Fold", "shortDescription" : "", "object" : "proptics\/Fold$.html", "members_object" : [{"label" : "has", "tail" : "(fold: Fold[S, A]): (S) => Boolean", "member" : "proptics.Fold.has", "link" : "proptics\/Fold$.html#has[S,A](fold:proptics.Fold[S,A]):S=>Boolean", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(predicate: (A) => Boolean)(arg0: Foldable[G]): Fold[G[A], A]", "member" : "proptics.Fold.dropWhile", "link" : "proptics\/Fold$.html#dropWhile[G[_],A](predicate:A=>Boolean)(implicitevidence$27:cats.Foldable[G]):proptics.Fold[G[A],A]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(predicate: (A) => Boolean)(arg0: Foldable[G]): Fold[G[A], A]", "member" : "proptics.Fold.takeWhile", "link" : "proptics\/Fold$.html#takeWhile[G[_],A](predicate:A=>Boolean)(implicitevidence$26:cats.Foldable[G]):proptics.Fold[G[A],A]", "kind" : "final def"}, {"label" : "drop", "tail" : "(i: Int)(arg0: Foldable[G]): Fold[G[A], A]", "member" : "proptics.Fold.drop", "link" : "proptics\/Fold$.html#drop[G[_],A](i:Int)(implicitevidence$25:cats.Foldable[G]):proptics.Fold[G[A],A]", "kind" : "final def"}, {"label" : "take", "tail" : "(i: Int)(arg0: Foldable[G]): Fold[G[A], A]", "member" : "proptics.Fold.take", "link" : "proptics\/Fold$.html#take[G[_],A](i:Int)(implicitevidence$24:cats.Foldable[G]):proptics.Fold[G[A],A]", "kind" : "final def"}, {"label" : "elementAt", "tail" : "(i: Int)(arg0: Foldable[F]): Fold[F[A], A]", "member" : "proptics.Fold.elementAt", "link" : "proptics\/Fold$.html#elementAt[F[_],A](i:Int)(implicitevidence$23:cats.Foldable[F]):proptics.Fold[F[A],A]", "kind" : "final def"}, {"label" : "id", "tail" : "(): Fold[S, S]", "member" : "proptics.Fold.id", "link" : "proptics\/Fold$.html#id[S]:proptics.Fold[S,S]", "kind" : "final def"}, {"label" : "fromFoldable", "tail" : "(arg0: Foldable[F]): Fold[F[A], A]", "member" : "proptics.Fold.fromFoldable", "link" : "proptics\/Fold$.html#fromFoldable[F[_],A](implicitevidence$22:cats.Foldable[F]):proptics.Fold[F[A],A]", "kind" : "final def"}, {"label" : "filter", "tail" : "(fold: Fold[A, B]): Fold[A, A]", "member" : "proptics.Fold.filter", "link" : "proptics\/Fold$.html#filter[A,B](fold:proptics.Fold[A,B]):proptics.Fold[A,A]", "kind" : "final def"}, {"label" : "filter", "tail" : "(predicate: (A) => Boolean): Fold[A, A]", "member" : "proptics.Fold.filter", "link" : "proptics\/Fold$.html#filter[A](predicate:A=>Boolean):proptics.Fold[A,A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(f: (S) => A): Fold[S, A]", "member" : "proptics.Fold.apply", "link" : "proptics\/Fold$.html#apply[S,A](f:S=>A):proptics.Fold[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Fold$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Fold$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Fold$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Fold$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Fold$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Fold$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Fold$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Fold$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Fold$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Fold$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Fold$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Fold$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Fold$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Fold$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Fold$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Fold$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Fold$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Fold$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Fold$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Fold_", "shortDescription" : "A Fold_ is a generalization of something Foldable.", "object" : "proptics\/Fold_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedFold_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[I,C,D](other:proptics.IndexedFold_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedGetter_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[I,C,D](other:proptics.IndexedGetter_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[I,C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[I,C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[I,C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "to", "tail" : "(f: (A) => C): Fold_[S, T, C, D]", "member" : "proptics.Fold_.to", "link" : "proptics\/Fold_.html#to[C,D](f:A=>C):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Fold_.compose", "link" : "proptics\/Fold_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "asIndexableFold", "tail" : "(): IndexedFold_[Int, S, T, A, B]", "member" : "proptics.Fold_.asIndexableFold", "link" : "proptics\/Fold_.html#asIndexableFold:proptics.IndexedFold_[Int,S,T,A,B]", "kind" : "final def"}, {"label" : "use", "tail" : "(ev: State[S, A]): State[S, List[A]]", "member" : "proptics.Fold_.use", "link" : "proptics\/Fold_.html#use(implicitev:cats.data.State[S,A]):cats.data.State[S,List[A]]", "kind" : "final def"}, {"label" : "toList", "tail" : "(s: S): List[A]", "member" : "proptics.Fold_.toList", "link" : "proptics\/Fold_.html#toList(s:S):List[A]", "kind" : "final def"}, {"label" : "toArray", "tail" : "(s: S)(ev: ClassTag[AA]): Array[AA]", "member" : "proptics.Fold_.toArray", "link" : "proptics\/Fold_.html#toArray[AA>:A](s:S)(implicitev:scala.reflect.ClassTag[AA]):Array[AA]", "kind" : "final def"}, {"label" : "maximum", "tail" : "(s: S)(ev: Order[A]): Option[A]", "member" : "proptics.Fold_.maximum", "link" : "proptics\/Fold_.html#maximum(s:S)(implicitev:cats.Order[A]):Option[A]", "kind" : "final def"}, {"label" : "minimum", "tail" : "(s: S)(ev: Order[A]): Option[A]", "member" : "proptics.Fold_.minimum", "link" : "proptics\/Fold_.html#minimum(s:S)(implicitev:cats.Order[A]):Option[A]", "kind" : "final def"}, {"label" : "last", "tail" : "(s: S): Option[A]", "member" : "proptics.Fold_.last", "link" : "proptics\/Fold_.html#last(s:S):Option[A]", "kind" : "final def"}, {"label" : "first", "tail" : "(s: S): Option[A]", "member" : "proptics.Fold_.first", "link" : "proptics\/Fold_.html#first(s:S):Option[A]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: (A) => Boolean): (S) => Option[A]", "member" : "proptics.Fold_.find", "link" : "proptics\/Fold_.html#find(f:A=>Boolean):S=>Option[A]", "kind" : "final def"}, {"label" : "length", "tail" : "(s: S): Int", "member" : "proptics.Fold_.length", "link" : "proptics\/Fold_.html#length(s:S):Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.Fold_.nonEmpty", "link" : "proptics\/Fold_.html#nonEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.Fold_.isEmpty", "link" : "proptics\/Fold_.html#isEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.Fold_.notContains", "link" : "proptics\/Fold_.html#notContains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.Fold_.contains", "link" : "proptics\/Fold_.html#contains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Fold_.notExists", "link" : "proptics\/Fold_.html#notExists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Fold_.exists", "link" : "proptics\/Fold_.html#exists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "any", "tail" : "(s: S)(f: (A) => R)(arg0: Heyting[R]): R", "member" : "proptics.Fold_.any", "link" : "proptics\/Fold_.html#any[R](s:S)(f:A=>R)(implicitevidence$4:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "or", "tail" : "(s: S)(ev: Heyting[A]): A", "member" : "proptics.Fold_.or", "link" : "proptics\/Fold_.html#or(s:S)(implicitev:spire.algebra.lattice.Heyting[A]):A", "kind" : "final def"}, {"label" : "and", "tail" : "(s: S)(ev: Heyting[A]): A", "member" : "proptics.Fold_.and", "link" : "proptics\/Fold_.html#and(s:S)(implicitev:spire.algebra.lattice.Heyting[A]):A", "kind" : "final def"}, {"label" : "forall", "tail" : "(s: S)(f: (A) => R)(arg0: Heyting[R]): R", "member" : "proptics.Fold_.forall", "link" : "proptics\/Fold_.html#forall[R](s:S)(f:A=>R)(implicitevidence$3:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "forall", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Fold_.forall", "link" : "proptics\/Fold_.html#forall(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "product", "tail" : "(s: S)(ev: MultiplicativeMonoid[A]): A", "member" : "proptics.Fold_.product", "link" : "proptics\/Fold_.html#product(s:S)(implicitev:spire.algebra.MultiplicativeMonoid[A]):A", "kind" : "final def"}, {"label" : "sum", "tail" : "(s: S)(ev: Semiring[A]): A", "member" : "proptics.Fold_.sum", "link" : "proptics\/Fold_.html#sum(s:S)(implicitev:spire.algebra.Semiring[A]):A", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(s: S)(r: R)(f: (R, A) => R): R", "member" : "proptics.Fold_.foldLeft", "link" : "proptics\/Fold_.html#foldLeft[R](s:S)(r:R)(f:(R,A)=>R):R", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(s: S)(r: R)(f: (A, R) => R): R", "member" : "proptics.Fold_.foldRight", "link" : "proptics\/Fold_.html#foldRight[R](s:S)(r:R)(f:(A,R)=>R):R", "kind" : "final def"}, {"label" : "fold", "tail" : "(s: S)(ev: Monoid[A]): A", "member" : "proptics.Fold_.fold", "link" : "proptics\/Fold_.html#fold(s:S)(implicitev:cats.Monoid[A]):A", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(s: S)(f: (A) => R)(arg0: Monoid[R]): R", "member" : "proptics.Fold_.foldMap", "link" : "proptics\/Fold_.html#foldMap[R](s:S)(f:A=>R)(implicitevidence$2:cats.Monoid[R]):R", "kind" : "def"}, {"label" : "preview", "tail" : "(s: S): Option[A]", "member" : "proptics.Fold_.preview", "link" : "proptics\/Fold_.html#preview(s:S):Option[A]", "kind" : "final def"}, {"label" : "viewAll", "tail" : "(s: S): List[A]", "member" : "proptics.Fold_.viewAll", "link" : "proptics\/Fold_.html#viewAll(s:S):List[A]", "kind" : "final def"}, {"label" : "view", "tail" : "(s: S)(ev: Monoid[A]): A", "member" : "proptics.Fold_.view", "link" : "proptics\/Fold_.html#view(s:S)(implicitev:cats.Monoid[A]):A", "kind" : "final def"}, {"member" : "proptics.Fold_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Fold_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Fold_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Fold_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Fold_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Fold_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Fold_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Fold_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Fold_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Fold_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Fold_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Fold_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Fold_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Fold_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Fold_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Fold_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Fold_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Fold_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Fold_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Fold_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getterToFold", "tail" : "(getter: Getter_[S, T, A, B]): Fold_[S, T, A, B]", "member" : "proptics.Fold_.getterToFold", "link" : "proptics\/Fold_$.html#getterToFold[S,T,A,B](getter:proptics.Getter_[S,T,A,B]):proptics.Fold_[S,T,A,B]", "kind" : "implicit final def"}, {"label" : "aTraversalToFold", "tail" : "(aTraversal: ATraversal_[S, T, A, B]): Fold_[S, T, A, B]", "member" : "proptics.Fold_.aTraversalToFold", "link" : "proptics\/Fold_$.html#aTraversalToFold[S,T,A,B](aTraversal:proptics.ATraversal_[S,T,A,B]):proptics.Fold_[S,T,A,B]", "kind" : "implicit final def"}, {"label" : "traversalToFold", "tail" : "(traversal: Traversal_[S, T, A, B]): Fold_[S, T, A, B]", "member" : "proptics.Fold_.traversalToFold", "link" : "proptics\/Fold_$.html#traversalToFold[S,T,A,B](traversal:proptics.Traversal_[S,T,A,B]):proptics.Fold_[S,T,A,B]", "kind" : "implicit final def"}, {"label" : "anAffineTraversalToFold", "tail" : "(anAffineTraversal: AnAffineTraversal_[S, T, A, B]): Fold_[S, T, A, B]", "member" : "proptics.Fold_.anAffineTraversalToFold", "link" : "proptics\/Fold_$.html#anAffineTraversalToFold[S,T,A,B](anAffineTraversal:proptics.AnAffineTraversal_[S,T,A,B]):proptics.Fold_[S,T,A,B]", "kind" : "implicit final def"}, {"label" : "affineTraversalToFold", "tail" : "(affineTraversal: AffineTraversal_[S, T, A, B]): Fold_[S, T, A, B]", "member" : "proptics.Fold_.affineTraversalToFold", "link" : "proptics\/Fold_$.html#affineTraversalToFold[S,T,A,B](affineTraversal:proptics.AffineTraversal_[S,T,A,B]):proptics.Fold_[S,T,A,B]", "kind" : "implicit final def"}, {"label" : "aPrismToFold", "tail" : "(aPrism: APrism_[S, T, A, B]): Fold_[S, T, A, B]", "member" : "proptics.Fold_.aPrismToFold", "link" : "proptics\/Fold_$.html#aPrismToFold[S,T,A,B](aPrism:proptics.APrism_[S,T,A,B]):proptics.Fold_[S,T,A,B]", "kind" : "implicit final def"}, {"label" : "prismToFold", "tail" : "(prism: Prism_[S, T, A, B]): Fold_[S, T, A, B]", "member" : "proptics.Fold_.prismToFold", "link" : "proptics\/Fold_$.html#prismToFold[S,T,A,B](prism:proptics.Prism_[S,T,A,B]):proptics.Fold_[S,T,A,B]", "kind" : "implicit final def"}, {"label" : "aLensToFold", "tail" : "(aLens: ALens_[S, T, A, B]): Fold_[S, T, A, B]", "member" : "proptics.Fold_.aLensToFold", "link" : "proptics\/Fold_$.html#aLensToFold[S,T,A,B](aLens:proptics.ALens_[S,T,A,B]):proptics.Fold_[S,T,A,B]", "kind" : "implicit final def"}, {"label" : "lensToFold", "tail" : "(lens: Lens_[S, T, A, B]): Fold_[S, T, A, B]", "member" : "proptics.Fold_.lensToFold", "link" : "proptics\/Fold_$.html#lensToFold[S,T,A,B](lens:proptics.Lens_[S,T,A,B]):proptics.Fold_[S,T,A,B]", "kind" : "implicit final def"}, {"label" : "id", "tail" : "(): Fold_[S, T, S, T]", "member" : "proptics.Fold_.id", "link" : "proptics\/Fold_$.html#id[S,T]:proptics.Fold_[S,T,S,T]", "kind" : "final def"}, {"label" : "both", "tail" : "(arg0: Bifoldable[G]): Fold_[G[A, A], G[B, B], A, B]", "member" : "proptics.Fold_.both", "link" : "proptics\/Fold_$.html#both[G[_,_],A,B](implicitevidence$18:cats.Bifoldable[G]):proptics.Fold_[G[A,A],G[B,B],A,B]", "kind" : "final def"}, {"label" : "fromFoldable", "tail" : "(ev0: Foldable[F]): Fold_[F[A], B, A, T]", "member" : "proptics.Fold_.fromFoldable", "link" : "proptics\/Fold_$.html#fromFoldable[F[_],A,B,T](implicitev0:cats.Foldable[F]):proptics.Fold_[F[A],B,A,T]", "kind" : "final def"}, {"label" : "filter", "tail" : "(predicate: (A) => Boolean): Fold_[A, A, A, A]", "member" : "proptics.Fold_.filter", "link" : "proptics\/Fold_$.html#filter[A](predicate:A=>Boolean):proptics.Fold_[A,A,A,A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => A): Fold_[S, T, A, B]", "member" : "proptics.Fold_.apply", "link" : "proptics\/Fold_$.html#apply[S,T,A,B](get:S=>A):proptics.Fold_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Fold_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Fold_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Fold_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Fold_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Fold_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Fold_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Fold_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Fold_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Fold_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Fold_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Fold_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Fold_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Fold_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Fold_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Fold_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Fold_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Fold_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Fold_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Fold_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/Fold_.html", "kind" : "class"}, {"name" : "proptics.Getter", "shortDescription" : "", "object" : "proptics\/Getter$.html", "members_object" : [{"label" : "id", "tail" : "(): Getter[S, S]", "member" : "proptics.Getter.id", "link" : "proptics\/Getter$.html#id[S]:proptics.Getter[S,S]", "kind" : "final def"}, {"label" : "apply", "tail" : "(f: (S) => A): Getter[S, A]", "member" : "proptics.Getter.apply", "link" : "proptics\/Getter$.html#apply[S,A](f:S=>A):proptics.Getter[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Getter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Getter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Getter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Getter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Getter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Getter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Getter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Getter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Getter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Getter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Getter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Getter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Getter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Getter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Getter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Getter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Getter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Getter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Getter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Getter_", "shortDescription" : "A Getter_ is a Fold_ without a cats.Monoid.", "object" : "proptics\/Getter_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedFold_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[I,C,D](other:proptics.IndexedFold_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedGetter_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[I,C,D](other:proptics.IndexedGetter_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[I,C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): IndexedGetter_[I, S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[I,C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.IndexedGetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedGetter_[I, S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[I,C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedGetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): Getter_[S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): Getter_[S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): Getter_[S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): Getter_[S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): Getter_[S, T, C, D]", "member" : "proptics.Getter_.compose", "link" : "proptics\/Getter_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "asFold", "tail" : "(): Fold_[S, T, A, B]", "member" : "proptics.Getter_.asFold", "link" : "proptics\/Getter_.html#asFold:proptics.Fold_[S,T,A,B]", "kind" : "final def"}, {"label" : "to", "tail" : "(f: (A) => C): Getter_[S, T, C, D]", "member" : "proptics.Getter_.to", "link" : "proptics\/Getter_.html#to[C,D](f:A=>C):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "use", "tail" : "(ev: State[S, A]): State[S, A]", "member" : "proptics.Getter_.use", "link" : "proptics\/Getter_.html#use(implicitev:cats.data.State[S,A]):cats.data.State[S,A]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: (A) => Boolean): (S) => Option[A]", "member" : "proptics.Getter_.find", "link" : "proptics\/Getter_.html#find(f:A=>Boolean):S=>Option[A]", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.Getter_.notContains", "link" : "proptics\/Getter_.html#notContains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.Getter_.contains", "link" : "proptics\/Getter_.html#contains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Getter_.notExists", "link" : "proptics\/Getter_.html#notExists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Getter_.exists", "link" : "proptics\/Getter_.html#exists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "view", "tail" : "(s: S): A", "member" : "proptics.Getter_.view", "link" : "proptics\/Getter_.html#view(s:S):A", "kind" : "final def"}, {"member" : "proptics.Getter_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Getter_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Getter_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Getter_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Getter_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Getter_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Getter_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Getter_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Getter_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Getter_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Getter_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Getter_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Getter_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Getter_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Getter_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Getter_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Getter_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Getter_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Getter_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Getter_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "id", "tail" : "(): Getter_[S, T, S, T]", "member" : "proptics.Getter_.id", "link" : "proptics\/Getter_$.html#id[S,T]:proptics.Getter_[S,T,S,T]", "kind" : "final def"}, {"label" : "apply", "tail" : "(f: (S) => A): Getter_[S, T, A, B]", "member" : "proptics.Getter_.apply", "link" : "proptics\/Getter_$.html#apply[S,T,A,B](f:S=>A):proptics.Getter_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Getter_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Getter_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Getter_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Getter_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Getter_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Getter_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Getter_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Getter_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Getter_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Getter_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Getter_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Getter_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Getter_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Getter_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Getter_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Getter_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Getter_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Getter_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Getter_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/Getter_.html", "kind" : "class"}, {"name" : "proptics.Grate", "shortDescription" : "", "object" : "proptics\/Grate$.html", "members_object" : [{"label" : "id", "tail" : "(): Grate[S, S]", "member" : "proptics.Grate.id", "link" : "proptics\/Grate$.html#id[S]:proptics.Grate[S,S]", "kind" : "final def"}, {"label" : "fromDistributive", "tail" : "(arg0: Distributive[F]): Grate[F[A], A]", "member" : "proptics.Grate.fromDistributive", "link" : "proptics\/Grate$.html#fromDistributive[F[_],A](implicitevidence$4:cats.Distributive[F]):proptics.Grate[F[A],A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(to: (((S) => A) => A) => S): Grate[S, A]", "member" : "proptics.Grate.apply", "link" : "proptics\/Grate$.html#apply[S,A](to:((S=>A)=>A)=>S):proptics.Grate[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Grate$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Grate$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Grate$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Grate$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Grate$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Grate$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Grate$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Grate$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Grate$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Grate$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Grate$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Grate$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Grate$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Grate$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Grate$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Grate$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Grate$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Grate$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Grate$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Grate_", "shortDescription" : "A Grate_ allows a generalized zipWith operation.", "object" : "proptics\/Grate_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedSetter_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.Grate_.compose", "link" : "proptics\/Grate_.html#compose[I,C,D](other:proptics.IndexedSetter_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Review_[A, B, C, D]): Review_[S, T, C, D]", "member" : "proptics.Grate_.compose", "link" : "proptics\/Grate_.html#compose[C,D](other:proptics.Review_[A,B,C,D]):proptics.Review_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Grate_[A, B, C, D]): Grate_[S, T, C, D]", "member" : "proptics.Grate_.compose", "link" : "proptics\/Grate_.html#compose[C,D](other:proptics.Grate_[A,B,C,D]):proptics.Grate_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Grate_.compose", "link" : "proptics\/Grate_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): Grate_[S, T, C, D]", "member" : "proptics.Grate_.compose", "link" : "proptics\/Grate_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.Grate_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): Grate_[S, T, C, D]", "member" : "proptics.Grate_.compose", "link" : "proptics\/Grate_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.Grate_[S,T,C,D]", "kind" : "final def"}, {"label" : "zipWithF", "tail" : "(f: (F[A]) => B)(fs: F[S])(arg0: Applicative[F]): T", "member" : "proptics.Grate_.zipWithF", "link" : "proptics\/Grate_.html#zipWithF[F[_]](f:F[A]=>B)(fs:F[S])(implicitevidence$2:cats.Applicative[F]):T", "kind" : "final def"}, {"label" : "cotraverse", "tail" : "(fs: F[S])(f: (F[A]) => B)(arg0: Applicative[F]): T", "member" : "proptics.Grate_.cotraverse", "link" : "proptics\/Grate_.html#cotraverse[F[_]](fs:F[S])(f:F[A]=>B)(implicitevidence$1:cats.Applicative[F]):T", "kind" : "final def"}, {"label" : "zipWith", "tail" : "(s1: S, s2: S)(f: (A, A) => B): T", "member" : "proptics.Grate_.zipWith", "link" : "proptics\/Grate_.html#zipWith(s1:S,s2:S)(f:(A,A)=>B):T", "kind" : "final def"}, {"label" : "over", "tail" : "(f: (A) => B): (S) => T", "member" : "proptics.Grate_.over", "link" : "proptics\/Grate_.html#over(f:A=>B):S=>T", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.Grate_.set", "link" : "proptics\/Grate_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "review", "tail" : "(b: B): T", "member" : "proptics.Grate_.review", "link" : "proptics\/Grate_.html#review(b:B):T", "kind" : "final def"}, {"member" : "proptics.Grate_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Grate_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Grate_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Grate_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Grate_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Grate_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Grate_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Grate_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Grate_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Grate_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Grate_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Grate_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Grate_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Grate_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Grate_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Grate_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Grate_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Grate_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Grate_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Grate_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "id", "tail" : "(): Grate_[S, T, S, T]", "member" : "proptics.Grate_.id", "link" : "proptics\/Grate_$.html#id[S,T]:proptics.Grate_[S,T,S,T]", "kind" : "final def"}, {"label" : "fromDistributive", "tail" : "(ev: Distributive[F]): Grate_[F[A], F[B], A, B]", "member" : "proptics.Grate_.fromDistributive", "link" : "proptics\/Grate_$.html#fromDistributive[F[_],A,B](implicitev:cats.Distributive[F]):proptics.Grate_[F[A],F[B],A,B]", "kind" : "final def"}, {"label" : "apply", "tail" : "(grate: (((S) => A) => B) => T): Grate_[S, T, A, B]", "member" : "proptics.Grate_.apply", "link" : "proptics\/Grate_$.html#apply[S,T,A,B](grate:((S=>A)=>B)=>T):proptics.Grate_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Grate_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Grate_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Grate_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Grate_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Grate_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Grate_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Grate_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Grate_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Grate_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Grate_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Grate_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Grate_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Grate_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Grate_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Grate_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Grate_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Grate_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Grate_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Grate_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/Grate_.html", "kind" : "class"}, {"name" : "proptics.IndexedFold", "shortDescription" : "", "object" : "proptics\/IndexedFold$.html", "members_object" : [{"label" : "has", "tail" : "(indexedFold: IndexedFold[I, S, A]): (S) => Boolean", "member" : "proptics.IndexedFold.has", "link" : "proptics\/IndexedFold$.html#has[I,S,A](indexedFold:proptics.IndexedFold[I,S,A]):S=>Boolean", "kind" : "final def"}, {"label" : "fromFoldable", "tail" : "(ev: Foldable[F]): IndexedFold[Int, F[A], A]", "member" : "proptics.IndexedFold.fromFoldable", "link" : "proptics\/IndexedFold$.html#fromFoldable[F[_],A](implicitev:cats.Foldable[F]):proptics.IndexedFold[Int,F[A],A]", "kind" : "final def"}, {"label" : "fromFoldableWithIndex", "tail" : "(ev: FoldableWithIndex[F, I]): IndexedFold[I, F[A], A]", "member" : "proptics.IndexedFold.fromFoldableWithIndex", "link" : "proptics\/IndexedFold$.html#fromFoldableWithIndex[F[_],I,A](implicitev:proptics.indices.FoldableWithIndex[F,I]):proptics.IndexedFold[I,F[A],A]", "kind" : "final def"}, {"label" : "filtered", "tail" : "(predicate: ((A, I)) => Boolean): IndexedFold_[I, (A, I), (A, I), A, A]", "member" : "proptics.IndexedFold.filtered", "link" : "proptics\/IndexedFold$.html#filtered[I,A](predicate:((A,I))=>Boolean):proptics.IndexedFold_[I,(A,I),(A,I),A,A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => (A, I)): IndexedFold[I, S, A]", "member" : "proptics.IndexedFold.apply", "link" : "proptics\/IndexedFold$.html#apply[I,S,A](get:S=>(A,I)):proptics.IndexedFold[I,S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedFold$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedFold$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedFold$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedFold$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedFold$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedFold$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedFold$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedFold$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedFold$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedFold$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedFold$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedFold$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedFold$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedFold$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedFold$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedFold$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedFold$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedFold$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedFold$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.IndexedFold_", "shortDescription" : "A IndexedFold_ is a generalization of something Foldable.", "object" : "proptics\/IndexedFold_$.html", "members_class" : [{"label" : "toWithIndex", "tail" : "(f: (A) => (C, I)): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.toWithIndex", "link" : "proptics\/IndexedFold_.html#toWithIndex[C,D](f:A=>(C,I)):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedFold_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.<<*", "link" : "proptics\/IndexedFold_.html#<<*[C,D](other:proptics.IndexedFold_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedFold_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.composeWithLeftIndex", "link" : "proptics\/IndexedFold_.html#composeWithLeftIndex[C,D](other:proptics.IndexedFold_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedFold_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedFold_.*>>", "link" : "proptics\/IndexedFold_.html#*>>[J,C,D](other:proptics.IndexedFold_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedFold_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedFold_.composeWithRightIndex", "link" : "proptics\/IndexedFold_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedFold_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedGetter_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.<<*", "link" : "proptics\/IndexedFold_.html#<<*[C,D](other:proptics.IndexedGetter_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedGetter_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.composeWithLeftIndex", "link" : "proptics\/IndexedFold_.html#composeWithLeftIndex[C,D](other:proptics.IndexedGetter_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedGetter_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedFold_.*>>", "link" : "proptics\/IndexedFold_.html#*>>[J,C,D](other:proptics.IndexedGetter_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedGetter_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedFold_.composeWithRightIndex", "link" : "proptics\/IndexedFold_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedGetter_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.<<*", "link" : "proptics\/IndexedFold_.html#<<*[C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedTraversal_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.composeWithLeftIndex", "link" : "proptics\/IndexedFold_.html#composeWithLeftIndex[C,D](other:proptics.IndexedTraversal_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedTraversal_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedFold_.*>>", "link" : "proptics\/IndexedFold_.html#*>>[J,C,D](other:proptics.IndexedTraversal_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedTraversal_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedFold_.composeWithRightIndex", "link" : "proptics\/IndexedFold_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedTraversal_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.<<*", "link" : "proptics\/IndexedFold_.html#<<*[C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: AnIndexedLens_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.composeWithLeftIndex", "link" : "proptics\/IndexedFold_.html#composeWithLeftIndex[C,D](other:proptics.AnIndexedLens_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: AnIndexedLens_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedFold_.*>>", "link" : "proptics\/IndexedFold_.html#*>>[J,C,D](other:proptics.AnIndexedLens_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: AnIndexedLens_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedFold_.composeWithRightIndex", "link" : "proptics\/IndexedFold_.html#composeWithRightIndex[J,C,D](other:proptics.AnIndexedLens_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.<<*", "link" : "proptics\/IndexedFold_.html#<<*[C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedLens_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.composeWithLeftIndex", "link" : "proptics\/IndexedFold_.html#composeWithLeftIndex[C,D](other:proptics.IndexedLens_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedLens_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedFold_.*>>", "link" : "proptics\/IndexedFold_.html#*>>[J,C,D](other:proptics.IndexedLens_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedLens_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedFold_.composeWithRightIndex", "link" : "proptics\/IndexedFold_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedLens_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.compose", "link" : "proptics\/IndexedFold_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "to", "tail" : "(f: (A) => C): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.to", "link" : "proptics\/IndexedFold_.html#to[C,D](f:A=>C):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.compose", "link" : "proptics\/IndexedFold_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.compose", "link" : "proptics\/IndexedFold_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.compose", "link" : "proptics\/IndexedFold_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.compose", "link" : "proptics\/IndexedFold_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.compose", "link" : "proptics\/IndexedFold_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.compose", "link" : "proptics\/IndexedFold_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.compose", "link" : "proptics\/IndexedFold_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.compose", "link" : "proptics\/IndexedFold_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.compose", "link" : "proptics\/IndexedFold_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.compose", "link" : "proptics\/IndexedFold_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedFold_.compose", "link" : "proptics\/IndexedFold_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "asFold", "tail" : "(): Fold_[S, T, A, B]", "member" : "proptics.IndexedFold_.asFold", "link" : "proptics\/IndexedFold_.html#asFold:proptics.Fold_[S,T,A,B]", "kind" : "final def"}, {"label" : "reindex", "tail" : "(f: (I) => J): IndexedFold_[J, S, T, A, B]", "member" : "proptics.IndexedFold_.reindex", "link" : "proptics\/IndexedFold_.html#reindex[J](f:I=>J):proptics.IndexedFold_[J,S,T,A,B]", "kind" : "final def"}, {"label" : "unIndex", "tail" : "(): Fold_[S, T, A, B]", "member" : "proptics.IndexedFold_.unIndex", "link" : "proptics\/IndexedFold_.html#unIndex:proptics.Fold_[S,T,A,B]", "kind" : "final def"}, {"label" : "use", "tail" : "(ev: State[S, A]): State[S, List[(A, I)]]", "member" : "proptics.IndexedFold_.use", "link" : "proptics\/IndexedFold_.html#use(implicitev:cats.data.State[S,A]):cats.data.State[S,List[(A,I)]]", "kind" : "final def"}, {"label" : "toList", "tail" : "(s: S): List[A]", "member" : "proptics.IndexedFold_.toList", "link" : "proptics\/IndexedFold_.html#toList(s:S):List[A]", "kind" : "final def"}, {"label" : "toArray", "tail" : "(s: S)(ev0: ClassTag[A]): Array[A]", "member" : "proptics.IndexedFold_.toArray", "link" : "proptics\/IndexedFold_.html#toArray(s:S)(implicitev0:scala.reflect.ClassTag[A]):Array[A]", "kind" : "final def"}, {"label" : "maximum", "tail" : "(s: S)(ev: Order[A]): Option[A]", "member" : "proptics.IndexedFold_.maximum", "link" : "proptics\/IndexedFold_.html#maximum(s:S)(implicitev:cats.Order[A]):Option[A]", "kind" : "final def"}, {"label" : "minimum", "tail" : "(s: S)(ev: Order[A]): Option[A]", "member" : "proptics.IndexedFold_.minimum", "link" : "proptics\/IndexedFold_.html#minimum(s:S)(implicitev:cats.Order[A]):Option[A]", "kind" : "final def"}, {"label" : "last", "tail" : "(s: S): Option[(A, I)]", "member" : "proptics.IndexedFold_.last", "link" : "proptics\/IndexedFold_.html#last(s:S):Option[(A,I)]", "kind" : "final def"}, {"label" : "first", "tail" : "(s: S): Option[(A, I)]", "member" : "proptics.IndexedFold_.first", "link" : "proptics\/IndexedFold_.html#first(s:S):Option[(A,I)]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: ((A, I)) => Boolean): (S) => Option[(A, I)]", "member" : "proptics.IndexedFold_.find", "link" : "proptics\/IndexedFold_.html#find(f:((A,I))=>Boolean):S=>Option[(A,I)]", "kind" : "final def"}, {"label" : "length", "tail" : "(s: S): Int", "member" : "proptics.IndexedFold_.length", "link" : "proptics\/IndexedFold_.html#length(s:S):Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.IndexedFold_.nonEmpty", "link" : "proptics\/IndexedFold_.html#nonEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.IndexedFold_.isEmpty", "link" : "proptics\/IndexedFold_.html#isEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: (A, I))(s: S)(ev: Eq[(A, I)]): Boolean", "member" : "proptics.IndexedFold_.notContains", "link" : "proptics\/IndexedFold_.html#notContains(a:(A,I))(s:S)(implicitev:cats.Eq[(A,I)]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: (A, I))(s: S)(ev: Eq[(A, I)]): Boolean", "member" : "proptics.IndexedFold_.contains", "link" : "proptics\/IndexedFold_.html#contains(a:(A,I))(s:S)(implicitev:cats.Eq[(A,I)]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: ((A, I)) => Boolean): (S) => Boolean", "member" : "proptics.IndexedFold_.notExists", "link" : "proptics\/IndexedFold_.html#notExists(f:((A,I))=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: ((A, I)) => Boolean): (S) => Boolean", "member" : "proptics.IndexedFold_.exists", "link" : "proptics\/IndexedFold_.html#exists(f:((A,I))=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "any", "tail" : "(s: S)(f: ((A, I)) => R)(arg0: Heyting[R]): R", "member" : "proptics.IndexedFold_.any", "link" : "proptics\/IndexedFold_.html#any[F[_],R](s:S)(f:((A,I))=>R)(implicitevidence$4:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "or", "tail" : "(s: S)(ev: Heyting[A]): A", "member" : "proptics.IndexedFold_.or", "link" : "proptics\/IndexedFold_.html#or(s:S)(implicitev:spire.algebra.lattice.Heyting[A]):A", "kind" : "final def"}, {"label" : "and", "tail" : "(s: S)(ev: Heyting[A]): A", "member" : "proptics.IndexedFold_.and", "link" : "proptics\/IndexedFold_.html#and(s:S)(implicitev:spire.algebra.lattice.Heyting[A]):A", "kind" : "final def"}, {"label" : "forall", "tail" : "(s: S)(f: ((A, I)) => R)(arg0: Heyting[R]): R", "member" : "proptics.IndexedFold_.forall", "link" : "proptics\/IndexedFold_.html#forall[R](s:S)(f:((A,I))=>R)(implicitevidence$3:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "forall", "tail" : "(f: ((A, I)) => Boolean): (S) => Boolean", "member" : "proptics.IndexedFold_.forall", "link" : "proptics\/IndexedFold_.html#forall(f:((A,I))=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "product", "tail" : "(s: S)(ev: MultiplicativeMonoid[A]): A", "member" : "proptics.IndexedFold_.product", "link" : "proptics\/IndexedFold_.html#product(s:S)(implicitev:spire.algebra.MultiplicativeMonoid[A]):A", "kind" : "final def"}, {"label" : "sum", "tail" : "(s: S)(ev: AdditiveMonoid[A]): A", "member" : "proptics.IndexedFold_.sum", "link" : "proptics\/IndexedFold_.html#sum(s:S)(implicitev:spire.algebra.AdditiveMonoid[A]):A", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(s: S)(r: R)(f: (R, (A, I)) => R): R", "member" : "proptics.IndexedFold_.foldLeft", "link" : "proptics\/IndexedFold_.html#foldLeft[R](s:S)(r:R)(f:(R,(A,I))=>R):R", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(s: S)(r: R)(f: ((A, I), R) => R): R", "member" : "proptics.IndexedFold_.foldRight", "link" : "proptics\/IndexedFold_.html#foldRight[R](s:S)(r:R)(f:((A,I),R)=>R):R", "kind" : "final def"}, {"label" : "fold", "tail" : "(s: S)(ev: Monoid[A]): A", "member" : "proptics.IndexedFold_.fold", "link" : "proptics\/IndexedFold_.html#fold(s:S)(implicitev:cats.Monoid[A]):A", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(s: S)(f: ((A, I)) => R)(arg0: Monoid[R]): R", "member" : "proptics.IndexedFold_.foldMap", "link" : "proptics\/IndexedFold_.html#foldMap[R](s:S)(f:((A,I))=>R)(implicitevidence$2:cats.Monoid[R]):R", "kind" : "final def"}, {"label" : "preview", "tail" : "(s: S): Option[(A, I)]", "member" : "proptics.IndexedFold_.preview", "link" : "proptics\/IndexedFold_.html#preview(s:S):Option[(A,I)]", "kind" : "final def"}, {"label" : "viewAll", "tail" : "(s: S): List[(A, I)]", "member" : "proptics.IndexedFold_.viewAll", "link" : "proptics\/IndexedFold_.html#viewAll(s:S):List[(A,I)]", "kind" : "final def"}, {"label" : "view", "tail" : "(s: S)(ev: Monoid[A]): A", "member" : "proptics.IndexedFold_.view", "link" : "proptics\/IndexedFold_.html#view(s:S)(implicitev:cats.Monoid[A]):A", "kind" : "final def"}, {"member" : "proptics.IndexedFold_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedFold_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedFold_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedFold_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedFold_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedFold_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedFold_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedFold_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedFold_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedFold_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedFold_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedFold_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedFold_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedFold_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedFold_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedFold_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedFold_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedFold_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedFold_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedFold_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "indexedGetterToIndexedFold", "tail" : "(indexedGetter: IndexedGetter_[I, S, T, A, B]): IndexedFold_[I, S, T, A, B]", "member" : "proptics.IndexedFold_.indexedGetterToIndexedFold", "link" : "proptics\/IndexedFold_$.html#indexedGetterToIndexedFold[I,S,T,A,B](indexedGetter:proptics.IndexedGetter_[I,S,T,A,B]):proptics.IndexedFold_[I,S,T,A,B]", "kind" : "implicit def"}, {"label" : "indexedTraversalToIndexedFold", "tail" : "(indexedTraversal: IndexedTraversal_[I, S, T, A, B]): IndexedFold_[I, S, T, A, B]", "member" : "proptics.IndexedFold_.indexedTraversalToIndexedFold", "link" : "proptics\/IndexedFold_$.html#indexedTraversalToIndexedFold[I,S,T,A,B](indexedTraversal:proptics.IndexedTraversal_[I,S,T,A,B]):proptics.IndexedFold_[I,S,T,A,B]", "kind" : "implicit def"}, {"label" : "anIndexedLensToIndexedFold", "tail" : "(anIndexedLens: AnIndexedLens_[I, S, T, A, B]): IndexedFold_[I, S, T, A, B]", "member" : "proptics.IndexedFold_.anIndexedLensToIndexedFold", "link" : "proptics\/IndexedFold_$.html#anIndexedLensToIndexedFold[I,S,T,A,B](anIndexedLens:proptics.AnIndexedLens_[I,S,T,A,B]):proptics.IndexedFold_[I,S,T,A,B]", "kind" : "implicit def"}, {"label" : "indexedLensToIndexedFold", "tail" : "(indexedLens: IndexedLens_[I, S, T, A, B]): IndexedFold_[I, S, T, A, B]", "member" : "proptics.IndexedFold_.indexedLensToIndexedFold", "link" : "proptics\/IndexedFold_$.html#indexedLensToIndexedFold[I,S,T,A,B](indexedLens:proptics.IndexedLens_[I,S,T,A,B]):proptics.IndexedFold_[I,S,T,A,B]", "kind" : "implicit def"}, {"label" : "fromFoldableWithIndex", "tail" : "(ev: FoldableWithIndex[F, I]): IndexedFold_[I, F[A], F[B], A, B]", "member" : "proptics.IndexedFold_.fromFoldableWithIndex", "link" : "proptics\/IndexedFold_$.html#fromFoldableWithIndex[F[_],I,A,B](implicitev:proptics.indices.FoldableWithIndex[F,I]):proptics.IndexedFold_[I,F[A],F[B],A,B]", "kind" : "final def"}, {"label" : "fromFoldable", "tail" : "(ev0: Foldable[F]): IndexedFold_[Int, F[A], F[B], A, B]", "member" : "proptics.IndexedFold_.fromFoldable", "link" : "proptics\/IndexedFold_$.html#fromFoldable[F[_],A,B](implicitev0:cats.Foldable[F]):proptics.IndexedFold_[Int,F[A],F[B],A,B]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => (A, I)): IndexedFold_[I, S, T, A, B]", "member" : "proptics.IndexedFold_.apply", "link" : "proptics\/IndexedFold_$.html#apply[I,S,T,A,B](get:S=>(A,I)):proptics.IndexedFold_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedFold_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedFold_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedFold_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedFold_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedFold_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedFold_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedFold_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedFold_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedFold_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedFold_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedFold_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedFold_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedFold_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedFold_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedFold_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedFold_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedFold_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedFold_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedFold_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/IndexedFold_.html", "kind" : "class"}, {"name" : "proptics.IndexedGetter", "shortDescription" : "", "object" : "proptics\/IndexedGetter$.html", "members_object" : [{"label" : "apply", "tail" : "(get: (S) => (A, I)): IndexedGetter[I, S, A]", "member" : "proptics.IndexedGetter.apply", "link" : "proptics\/IndexedGetter$.html#apply[I,S,A](get:S=>(A,I)):proptics.IndexedGetter[I,S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedGetter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedGetter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedGetter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedGetter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedGetter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedGetter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedGetter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedGetter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedGetter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedGetter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedGetter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedGetter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedGetter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedGetter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedGetter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedGetter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedGetter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedGetter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedGetter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.IndexedGetter_", "shortDescription" : "An IndexedGetter_ is an IndexedFold_ without a cats.Monoid.", "object" : "proptics\/IndexedGetter_$.html", "members_class" : [{"label" : "<<*", "tail" : "(other: IndexedFold_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedGetter_.<<*", "link" : "proptics\/IndexedGetter_.html#<<*[C,D](other:proptics.IndexedFold_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedFold_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedGetter_.composeWithLeftIndex", "link" : "proptics\/IndexedGetter_.html#composeWithLeftIndex[C,D](other:proptics.IndexedFold_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedFold_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedGetter_.*>>", "link" : "proptics\/IndexedGetter_.html#*>>[J,C,D](other:proptics.IndexedFold_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedFold_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedGetter_.composeWithRightIndex", "link" : "proptics\/IndexedGetter_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedFold_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedGetter_[_, A, B, C, D]): IndexedGetter_[I, S, T, C, D]", "member" : "proptics.IndexedGetter_.<<*", "link" : "proptics\/IndexedGetter_.html#<<*[C,D](other:proptics.IndexedGetter_[_,A,B,C,D]):proptics.IndexedGetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedGetter_[_, A, B, C, D]): IndexedGetter_[I, S, T, C, D]", "member" : "proptics.IndexedGetter_.composeWithLeftIndex", "link" : "proptics\/IndexedGetter_.html#composeWithLeftIndex[C,D](other:proptics.IndexedGetter_[_,A,B,C,D]):proptics.IndexedGetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedGetter_[J, A, B, C, D]): IndexedGetter_[J, S, T, C, D]", "member" : "proptics.IndexedGetter_.*>>", "link" : "proptics\/IndexedGetter_.html#*>>[J,C,D](other:proptics.IndexedGetter_[J,A,B,C,D]):proptics.IndexedGetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedGetter_[J, A, B, C, D]): IndexedGetter_[J, S, T, C, D]", "member" : "proptics.IndexedGetter_.composeWithRightIndex", "link" : "proptics\/IndexedGetter_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedGetter_[J,A,B,C,D]):proptics.IndexedGetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedTraversal_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedGetter_.<<*", "link" : "proptics\/IndexedGetter_.html#<<*[C,D](other:proptics.IndexedTraversal_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedTraversal_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedGetter_.composeWithLeftIndex", "link" : "proptics\/IndexedGetter_.html#composeWithLeftIndex[C,D](other:proptics.IndexedTraversal_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedTraversal_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedGetter_.*>>", "link" : "proptics\/IndexedGetter_.html#*>>[J,C,D](other:proptics.IndexedTraversal_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedTraversal_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedGetter_.composeWithRightIndex", "link" : "proptics\/IndexedGetter_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedTraversal_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: AnIndexedLens_[_, A, B, C, D]): IndexedGetter_[I, S, T, C, D]", "member" : "proptics.IndexedGetter_.<<*", "link" : "proptics\/IndexedGetter_.html#<<*[C,D](other:proptics.AnIndexedLens_[_,A,B,C,D]):proptics.IndexedGetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: AnIndexedLens_[_, A, B, C, D]): IndexedGetter_[I, S, T, C, D]", "member" : "proptics.IndexedGetter_.composeWithLeftIndex", "link" : "proptics\/IndexedGetter_.html#composeWithLeftIndex[C,D](other:proptics.AnIndexedLens_[_,A,B,C,D]):proptics.IndexedGetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: AnIndexedLens_[J, A, B, C, D]): IndexedGetter_[J, S, T, C, D]", "member" : "proptics.IndexedGetter_.*>>", "link" : "proptics\/IndexedGetter_.html#*>>[J,C,D](other:proptics.AnIndexedLens_[J,A,B,C,D]):proptics.IndexedGetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: AnIndexedLens_[J, A, B, C, D]): IndexedGetter_[J, S, T, C, D]", "member" : "proptics.IndexedGetter_.composeWithRightIndex", "link" : "proptics\/IndexedGetter_.html#composeWithRightIndex[J,C,D](other:proptics.AnIndexedLens_[J,A,B,C,D]):proptics.IndexedGetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedLens_[_, A, B, C, D]): IndexedGetter_[I, S, T, C, D]", "member" : "proptics.IndexedGetter_.<<*", "link" : "proptics\/IndexedGetter_.html#<<*[C,D](other:proptics.IndexedLens_[_,A,B,C,D]):proptics.IndexedGetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedLens_[_, A, B, C, D]): IndexedGetter_[I, S, T, C, D]", "member" : "proptics.IndexedGetter_.composeWithLeftIndex", "link" : "proptics\/IndexedGetter_.html#composeWithLeftIndex[C,D](other:proptics.IndexedLens_[_,A,B,C,D]):proptics.IndexedGetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedLens_[J, A, B, C, D]): IndexedGetter_[J, S, T, C, D]", "member" : "proptics.IndexedGetter_.*>>", "link" : "proptics\/IndexedGetter_.html#*>>[J,C,D](other:proptics.IndexedLens_[J,A,B,C,D]):proptics.IndexedGetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedLens_[J, A, B, C, D]): IndexedGetter_[J, S, T, C, D]", "member" : "proptics.IndexedGetter_.composeWithRightIndex", "link" : "proptics\/IndexedGetter_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedLens_[J,A,B,C,D]):proptics.IndexedGetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "asIndexedFold", "tail" : "(): IndexedFold_[I, S, T, A, B]", "member" : "proptics.IndexedGetter_.asIndexedFold", "link" : "proptics\/IndexedGetter_.html#asIndexedFold:proptics.IndexedFold_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "asGetter", "tail" : "(): Getter_[S, T, A, B]", "member" : "proptics.IndexedGetter_.asGetter", "link" : "proptics\/IndexedGetter_.html#asGetter:proptics.Getter_[S,T,A,B]", "kind" : "final def"}, {"label" : "reindex", "tail" : "(f: (I) => J): IndexedGetter_[J, S, T, A, B]", "member" : "proptics.IndexedGetter_.reindex", "link" : "proptics\/IndexedGetter_.html#reindex[J](f:I=>J):proptics.IndexedGetter_[J,S,T,A,B]", "kind" : "final def"}, {"label" : "unIndex", "tail" : "(): Getter_[S, T, A, B]", "member" : "proptics.IndexedGetter_.unIndex", "link" : "proptics\/IndexedGetter_.html#unIndex:proptics.Getter_[S,T,A,B]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: ((A, I)) => Boolean): (S) => Option[(A, I)]", "member" : "proptics.IndexedGetter_.find", "link" : "proptics\/IndexedGetter_.html#find(f:((A,I))=>Boolean):S=>Option[(A,I)]", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: (A, I))(s: S)(ev: Eq[(A, I)]): Boolean", "member" : "proptics.IndexedGetter_.notContains", "link" : "proptics\/IndexedGetter_.html#notContains(a:(A,I))(s:S)(implicitev:cats.Eq[(A,I)]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: (A, I))(s: S)(ev: Eq[(A, I)]): Boolean", "member" : "proptics.IndexedGetter_.contains", "link" : "proptics\/IndexedGetter_.html#contains(a:(A,I))(s:S)(implicitev:cats.Eq[(A,I)]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: ((A, I)) => Boolean): (S) => Boolean", "member" : "proptics.IndexedGetter_.notExists", "link" : "proptics\/IndexedGetter_.html#notExists(f:((A,I))=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: ((A, I)) => Boolean): (S) => Boolean", "member" : "proptics.IndexedGetter_.exists", "link" : "proptics\/IndexedGetter_.html#exists(f:((A,I))=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "view", "tail" : "(s: S): (A, I)", "member" : "proptics.IndexedGetter_.view", "link" : "proptics\/IndexedGetter_.html#view(s:S):(A,I)", "kind" : "final def"}, {"member" : "proptics.IndexedGetter_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedGetter_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedGetter_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedGetter_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedGetter_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedGetter_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedGetter_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedGetter_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedGetter_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedGetter_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedGetter_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedGetter_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedGetter_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedGetter_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedGetter_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedGetter_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedGetter_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedGetter_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedGetter_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedGetter_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(get: (S) => (A, I)): IndexedGetter_[I, S, T, A, B]", "member" : "proptics.IndexedGetter_.apply", "link" : "proptics\/IndexedGetter_$.html#apply[I,S,T,A,B](get:S=>(A,I)):proptics.IndexedGetter_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedGetter_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedGetter_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedGetter_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedGetter_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedGetter_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedGetter_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedGetter_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedGetter_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedGetter_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedGetter_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedGetter_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedGetter_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedGetter_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedGetter_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedGetter_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedGetter_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedGetter_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedGetter_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedGetter_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/IndexedGetter_.html", "kind" : "class"}, {"name" : "proptics.IndexedLens", "shortDescription" : "", "object" : "proptics\/IndexedLens$.html", "members_object" : [{"label" : "lens", "tail" : "(to: (S) => ((A, I), (A) => S)): IndexedLens[I, S, A]", "member" : "proptics.IndexedLens.lens", "link" : "proptics\/IndexedLens$.html#lens[I,S,A](to:S=>((A,I),A=>S)):proptics.IndexedLens[I,S,A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => (A, I))(set: (S) => (A) => S): IndexedLens[I, S, A]", "member" : "proptics.IndexedLens.apply", "link" : "proptics\/IndexedLens$.html#apply[I,S,A](get:S=>(A,I))(set:S=>(A=>S)):proptics.IndexedLens[I,S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedLens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedLens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedLens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedLens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedLens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedLens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedLens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedLens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedLens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedLens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedLens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedLens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedLens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedLens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedLens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedLens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedLens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedLens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedLens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.IndexedLens_", "shortDescription" : "An IndexedLens_] focuses a single piece of data and index within a larger structure.", "object" : "proptics\/IndexedLens_$.html", "members_class" : [{"label" : "<<*", "tail" : "(other: IndexedFold_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.<<*", "link" : "proptics\/IndexedLens_.html#<<*[J,C,D](other:proptics.IndexedFold_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedFold_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.composeWithLeftIndex", "link" : "proptics\/IndexedLens_.html#composeWithLeftIndex[C,D](other:proptics.IndexedFold_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedFold_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedLens_.*>>", "link" : "proptics\/IndexedLens_.html#*>>[J,C,D](other:proptics.IndexedFold_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedFold_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedLens_.composeWithRightIndex", "link" : "proptics\/IndexedLens_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedFold_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedGetter_[_, A, B, C, D]): IndexedGetter_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.<<*", "link" : "proptics\/IndexedLens_.html#<<*[J,C,D](other:proptics.IndexedGetter_[_,A,B,C,D]):proptics.IndexedGetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedGetter_[_, A, B, C, D]): IndexedGetter_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.composeWithLeftIndex", "link" : "proptics\/IndexedLens_.html#composeWithLeftIndex[J,C,D](other:proptics.IndexedGetter_[_,A,B,C,D]):proptics.IndexedGetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedGetter_[J, A, B, C, D]): IndexedGetter_[J, S, T, C, D]", "member" : "proptics.IndexedLens_.*>>", "link" : "proptics\/IndexedLens_.html#*>>[J,C,D](other:proptics.IndexedGetter_[J,A,B,C,D]):proptics.IndexedGetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedGetter_[J, A, B, C, D]): IndexedGetter_[J, S, T, C, D]", "member" : "proptics.IndexedLens_.composeWithRightIndex", "link" : "proptics\/IndexedLens_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedGetter_[J,A,B,C,D]):proptics.IndexedGetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedSetter_[_, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.<<*", "link" : "proptics\/IndexedLens_.html#<<*[J,C,D](other:proptics.IndexedSetter_[_,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedSetter_[_, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.composeWithLeftIndex", "link" : "proptics\/IndexedLens_.html#composeWithLeftIndex[J,C,D](other:proptics.IndexedSetter_[_,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedSetter_[J, A, B, C, D]): IndexedSetter_[J, S, T, C, D]", "member" : "proptics.IndexedLens_.*>>", "link" : "proptics\/IndexedLens_.html#*>>[J,C,D](other:proptics.IndexedSetter_[J,A,B,C,D]):proptics.IndexedSetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedSetter_[J, A, B, C, D]): IndexedSetter_[J, S, T, C, D]", "member" : "proptics.IndexedLens_.composeWithRightIndex", "link" : "proptics\/IndexedLens_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedSetter_[J,A,B,C,D]):proptics.IndexedSetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedTraversal_[_, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.<<*", "link" : "proptics\/IndexedLens_.html#<<*[J,C,D](other:proptics.IndexedTraversal_[_,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedTraversal_[_, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.composeWithLeftIndex", "link" : "proptics\/IndexedLens_.html#composeWithLeftIndex[C,D](other:proptics.IndexedTraversal_[_,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedTraversal_[J, A, B, C, D]): IndexedTraversal_[J, S, T, C, D]", "member" : "proptics.IndexedLens_.*>>", "link" : "proptics\/IndexedLens_.html#*>>[J,C,D](other:proptics.IndexedTraversal_[J,A,B,C,D]):proptics.IndexedTraversal_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedTraversal_[J, A, B, C, D]): IndexedTraversal_[J, S, T, C, D]", "member" : "proptics.IndexedLens_.composeWithRightIndex", "link" : "proptics\/IndexedLens_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedTraversal_[J,A,B,C,D]):proptics.IndexedTraversal_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: AnIndexedLens_[_, A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.<<*", "link" : "proptics\/IndexedLens_.html#<<*[C,D](other:proptics.AnIndexedLens_[_,A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: AnIndexedLens_[_, A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.composeWithLeftIndex", "link" : "proptics\/IndexedLens_.html#composeWithLeftIndex[C,D](other:proptics.AnIndexedLens_[_,A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: AnIndexedLens_[J, A, B, C, D]): AnIndexedLens_[J, S, T, C, D]", "member" : "proptics.IndexedLens_.*>>", "link" : "proptics\/IndexedLens_.html#*>>[J,C,D](other:proptics.AnIndexedLens_[J,A,B,C,D]):proptics.AnIndexedLens_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: AnIndexedLens_[J, A, B, C, D]): AnIndexedLens_[J, S, T, C, D]", "member" : "proptics.IndexedLens_.composeWithRightIndex", "link" : "proptics\/IndexedLens_.html#composeWithRightIndex[J,C,D](other:proptics.AnIndexedLens_[J,A,B,C,D]):proptics.AnIndexedLens_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedLens_[_, A, B, C, D]): IndexedLens_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.<<*", "link" : "proptics\/IndexedLens_.html#<<*[C,D](other:proptics.IndexedLens_[_,A,B,C,D]):proptics.IndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedLens_[_, A, B, C, D]): IndexedLens_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.composeWithLeftIndex", "link" : "proptics\/IndexedLens_.html#composeWithLeftIndex[C,D](other:proptics.IndexedLens_[_,A,B,C,D]):proptics.IndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedLens_[J, A, B, C, D]): IndexedLens_[J, S, T, C, D]", "member" : "proptics.IndexedLens_.*>>", "link" : "proptics\/IndexedLens_.html#*>>[J,C,D](other:proptics.IndexedLens_[J,A,B,C,D]):proptics.IndexedLens_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedLens_[J, A, B, C, D]): IndexedLens_[J, S, T, C, D]", "member" : "proptics.IndexedLens_.composeWithRightIndex", "link" : "proptics\/IndexedLens_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedLens_[J,A,B,C,D]):proptics.IndexedLens_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.compose", "link" : "proptics\/IndexedLens_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): IndexedGetter_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.compose", "link" : "proptics\/IndexedLens_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.IndexedGetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.compose", "link" : "proptics\/IndexedLens_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.compose", "link" : "proptics\/IndexedLens_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.compose", "link" : "proptics\/IndexedLens_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.compose", "link" : "proptics\/IndexedLens_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.compose", "link" : "proptics\/IndexedLens_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.compose", "link" : "proptics\/IndexedLens_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.compose", "link" : "proptics\/IndexedLens_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): IndexedLens_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.compose", "link" : "proptics\/IndexedLens_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.IndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): IndexedLens_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.compose", "link" : "proptics\/IndexedLens_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.IndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): IndexedLens_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.compose", "link" : "proptics\/IndexedLens_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.IndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): IndexedLens_[I, S, T, C, D]", "member" : "proptics.IndexedLens_.compose", "link" : "proptics\/IndexedLens_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.IndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "asIndexedFold", "tail" : "(): IndexedFold_[I, S, T, A, B]", "member" : "proptics.IndexedLens_.asIndexedFold", "link" : "proptics\/IndexedLens_.html#asIndexedFold:proptics.IndexedFold_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "asLens", "tail" : "(): Lens_[S, T, A, B]", "member" : "proptics.IndexedLens_.asLens", "link" : "proptics\/IndexedLens_.html#asLens:proptics.Lens_[S,T,A,B]", "kind" : "final def"}, {"label" : "reindex", "tail" : "(f: (I) => J): IndexedLens_[J, S, T, A, B]", "member" : "proptics.IndexedLens_.reindex", "link" : "proptics\/IndexedLens_.html#reindex[J](f:I=>J):proptics.IndexedLens_[J,S,T,A,B]", "kind" : "final def"}, {"label" : "unindex", "tail" : "(): Lens_[S, T, A, B]", "member" : "proptics.IndexedLens_.unindex", "link" : "proptics\/IndexedLens_.html#unindex:proptics.Lens_[S,T,A,B]", "kind" : "final def"}, {"label" : "zipWithF", "tail" : "(f: (F[(A, I)]) => B)(fs: F[S])(arg0: Comonad[F]): T", "member" : "proptics.IndexedLens_.zipWithF", "link" : "proptics\/IndexedLens_.html#zipWithF[F[_]](f:F[(A,I)]=>B)(fs:F[S])(implicitevidence$4:cats.Comonad[F]):T", "kind" : "final def"}, {"label" : "cotraverse", "tail" : "(fs: F[S])(f: (F[(A, I)]) => B)(arg0: Comonad[F]): T", "member" : "proptics.IndexedLens_.cotraverse", "link" : "proptics\/IndexedLens_.html#cotraverse[F[_]](fs:F[S])(f:F[(A,I)]=>B)(implicitevidence$3:cats.Comonad[F]):T", "kind" : "final def"}, {"label" : "zipWith", "tail" : "(s1: S, s2: S)(f: ((A, I), (A, I)) => B): T", "member" : "proptics.IndexedLens_.zipWith", "link" : "proptics\/IndexedLens_.html#zipWith[F[_]](s1:S,s2:S)(f:((A,I),(A,I))=>B):T", "kind" : "final def"}, {"label" : "failover", "tail" : "(s: S)(f: ((A, I)) => B)(ev0: Strong[[β$3$, γ$4$]Kleisli[[β$2$](Disj[Boolean], β$2$), β$3$, γ$4$]], ev1: Alternative[F]): F[T]", "member" : "proptics.IndexedLens_.failover", "link" : "proptics\/IndexedLens_.html#failover[F[_]](s:S)(f:((A,I))=>B)(implicitev0:cats.arrow.Strong[[β$3$,γ$4$]cats.data.Kleisli[[β$2$](proptics.data.Disj[Boolean],β$2$),β$3$,γ$4$]],implicitev1:cats.Alternative[F]):F[T]", "kind" : "final def"}, {"label" : "use", "tail" : "(ev: State[S, A]): State[S, (A, I)]", "member" : "proptics.IndexedLens_.use", "link" : "proptics\/IndexedLens_.html#use(implicitev:cats.data.State[S,A]):cats.data.State[S,(A,I)]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: ((A, I)) => Boolean): (S) => Option[(A, I)]", "member" : "proptics.IndexedLens_.find", "link" : "proptics\/IndexedLens_.html#find(f:((A,I))=>Boolean):S=>Option[(A,I)]", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: (A, I))(s: S)(ev: Eq[(A, I)]): Boolean", "member" : "proptics.IndexedLens_.notContains", "link" : "proptics\/IndexedLens_.html#notContains(a:(A,I))(s:S)(implicitev:cats.Eq[(A,I)]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: (A, I))(s: S)(ev: Eq[(A, I)]): Boolean", "member" : "proptics.IndexedLens_.contains", "link" : "proptics\/IndexedLens_.html#contains(a:(A,I))(s:S)(implicitev:cats.Eq[(A,I)]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: ((A, I)) => Boolean): (S) => Boolean", "member" : "proptics.IndexedLens_.notExists", "link" : "proptics\/IndexedLens_.html#notExists(f:((A,I))=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: ((A, I)) => Boolean): (S) => Boolean", "member" : "proptics.IndexedLens_.exists", "link" : "proptics\/IndexedLens_.html#exists(f:((A,I))=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "traverse", "tail" : "(s: S)(f: ((A, I)) => F[B])(arg0: Applicative[F]): F[T]", "member" : "proptics.IndexedLens_.traverse", "link" : "proptics\/IndexedLens_.html#traverse[F[_]](s:S)(f:((A,I))=>F[B])(implicitevidence$2:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "overF", "tail" : "(f: ((A, I)) => F[B])(s: S)(arg0: Applicative[F]): F[T]", "member" : "proptics.IndexedLens_.overF", "link" : "proptics\/IndexedLens_.html#overF[F[_]](f:((A,I))=>F[B])(s:S)(implicitevidence$1:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: ((A, I)) => B): (S) => T", "member" : "proptics.IndexedLens_.over", "link" : "proptics\/IndexedLens_.html#over(f:((A,I))=>B):S=>T", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.IndexedLens_.set", "link" : "proptics\/IndexedLens_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "view", "tail" : "(s: S): (A, I)", "member" : "proptics.IndexedLens_.view", "link" : "proptics\/IndexedLens_.html#view(s:S):(A,I)", "kind" : "final def"}, {"member" : "proptics.IndexedLens_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedLens_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedLens_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedLens_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedLens_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedLens_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedLens_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedLens_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedLens_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedLens_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedLens_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedLens_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedLens_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedLens_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedLens_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedLens_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedLens_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedLens_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedLens_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedLens_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "lens", "tail" : "(to: (S) => ((A, I), (B) => T)): IndexedLens_[I, S, T, A, B]", "member" : "proptics.IndexedLens_.lens", "link" : "proptics\/IndexedLens_$.html#lens[I,S,T,A,B](to:S=>((A,I),B=>T)):proptics.IndexedLens_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => (A, I))(set: (S) => (B) => T): IndexedLens_[I, S, T, A, B]", "member" : "proptics.IndexedLens_.apply", "link" : "proptics\/IndexedLens_$.html#apply[I,S,T,A,B](get:S=>(A,I))(set:S=>(B=>T)):proptics.IndexedLens_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedLens_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedLens_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedLens_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedLens_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedLens_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedLens_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedLens_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedLens_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedLens_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedLens_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedLens_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedLens_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedLens_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedLens_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedLens_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedLens_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedLens_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedLens_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedLens_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/IndexedLens_.html", "kind" : "class"}, {"name" : "proptics.IndexedSetter", "shortDescription" : "", "object" : "proptics\/IndexedSetter$.html", "members_object" : [{"label" : "apply", "tail" : "(mapping: ((A, I) => A) => (S) => S): IndexedSetter[I, S, A]", "member" : "proptics.IndexedSetter.apply", "link" : "proptics\/IndexedSetter$.html#apply[I,S,A](mapping:((A,I)=>A)=>(S=>S)):proptics.IndexedSetter[I,S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedSetter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedSetter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedSetter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedSetter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedSetter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedSetter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedSetter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedSetter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedSetter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedSetter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedSetter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedSetter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedSetter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedSetter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedSetter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedSetter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedSetter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedSetter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedSetter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.IndexedSetter_", "shortDescription" : "An IndexedSetter_ is a generalization of mapWithIndex from proptics.indices.FunctorWithIndex", "object" : "proptics\/IndexedSetter_$.html", "members_class" : [{"label" : "<<*", "tail" : "(other: IndexedSetter_[J, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedSetter_.<<*", "link" : "proptics\/IndexedSetter_.html#<<*[J,C,D](other:proptics.IndexedSetter_[J,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedSetter_[_, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedSetter_.composeWithLeftIndex", "link" : "proptics\/IndexedSetter_.html#composeWithLeftIndex[C,D](other:proptics.IndexedSetter_[_,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedSetter_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedSetter_.*>>", "link" : "proptics\/IndexedSetter_.html#*>>[C,D](other:proptics.IndexedSetter_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedSetter_[J, A, B, C, D]): IndexedSetter_[J, S, T, C, D]", "member" : "proptics.IndexedSetter_.composeWithRightIndex", "link" : "proptics\/IndexedSetter_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedSetter_[J,A,B,C,D]):proptics.IndexedSetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedTraversal_[J, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedSetter_.<<*", "link" : "proptics\/IndexedSetter_.html#<<*[J,C,D](other:proptics.IndexedTraversal_[J,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedTraversal_[_, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedSetter_.composeWithLeftIndex", "link" : "proptics\/IndexedSetter_.html#composeWithLeftIndex[C,D](other:proptics.IndexedTraversal_[_,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedSetter_.*>>", "link" : "proptics\/IndexedSetter_.html#*>>[C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedTraversal_[J, A, B, C, D]): IndexedSetter_[J, S, T, C, D]", "member" : "proptics.IndexedSetter_.composeWithRightIndex", "link" : "proptics\/IndexedSetter_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedTraversal_[J,A,B,C,D]):proptics.IndexedSetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: AnIndexedLens_[J, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedSetter_.<<*", "link" : "proptics\/IndexedSetter_.html#<<*[J,C,D](other:proptics.AnIndexedLens_[J,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: AnIndexedLens_[_, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedSetter_.composeWithLeftIndex", "link" : "proptics\/IndexedSetter_.html#composeWithLeftIndex[C,D](other:proptics.AnIndexedLens_[_,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedSetter_.*>>", "link" : "proptics\/IndexedSetter_.html#*>>[C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: AnIndexedLens_[J, A, B, C, D]): IndexedSetter_[J, S, T, C, D]", "member" : "proptics.IndexedSetter_.composeWithRightIndex", "link" : "proptics\/IndexedSetter_.html#composeWithRightIndex[J,C,D](other:proptics.AnIndexedLens_[J,A,B,C,D]):proptics.IndexedSetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedLens_[_, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedSetter_.<<*", "link" : "proptics\/IndexedSetter_.html#<<*[C,D](other:proptics.IndexedLens_[_,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedLens_[_, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedSetter_.composeWithLeftIndex", "link" : "proptics\/IndexedSetter_.html#composeWithLeftIndex[C,D](other:proptics.IndexedLens_[_,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedLens_[J, A, B, C, D]): IndexedSetter_[J, S, T, C, D]", "member" : "proptics.IndexedSetter_.*>>", "link" : "proptics\/IndexedSetter_.html#*>>[J,C,D](other:proptics.IndexedLens_[J,A,B,C,D]):proptics.IndexedSetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedLens_[J, A, B, C, D]): IndexedSetter_[J, S, T, C, D]", "member" : "proptics.IndexedSetter_.composeWithRightIndex", "link" : "proptics\/IndexedSetter_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedLens_[J,A,B,C,D]):proptics.IndexedSetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "asSetter", "tail" : "(): Setter_[S, T, A, B]", "member" : "proptics.IndexedSetter_.asSetter", "link" : "proptics\/IndexedSetter_.html#asSetter:proptics.Setter_[S,T,A,B]", "kind" : "final def"}, {"label" : "reindex", "tail" : "(f: (I) => J): IndexedSetter_[J, S, T, A, B]", "member" : "proptics.IndexedSetter_.reindex", "link" : "proptics\/IndexedSetter_.html#reindex[J](f:I=>J):proptics.IndexedSetter_[J,S,T,A,B]", "kind" : "final def"}, {"label" : "unIndex", "tail" : "(): Setter_[S, T, A, B]", "member" : "proptics.IndexedSetter_.unIndex", "link" : "proptics\/IndexedSetter_.html#unIndex:proptics.Setter_[S,T,A,B]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: ((A, I)) => B): (S) => T", "member" : "proptics.IndexedSetter_.over", "link" : "proptics\/IndexedSetter_.html#over(f:((A,I))=>B):S=>T", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.IndexedSetter_.set", "link" : "proptics\/IndexedSetter_.html#set(b:B):S=>T", "kind" : "final def"}, {"member" : "proptics.IndexedSetter_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedSetter_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedSetter_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedSetter_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedSetter_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedSetter_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedSetter_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedSetter_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedSetter_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedSetter_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedSetter_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedSetter_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedSetter_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedSetter_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedSetter_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedSetter_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedSetter_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedSetter_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedSetter_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedSetter_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(mapping: ((A, I) => B) => (S) => T): IndexedSetter_[I, S, T, A, B]", "member" : "proptics.IndexedSetter_.apply", "link" : "proptics\/IndexedSetter_$.html#apply[I,S,T,A,B](mapping:((A,I)=>B)=>(S=>T)):proptics.IndexedSetter_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedSetter_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedSetter_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedSetter_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedSetter_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedSetter_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedSetter_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedSetter_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedSetter_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedSetter_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedSetter_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedSetter_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedSetter_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedSetter_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedSetter_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedSetter_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedSetter_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedSetter_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedSetter_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedSetter_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/IndexedSetter_.html", "kind" : "class"}, {"name" : "proptics.IndexedTraversal", "shortDescription" : "", "object" : "proptics\/IndexedTraversal$.html", "members_object" : [{"label" : "dropWhileWithIndex", "tail" : "(predicate: ((A, I)) => Boolean)(ev0: TraverseWithIndex[F, I]): IndexedTraversal[I, F[A], A]", "member" : "proptics.IndexedTraversal.dropWhileWithIndex", "link" : "proptics\/IndexedTraversal$.html#dropWhileWithIndex[F[_],I,A](predicate:((A,I))=>Boolean)(implicitev0:proptics.indices.TraverseWithIndex[F,I]):proptics.IndexedTraversal[I,F[A],A]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(predicate: (A) => Boolean)(ev0: TraverseWithIndex[F, I]): IndexedTraversal[I, F[A], A]", "member" : "proptics.IndexedTraversal.dropWhile", "link" : "proptics\/IndexedTraversal$.html#dropWhile[F[_],I,A](predicate:A=>Boolean)(implicitev0:proptics.indices.TraverseWithIndex[F,I]):proptics.IndexedTraversal[I,F[A],A]", "kind" : "final def"}, {"label" : "takeWhileWithIndex", "tail" : "(predicate: ((A, I)) => Boolean)(ev0: TraverseWithIndex[F, I]): IndexedTraversal[I, F[A], A]", "member" : "proptics.IndexedTraversal.takeWhileWithIndex", "link" : "proptics\/IndexedTraversal$.html#takeWhileWithIndex[F[_],I,A](predicate:((A,I))=>Boolean)(implicitev0:proptics.indices.TraverseWithIndex[F,I]):proptics.IndexedTraversal[I,F[A],A]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(predicate: (A) => Boolean)(ev0: TraverseWithIndex[F, I]): IndexedTraversal[I, F[A], A]", "member" : "proptics.IndexedTraversal.takeWhile", "link" : "proptics\/IndexedTraversal$.html#takeWhile[F[_],I,A](predicate:A=>Boolean)(implicitev0:proptics.indices.TraverseWithIndex[F,I]):proptics.IndexedTraversal[I,F[A],A]", "kind" : "final def"}, {"label" : "elementAt", "tail" : "(i: Int)(ev0: TraverseWithIndex[F, Int]): Traversal[F[A], A]", "member" : "proptics.IndexedTraversal.elementAt", "link" : "proptics\/IndexedTraversal$.html#elementAt[F[_],A](i:Int)(implicitev0:proptics.indices.TraverseWithIndex[F,Int]):proptics.Traversal[F[A],A]", "kind" : "final def"}, {"label" : "wander", "tail" : "(lensLikeWithIndex: LensLikeWithIndex[I, S, S, A, A]): IndexedTraversal[I, S, A]", "member" : "proptics.IndexedTraversal.wander", "link" : "proptics\/IndexedTraversal$.html#wander[I,S,A](lensLikeWithIndex:proptics.rank2types.LensLikeWithIndex[I,S,S,A,A]):proptics.IndexedTraversal[I,S,A]", "kind" : "final def"}, {"label" : "fromTraverse", "tail" : "(ev0: Traverse[F]): IndexedTraversal[Int, F[A], A]", "member" : "proptics.IndexedTraversal.fromTraverse", "link" : "proptics\/IndexedTraversal$.html#fromTraverse[F[_],A](implicitev0:cats.Traverse[F]):proptics.IndexedTraversal[Int,F[A],A]", "kind" : "final def"}, {"label" : "fromTraverseWithIndex", "tail" : "(ev0: TraverseWithIndex[F, I]): IndexedTraversal[I, F[A], A]", "member" : "proptics.IndexedTraversal.fromTraverseWithIndex", "link" : "proptics\/IndexedTraversal$.html#fromTraverseWithIndex[F[_],I,A](implicitev0:proptics.indices.TraverseWithIndex[F,I]):proptics.IndexedTraversal[I,F[A],A]", "kind" : "final def"}, {"label" : "traversal", "tail" : "(to: (S) => ((A, I), (A) => S)): IndexedTraversal[I, S, A]", "member" : "proptics.IndexedTraversal.traversal", "link" : "proptics\/IndexedTraversal$.html#traversal[I,S,A](to:S=>((A,I),A=>S)):proptics.IndexedTraversal[I,S,A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => (A, I))(set: (S) => (A) => S): IndexedTraversal[I, S, A]", "member" : "proptics.IndexedTraversal.apply", "link" : "proptics\/IndexedTraversal$.html#apply[I,S,A](get:S=>(A,I))(set:S=>(A=>S)):proptics.IndexedTraversal[I,S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedTraversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedTraversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedTraversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedTraversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedTraversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedTraversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedTraversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedTraversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedTraversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedTraversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedTraversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedTraversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedTraversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedTraversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedTraversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedTraversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedTraversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedTraversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedTraversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.IndexedTraversal_", "shortDescription" : "An IndexedTraversal_ is an indexed optic that focuses on zero or more values, and their indices.", "object" : "proptics\/IndexedTraversal_$.html", "members_class" : [{"label" : "<<*", "tail" : "(other: IndexedFold_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.<<*", "link" : "proptics\/IndexedTraversal_.html#<<*[C,D](other:proptics.IndexedFold_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedFold_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.composeWithLeftIndex", "link" : "proptics\/IndexedTraversal_.html#composeWithLeftIndex[C,D](other:proptics.IndexedFold_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedFold_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedTraversal_.*>>", "link" : "proptics\/IndexedTraversal_.html#*>>[J,C,D](other:proptics.IndexedFold_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedFold_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedTraversal_.composeWithRightIndex", "link" : "proptics\/IndexedTraversal_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedFold_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedGetter_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.<<*", "link" : "proptics\/IndexedTraversal_.html#<<*[C,D](other:proptics.IndexedGetter_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedGetter_[_, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.composeWithLeftIndex", "link" : "proptics\/IndexedTraversal_.html#composeWithLeftIndex[J,C,D](other:proptics.IndexedGetter_[_,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedGetter_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedTraversal_.*>>", "link" : "proptics\/IndexedTraversal_.html#*>>[J,C,D](other:proptics.IndexedGetter_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedGetter_[J, A, B, C, D]): IndexedFold_[J, S, T, C, D]", "member" : "proptics.IndexedTraversal_.composeWithRightIndex", "link" : "proptics\/IndexedTraversal_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedGetter_[J,A,B,C,D]):proptics.IndexedFold_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedSetter_[_, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.<<*", "link" : "proptics\/IndexedTraversal_.html#<<*[C,D](other:proptics.IndexedSetter_[_,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedSetter_[_, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.composeWithLeftIndex", "link" : "proptics\/IndexedTraversal_.html#composeWithLeftIndex[C,D](other:proptics.IndexedSetter_[_,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedSetter_[J, A, B, C, D]): IndexedSetter_[J, S, T, C, D]", "member" : "proptics.IndexedTraversal_.*>>", "link" : "proptics\/IndexedTraversal_.html#*>>[J,C,D](other:proptics.IndexedSetter_[J,A,B,C,D]):proptics.IndexedSetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedSetter_[J, A, B, C, D]): IndexedSetter_[J, S, T, C, D]", "member" : "proptics.IndexedTraversal_.composeWithRightIndex", "link" : "proptics\/IndexedTraversal_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedSetter_[J,A,B,C,D]):proptics.IndexedSetter_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedTraversal_[_, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.<<*", "link" : "proptics\/IndexedTraversal_.html#<<*[C,D](other:proptics.IndexedTraversal_[_,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedTraversal_[_, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.composeWithLeftIndex", "link" : "proptics\/IndexedTraversal_.html#composeWithLeftIndex[_,C,D](other:proptics.IndexedTraversal_[_,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedTraversal_[J, A, B, C, D]): IndexedTraversal_[J, S, T, C, D]", "member" : "proptics.IndexedTraversal_.*>>", "link" : "proptics\/IndexedTraversal_.html#*>>[J,C,D](other:proptics.IndexedTraversal_[J,A,B,C,D]):proptics.IndexedTraversal_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedTraversal_[J, A, B, C, D]): IndexedTraversal_[J, S, T, C, D]", "member" : "proptics.IndexedTraversal_.composeWithRightIndex", "link" : "proptics\/IndexedTraversal_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedTraversal_[J,A,B,C,D]):proptics.IndexedTraversal_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: AnIndexedLens_[_, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.<<*", "link" : "proptics\/IndexedTraversal_.html#<<*[C,D](other:proptics.AnIndexedLens_[_,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: AnIndexedLens_[_, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.composeWithLeftIndex", "link" : "proptics\/IndexedTraversal_.html#composeWithLeftIndex[C,D](other:proptics.AnIndexedLens_[_,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: AnIndexedLens_[J, A, B, C, D]): IndexedTraversal_[J, S, T, C, D]", "member" : "proptics.IndexedTraversal_.*>>", "link" : "proptics\/IndexedTraversal_.html#*>>[J,C,D](other:proptics.AnIndexedLens_[J,A,B,C,D]):proptics.IndexedTraversal_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: AnIndexedLens_[J, A, B, C, D]): IndexedTraversal_[J, S, T, C, D]", "member" : "proptics.IndexedTraversal_.composeWithRightIndex", "link" : "proptics\/IndexedTraversal_.html#composeWithRightIndex[J,C,D](other:proptics.AnIndexedLens_[J,A,B,C,D]):proptics.IndexedTraversal_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "<<*", "tail" : "(other: IndexedLens_[_, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.<<*", "link" : "proptics\/IndexedTraversal_.html#<<*[C,D](other:proptics.IndexedLens_[_,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithLeftIndex", "tail" : "(other: IndexedLens_[_, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.composeWithLeftIndex", "link" : "proptics\/IndexedTraversal_.html#composeWithLeftIndex[C,D](other:proptics.IndexedLens_[_,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "*>>", "tail" : "(other: IndexedLens_[J, A, B, C, D]): IndexedTraversal_[J, S, T, C, D]", "member" : "proptics.IndexedTraversal_.*>>", "link" : "proptics\/IndexedTraversal_.html#*>>[J,C,D](other:proptics.IndexedLens_[J,A,B,C,D]):proptics.IndexedTraversal_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "composeWithRightIndex", "tail" : "(other: IndexedLens_[J, A, B, C, D]): IndexedTraversal_[J, S, T, C, D]", "member" : "proptics.IndexedTraversal_.composeWithRightIndex", "link" : "proptics\/IndexedTraversal_.html#composeWithRightIndex[J,C,D](other:proptics.IndexedLens_[J,A,B,C,D]):proptics.IndexedTraversal_[J,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.compose", "link" : "proptics\/IndexedTraversal_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.compose", "link" : "proptics\/IndexedTraversal_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.compose", "link" : "proptics\/IndexedTraversal_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.compose", "link" : "proptics\/IndexedTraversal_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.compose", "link" : "proptics\/IndexedTraversal_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.compose", "link" : "proptics\/IndexedTraversal_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.compose", "link" : "proptics\/IndexedTraversal_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.compose", "link" : "proptics\/IndexedTraversal_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.compose", "link" : "proptics\/IndexedTraversal_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.compose", "link" : "proptics\/IndexedTraversal_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.compose", "link" : "proptics\/IndexedTraversal_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.compose", "link" : "proptics\/IndexedTraversal_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.IndexedTraversal_.compose", "link" : "proptics\/IndexedTraversal_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "asIndexedFold", "tail" : "(): IndexedFold_[I, S, T, A, B]", "member" : "proptics.IndexedTraversal_.asIndexedFold", "link" : "proptics\/IndexedTraversal_.html#asIndexedFold:proptics.IndexedFold_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "asTraversal", "tail" : "(): Traversal_[S, T, A, B]", "member" : "proptics.IndexedTraversal_.asTraversal", "link" : "proptics\/IndexedTraversal_.html#asTraversal:proptics.Traversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "reindex", "tail" : "(f: (I) => J): IndexedTraversal_[J, S, T, A, B]", "member" : "proptics.IndexedTraversal_.reindex", "link" : "proptics\/IndexedTraversal_.html#reindex[J](f:I=>J):proptics.IndexedTraversal_[J,S,T,A,B]", "kind" : "final def"}, {"label" : "unIndex", "tail" : "(): Traversal_[S, T, A, B]", "member" : "proptics.IndexedTraversal_.unIndex", "link" : "proptics\/IndexedTraversal_.html#unIndex:proptics.Traversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "use", "tail" : "(ev: State[S, A]): State[S, List[(A, I)]]", "member" : "proptics.IndexedTraversal_.use", "link" : "proptics\/IndexedTraversal_.html#use(implicitev:cats.data.State[S,A]):cats.data.State[S,List[(A,I)]]", "kind" : "final def"}, {"label" : "toList", "tail" : "(s: S): List[A]", "member" : "proptics.IndexedTraversal_.toList", "link" : "proptics\/IndexedTraversal_.html#toList(s:S):List[A]", "kind" : "final def"}, {"label" : "toArray", "tail" : "(s: S)(ev0: ClassTag[A]): Array[A]", "member" : "proptics.IndexedTraversal_.toArray", "link" : "proptics\/IndexedTraversal_.html#toArray(s:S)(implicitev0:scala.reflect.ClassTag[A]):Array[A]", "kind" : "final def"}, {"label" : "maximum", "tail" : "(s: S)(ev: Order[A]): Option[A]", "member" : "proptics.IndexedTraversal_.maximum", "link" : "proptics\/IndexedTraversal_.html#maximum(s:S)(implicitev:cats.Order[A]):Option[A]", "kind" : "final def"}, {"label" : "minimum", "tail" : "(s: S)(ev: Order[A]): Option[A]", "member" : "proptics.IndexedTraversal_.minimum", "link" : "proptics\/IndexedTraversal_.html#minimum(s:S)(implicitev:cats.Order[A]):Option[A]", "kind" : "final def"}, {"label" : "last", "tail" : "(s: S): Option[(A, I)]", "member" : "proptics.IndexedTraversal_.last", "link" : "proptics\/IndexedTraversal_.html#last(s:S):Option[(A,I)]", "kind" : "final def"}, {"label" : "first", "tail" : "(s: S): Option[(A, I)]", "member" : "proptics.IndexedTraversal_.first", "link" : "proptics\/IndexedTraversal_.html#first(s:S):Option[(A,I)]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: ((A, I)) => Boolean): (S) => Option[(A, I)]", "member" : "proptics.IndexedTraversal_.find", "link" : "proptics\/IndexedTraversal_.html#find(f:((A,I))=>Boolean):S=>Option[(A,I)]", "kind" : "final def"}, {"label" : "length", "tail" : "(s: S): Int", "member" : "proptics.IndexedTraversal_.length", "link" : "proptics\/IndexedTraversal_.html#length(s:S):Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.IndexedTraversal_.nonEmpty", "link" : "proptics\/IndexedTraversal_.html#nonEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.IndexedTraversal_.isEmpty", "link" : "proptics\/IndexedTraversal_.html#isEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: (A, I))(s: S)(ev: Eq[(A, I)]): Boolean", "member" : "proptics.IndexedTraversal_.notContains", "link" : "proptics\/IndexedTraversal_.html#notContains(a:(A,I))(s:S)(implicitev:cats.Eq[(A,I)]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: (A, I))(s: S)(ev: Eq[(A, I)]): Boolean", "member" : "proptics.IndexedTraversal_.contains", "link" : "proptics\/IndexedTraversal_.html#contains(a:(A,I))(s:S)(implicitev:cats.Eq[(A,I)]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: ((A, I)) => Boolean): (S) => Boolean", "member" : "proptics.IndexedTraversal_.notExists", "link" : "proptics\/IndexedTraversal_.html#notExists(f:((A,I))=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: ((A, I)) => Boolean): (S) => Boolean", "member" : "proptics.IndexedTraversal_.exists", "link" : "proptics\/IndexedTraversal_.html#exists(f:((A,I))=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "any", "tail" : "(s: S)(f: ((A, I)) => R)(arg0: Heyting[R]): R", "member" : "proptics.IndexedTraversal_.any", "link" : "proptics\/IndexedTraversal_.html#any[F[_],R](s:S)(f:((A,I))=>R)(implicitevidence$5:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "or", "tail" : "(s: S)(ev: Heyting[A]): A", "member" : "proptics.IndexedTraversal_.or", "link" : "proptics\/IndexedTraversal_.html#or(s:S)(implicitev:spire.algebra.lattice.Heyting[A]):A", "kind" : "final def"}, {"label" : "and", "tail" : "(s: S)(ev: Heyting[A]): A", "member" : "proptics.IndexedTraversal_.and", "link" : "proptics\/IndexedTraversal_.html#and(s:S)(implicitev:spire.algebra.lattice.Heyting[A]):A", "kind" : "final def"}, {"label" : "forall", "tail" : "(s: S)(f: ((A, I)) => R)(arg0: Heyting[R]): R", "member" : "proptics.IndexedTraversal_.forall", "link" : "proptics\/IndexedTraversal_.html#forall[R](s:S)(f:((A,I))=>R)(implicitevidence$4:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "forall", "tail" : "(f: ((A, I)) => Boolean): (S) => Boolean", "member" : "proptics.IndexedTraversal_.forall", "link" : "proptics\/IndexedTraversal_.html#forall(f:((A,I))=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "product", "tail" : "(s: S)(ev: MultiplicativeMonoid[A]): A", "member" : "proptics.IndexedTraversal_.product", "link" : "proptics\/IndexedTraversal_.html#product(s:S)(implicitev:spire.algebra.MultiplicativeMonoid[A]):A", "kind" : "final def"}, {"label" : "sum", "tail" : "(s: S)(ev: AdditiveMonoid[A]): A", "member" : "proptics.IndexedTraversal_.sum", "link" : "proptics\/IndexedTraversal_.html#sum(s:S)(implicitev:spire.algebra.AdditiveMonoid[A]):A", "kind" : "final def"}, {"label" : "traverse_", "tail" : "(s: S)(f: ((A, I)) => F[R])(ev: Applicative[F]): F[Unit]", "member" : "proptics.IndexedTraversal_.traverse_", "link" : "proptics\/IndexedTraversal_.html#traverse_[F[_],R](s:S)(f:((A,I))=>F[R])(implicitev:cats.Applicative[F]):F[Unit]", "kind" : "final def"}, {"label" : "sequence_", "tail" : "(s: S)(ev: Applicative[F]): F[Unit]", "member" : "proptics.IndexedTraversal_.sequence_", "link" : "proptics\/IndexedTraversal_.html#sequence_[F[_]](s:S)(implicitev:cats.Applicative[F]):F[Unit]", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(s: S)(r: R)(f: (R, (A, I)) => R): R", "member" : "proptics.IndexedTraversal_.foldLeft", "link" : "proptics\/IndexedTraversal_.html#foldLeft[R](s:S)(r:R)(f:(R,(A,I))=>R):R", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(s: S)(r: R)(f: ((A, I), R) => R): R", "member" : "proptics.IndexedTraversal_.foldRight", "link" : "proptics\/IndexedTraversal_.html#foldRight[R](s:S)(r:R)(f:((A,I),R)=>R):R", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(s: S)(f: ((A, I)) => R)(arg0: Monoid[R]): R", "member" : "proptics.IndexedTraversal_.foldMap", "link" : "proptics\/IndexedTraversal_.html#foldMap[R](s:S)(f:((A,I))=>R)(implicitevidence$3:cats.Monoid[R]):R", "kind" : "final def"}, {"label" : "traverse", "tail" : "(s: S)(f: ((A, I)) => F[B])(arg0: Applicative[F]): F[T]", "member" : "proptics.IndexedTraversal_.traverse", "link" : "proptics\/IndexedTraversal_.html#traverse[F[_]](s:S)(f:((A,I))=>F[B])(implicitevidence$2:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "overF", "tail" : "(f: ((A, I)) => F[B])(s: S)(arg0: Applicative[F]): F[T]", "member" : "proptics.IndexedTraversal_.overF", "link" : "proptics\/IndexedTraversal_.html#overF[F[_]](f:((A,I))=>F[B])(s:S)(implicitevidence$1:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: ((A, I)) => B): (S) => T", "member" : "proptics.IndexedTraversal_.over", "link" : "proptics\/IndexedTraversal_.html#over(f:((A,I))=>B):S=>T", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.IndexedTraversal_.set", "link" : "proptics\/IndexedTraversal_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "preview", "tail" : "(s: S): Option[(A, I)]", "member" : "proptics.IndexedTraversal_.preview", "link" : "proptics\/IndexedTraversal_.html#preview(s:S):Option[(A,I)]", "kind" : "final def"}, {"label" : "viewAll", "tail" : "(s: S): List[(A, I)]", "member" : "proptics.IndexedTraversal_.viewAll", "link" : "proptics\/IndexedTraversal_.html#viewAll(s:S):List[(A,I)]", "kind" : "final def"}, {"member" : "proptics.IndexedTraversal_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedTraversal_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedTraversal_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedTraversal_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedTraversal_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedTraversal_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedTraversal_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedTraversal_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedTraversal_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedTraversal_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedTraversal_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedTraversal_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedTraversal_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedTraversal_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedTraversal_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedTraversal_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedTraversal_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedTraversal_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedTraversal_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedTraversal_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "wander", "tail" : "(lensLikeWithIndex: LensLikeWithIndex[I, S, T, A, B]): IndexedTraversal_[I, S, T, A, B]", "member" : "proptics.IndexedTraversal_.wander", "link" : "proptics\/IndexedTraversal_$.html#wander[I,S,T,A,B](lensLikeWithIndex:proptics.rank2types.LensLikeWithIndex[I,S,T,A,B]):proptics.IndexedTraversal_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "fromTraverse", "tail" : "(ev0: Traverse[G]): IndexedTraversal_[Int, G[A], G[B], A, B]", "member" : "proptics.IndexedTraversal_.fromTraverse", "link" : "proptics\/IndexedTraversal_$.html#fromTraverse[G[_],A,B](implicitev0:cats.Traverse[G]):proptics.IndexedTraversal_[Int,G[A],G[B],A,B]", "kind" : "final def"}, {"label" : "fromTraverseWithIndex", "tail" : "(ev0: TraverseWithIndex[G, I]): IndexedTraversal_[I, G[A], G[B], A, B]", "member" : "proptics.IndexedTraversal_.fromTraverseWithIndex", "link" : "proptics\/IndexedTraversal_$.html#fromTraverseWithIndex[G[_],I,A,B](implicitev0:proptics.indices.TraverseWithIndex[G,I]):proptics.IndexedTraversal_[I,G[A],G[B],A,B]", "kind" : "final def"}, {"label" : "traversal", "tail" : "(to: (S) => ((A, I), (B) => T)): IndexedTraversal_[I, S, T, A, B]", "member" : "proptics.IndexedTraversal_.traversal", "link" : "proptics\/IndexedTraversal_$.html#traversal[I,S,T,A,B](to:S=>((A,I),B=>T)):proptics.IndexedTraversal_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => (A, I))(_set: (S) => (B) => T): IndexedTraversal_[I, S, T, A, B]", "member" : "proptics.IndexedTraversal_.apply", "link" : "proptics\/IndexedTraversal_$.html#apply[I,S,T,A,B](get:S=>(A,I))(_set:S=>(B=>T)):proptics.IndexedTraversal_[I,S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/IndexedTraversal_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/IndexedTraversal_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/IndexedTraversal_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/IndexedTraversal_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/IndexedTraversal_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/IndexedTraversal_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/IndexedTraversal_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedTraversal_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedTraversal_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/IndexedTraversal_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/IndexedTraversal_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/IndexedTraversal_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/IndexedTraversal_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/IndexedTraversal_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/IndexedTraversal_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/IndexedTraversal_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/IndexedTraversal_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/IndexedTraversal_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/IndexedTraversal_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/IndexedTraversal_.html", "kind" : "class"}, {"name" : "proptics.Iso", "shortDescription" : "", "object" : "proptics\/Iso$.html", "members_object" : [{"label" : "id", "tail" : "(): Iso[S, S]", "member" : "proptics.Iso.id", "link" : "proptics\/Iso$.html#id[S]:proptics.Iso[S,S]", "kind" : "final def"}, {"label" : "bimap", "tail" : "(): BimapPartiallyApplied[F]", "member" : "proptics.Iso.bimap", "link" : "proptics\/Iso$.html#bimap[F[_,_]]:proptics.Iso.BimapPartiallyApplied[F]", "kind" : "final def"}, {"label" : "contramap", "tail" : "(): ContravariantPartiallyApplied[F]", "member" : "proptics.Iso.contramap", "link" : "proptics\/Iso$.html#contramap[F[_]]:proptics.Iso.ContravariantPartiallyApplied[F]", "kind" : "final def"}, {"label" : "map", "tail" : "(): MapPartiallyApplied[F]", "member" : "proptics.Iso.map", "link" : "proptics\/Iso$.html#map[F[_]]:proptics.Iso.MapPartiallyApplied[F]", "kind" : "final def"}, {"label" : "involuted", "tail" : "(update: (A) => A): Iso[A, A]", "member" : "proptics.Iso.involuted", "link" : "proptics\/Iso$.html#involuted[A](update:A=>A):proptics.Iso[A,A]", "kind" : "final def"}, {"label" : "non", "tail" : "(a: A)(ev: Eq[A]): Iso[Option[A], A]", "member" : "proptics.Iso.non", "link" : "proptics\/Iso$.html#non[A](a:A)(implicitev:cats.Eq[A]):proptics.Iso[Option[A],A]", "kind" : "final def"}, {"label" : "iso", "tail" : "(view: (S) => A)(review: (A) => S): Iso[S, A]", "member" : "proptics.Iso.iso", "link" : "proptics\/Iso$.html#iso[S,A](view:S=>A)(review:A=>S):proptics.Iso[S,A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(view: (S) => A)(review: (A) => S): Iso[S, A]", "member" : "proptics.Iso.apply", "link" : "proptics\/Iso$.html#apply[S,A](view:S=>A)(review:A=>S):proptics.Iso[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Iso$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Iso$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Iso$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Iso$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Iso$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Iso$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Iso$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Iso$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Iso$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Iso$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Iso$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Iso$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Iso$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Iso$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Iso$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Iso$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Iso$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Iso$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Iso$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Iso_", "shortDescription" : "An Iso_ is a generalized isomorphism.", "object" : "proptics\/Iso_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedFold_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[I,C,D](other:proptics.IndexedFold_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedGetter_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[I,C,D](other:proptics.IndexedGetter_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedSetter_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[I,C,D](other:proptics.IndexedSetter_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[I,C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[I,C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedLens_[I, S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[I,C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Review_[A, B, C, D]): Review_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.Review_[A,B,C,D]):proptics.Review_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Grate_[A, B, C, D]): Grate_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.Grate_[A,B,C,D]):proptics.Grate_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): Getter_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): APrism_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.APrism_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): Prism_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.Prism_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): ALens_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.ALens_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): Lens_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.Lens_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): AnIso_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.AnIso_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): Iso_[S, T, C, D]", "member" : "proptics.Iso_.compose", "link" : "proptics\/Iso_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.Iso_[S,T,C,D]", "kind" : "final def"}, {"label" : "to", "tail" : "(f: (A) => C): Getter_[S, T, C, D]", "member" : "proptics.Iso_.to", "link" : "proptics\/Iso_.html#to[C,D](f:A=>C):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "reverse", "tail" : "(): Iso_[B, A, T, S]", "member" : "proptics.Iso_.reverse", "link" : "proptics\/Iso_.html#reverse:proptics.Iso_[B,A,T,S]", "kind" : "final def"}, {"label" : "zipWithF", "tail" : "(f: (F[A]) => B)(fs: F[S])(arg0: Applicative[F]): T", "member" : "proptics.Iso_.zipWithF", "link" : "proptics\/Iso_.html#zipWithF[F[_]](f:F[A]=>B)(fs:F[S])(implicitevidence$2:cats.Applicative[F]):T", "kind" : "final def"}, {"label" : "cotraverse", "tail" : "(fs: F[S])(f: (F[A]) => B)(ev: Applicative[F]): T", "member" : "proptics.Iso_.cotraverse", "link" : "proptics\/Iso_.html#cotraverse[F[_]](fs:F[S])(f:F[A]=>B)(implicitev:cats.Applicative[F]):T", "kind" : "final def"}, {"label" : "zipWith", "tail" : "(s1: S, s2: S)(f: (A, A) => B): T", "member" : "proptics.Iso_.zipWith", "link" : "proptics\/Iso_.html#zipWith[F[_]](s1:S,s2:S)(f:(A,A)=>B):T", "kind" : "final def"}, {"label" : "use", "tail" : "(ev: State[S, A]): State[S, A]", "member" : "proptics.Iso_.use", "link" : "proptics\/Iso_.html#use(implicitev:cats.data.State[S,A]):cats.data.State[S,A]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: (A) => Boolean): (S) => Option[A]", "member" : "proptics.Iso_.find", "link" : "proptics\/Iso_.html#find(f:A=>Boolean):S=>Option[A]", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.Iso_.notContains", "link" : "proptics\/Iso_.html#notContains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.Iso_.contains", "link" : "proptics\/Iso_.html#contains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Iso_.notExists", "link" : "proptics\/Iso_.html#notExists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Iso_.exists", "link" : "proptics\/Iso_.html#exists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "traverse", "tail" : "(s: S)(f: (A) => F[B])(ev: Applicative[F]): F[T]", "member" : "proptics.Iso_.traverse", "link" : "proptics\/Iso_.html#traverse[F[_]](s:S)(f:A=>F[B])(implicitev:cats.Applicative[F]):F[T]", "kind" : "def"}, {"label" : "overF", "tail" : "(f: (A) => F[B])(s: S)(arg0: Applicative[F]): F[T]", "member" : "proptics.Iso_.overF", "link" : "proptics\/Iso_.html#overF[F[_]](f:A=>F[B])(s:S)(implicitevidence$1:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: (A) => B): (S) => T", "member" : "proptics.Iso_.over", "link" : "proptics\/Iso_.html#over(f:A=>B):S=>T", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.Iso_.set", "link" : "proptics\/Iso_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "review", "tail" : "(b: B): T", "member" : "proptics.Iso_.review", "link" : "proptics\/Iso_.html#review(b:B):T", "kind" : "final def"}, {"label" : "view", "tail" : "(s: S): A", "member" : "proptics.Iso_.view", "link" : "proptics\/Iso_.html#view(s:S):A", "kind" : "final def"}, {"member" : "proptics.Iso_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Iso_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Iso_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Iso_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Iso_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Iso_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Iso_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Iso_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Iso_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Iso_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Iso_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Iso_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Iso_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Iso_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Iso_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Iso_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Iso_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Iso_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Iso_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Iso_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "id", "tail" : "(): Iso_[S, T, S, T]", "member" : "proptics.Iso_.id", "link" : "proptics\/Iso_$.html#id[S,T]:proptics.Iso_[S,T,S,T]", "kind" : "final def"}, {"label" : "map", "tail" : "(): MapPartiallyApplied[F, F]", "member" : "proptics.Iso_.map", "link" : "proptics\/Iso_$.html#map[F[_]]:proptics.Iso_.MapPartiallyApplied[F,F]", "kind" : "final def"}, {"label" : "mapP", "tail" : "(): MapPartiallyApplied[F, G]", "member" : "proptics.Iso_.mapP", "link" : "proptics\/Iso_$.html#mapP[F[_],G[_]]:proptics.Iso_.MapPartiallyApplied[F,G]", "kind" : "final def"}, {"label" : "iso", "tail" : "(view: (S) => A)(review: (B) => T): Iso_[S, T, A, B]", "member" : "proptics.Iso_.iso", "link" : "proptics\/Iso_$.html#iso[S,T,A,B](view:S=>A)(review:B=>T):proptics.Iso_[S,T,A,B]", "kind" : "final def"}, {"label" : "apply", "tail" : "(view: (S) => A)(review: (B) => T): Iso_[S, T, A, B]", "member" : "proptics.Iso_.apply", "link" : "proptics\/Iso_$.html#apply[S,T,A,B](view:S=>A)(review:B=>T):proptics.Iso_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Iso_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Iso_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Iso_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Iso_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Iso_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Iso_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Iso_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Iso_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Iso_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Iso_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Iso_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Iso_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Iso_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Iso_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Iso_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Iso_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Iso_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Iso_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Iso_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/Iso_.html", "kind" : "class"}, {"name" : "proptics.Lens", "shortDescription" : "", "object" : "proptics\/Lens$.html", "members_object" : [{"label" : "outside", "tail" : "(aPrism: Prism[S, A]): Lens[(S) => R, (A) => R]", "member" : "proptics.Lens.outside", "link" : "proptics\/Lens$.html#outside[S,A,R](aPrism:proptics.Prism[S,A]):proptics.Lens[S=>R,A=>R]", "kind" : "final def"}, {"label" : "id", "tail" : "(): Lens[S, S]", "member" : "proptics.Lens.id", "link" : "proptics\/Lens$.html#id[S]:proptics.Lens[S,S]", "kind" : "final def"}, {"label" : "lens", "tail" : "(to: (S) => (A, (A) => S)): Lens[S, A]", "member" : "proptics.Lens.lens", "link" : "proptics\/Lens$.html#lens[S,A](to:S=>(A,A=>S)):proptics.Lens[S,A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(view: (S) => A)(set: (S) => (A) => S): Lens[S, A]", "member" : "proptics.Lens.apply", "link" : "proptics\/Lens$.html#apply[S,A](view:S=>A)(set:S=>(A=>S)):proptics.Lens[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Lens$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Lens$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Lens$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Lens$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Lens$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Lens$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Lens$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Lens$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Lens$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Lens$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Lens$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Lens$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Lens$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Lens$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Lens$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Lens$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Lens2", "shortDescription" : "", "object" : "proptics\/Lens2$.html", "members_object" : [{"label" : "apply", "tail" : "(view1: (S) => A, view2: (S) => B)(set: (S, A, B) => S): Lens[S, (A, B)]", "member" : "proptics.Lens2.apply", "link" : "proptics\/Lens2$.html#apply[S,A,B](view1:S=>A,view2:S=>B)(set:(S,A,B)=>S):proptics.Lens[S,(A,B)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Lens2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Lens2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Lens2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Lens2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Lens2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Lens2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Lens2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Lens2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Lens2$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Lens2$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Lens2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Lens2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Lens2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Lens2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Lens2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Lens2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Lens3", "shortDescription" : "", "object" : "proptics\/Lens3$.html", "members_object" : [{"label" : "apply", "tail" : "(view1: (S) => A, view2: (S) => B, view3: (S) => C)(set: (S, A, B, C) => S): Lens[S, (A, B, C)]", "member" : "proptics.Lens3.apply", "link" : "proptics\/Lens3$.html#apply[S,A,B,C](view1:S=>A,view2:S=>B,view3:S=>C)(set:(S,A,B,C)=>S):proptics.Lens[S,(A,B,C)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Lens3$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Lens3$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Lens3$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Lens3$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Lens3$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Lens3$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Lens3$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens3$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens3$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens3$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Lens3$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Lens3$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Lens3$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Lens3$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Lens3$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Lens3$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Lens3$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Lens3$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Lens3$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Lens4", "shortDescription" : "", "object" : "proptics\/Lens4$.html", "members_object" : [{"label" : "apply", "tail" : "(view1: (S) => A, view2: (S) => B, view3: (S) => C, view4: (S) => D)(set: (S, A, B, C, D) => S): Lens[S, (A, B, C, D)]", "member" : "proptics.Lens4.apply", "link" : "proptics\/Lens4$.html#apply[S,A,B,C,D](view1:S=>A,view2:S=>B,view3:S=>C,view4:S=>D)(set:(S,A,B,C,D)=>S):proptics.Lens[S,(A,B,C,D)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Lens4$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Lens4$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Lens4$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Lens4$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Lens4$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Lens4$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Lens4$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens4$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens4$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens4$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Lens4$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Lens4$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Lens4$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Lens4$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Lens4$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Lens4$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Lens4$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Lens4$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Lens4$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Lens5", "shortDescription" : "", "object" : "proptics\/Lens5$.html", "members_object" : [{"label" : "apply", "tail" : "(view1: (S) => A, view2: (S) => B, view3: (S) => C, view4: (S) => D, view5: (S) => E)(set: (S, A, B, C, D, E) => S): Lens[S, (A, B, C, D, E)]", "member" : "proptics.Lens5.apply", "link" : "proptics\/Lens5$.html#apply[S,A,B,C,D,E](view1:S=>A,view2:S=>B,view3:S=>C,view4:S=>D,view5:S=>E)(set:(S,A,B,C,D,E)=>S):proptics.Lens[S,(A,B,C,D,E)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Lens5$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Lens5$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Lens5$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Lens5$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Lens5$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Lens5$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Lens5$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens5$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens5$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens5$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Lens5$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Lens5$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Lens5$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Lens5$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Lens5$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Lens5$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Lens5$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Lens5$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Lens5$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Lens_", "shortDescription" : "A Lens_] focuses a single piece of data within a larger structure.", "object" : "proptics\/Lens_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedFold_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[I,C,D](other:proptics.IndexedFold_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedGetter_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[I,C,D](other:proptics.IndexedGetter_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedSetter_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[I,C,D](other:proptics.IndexedSetter_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[I,C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): AnIndexedLens_[I, S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[I,C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.AnIndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedLens_[I, S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[I,C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedLens_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): Getter_[S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): ALens_[S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.ALens_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): Lens_[S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.Lens_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): Lens_[S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.Lens_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): Lens_[S, T, C, D]", "member" : "proptics.Lens_.compose", "link" : "proptics\/Lens_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.Lens_[S,T,C,D]", "kind" : "final def"}, {"label" : "to", "tail" : "(f: (A) => C): Getter_[S, T, C, D]", "member" : "proptics.Lens_.to", "link" : "proptics\/Lens_.html#to[C,D](f:A=>C):proptics.Getter_[S,T,C,D]", "kind" : "final def"}, {"label" : "asALens", "tail" : "(): ALens_[S, T, A, B]", "member" : "proptics.Lens_.asALens", "link" : "proptics\/Lens_.html#asALens:proptics.ALens_[S,T,A,B]", "kind" : "final def"}, {"label" : "asFold", "tail" : "(): Fold_[S, T, A, B]", "member" : "proptics.Lens_.asFold", "link" : "proptics\/Lens_.html#asFold:proptics.Fold_[S,T,A,B]", "kind" : "final def"}, {"label" : "zipWithF", "tail" : "(f: (F[A]) => B)(fs: F[S])(arg0: Comonad[F]): T", "member" : "proptics.Lens_.zipWithF", "link" : "proptics\/Lens_.html#zipWithF[F[_]](f:F[A]=>B)(fs:F[S])(implicitevidence$4:cats.Comonad[F]):T", "kind" : "final def"}, {"label" : "cotraverse", "tail" : "(fs: F[S])(f: (F[A]) => B)(arg0: Comonad[F]): T", "member" : "proptics.Lens_.cotraverse", "link" : "proptics\/Lens_.html#cotraverse[F[_]](fs:F[S])(f:F[A]=>B)(implicitevidence$3:cats.Comonad[F]):T", "kind" : "final def"}, {"label" : "zipWith", "tail" : "(s1: S, s2: S)(f: (A, A) => B): T", "member" : "proptics.Lens_.zipWith", "link" : "proptics\/Lens_.html#zipWith[F[_]](s1:S,s2:S)(f:(A,A)=>B):T", "kind" : "final def"}, {"label" : "failover", "tail" : "(f: (A) => B)(s: S)(ev0: Strong[[β$3$, γ$4$]Kleisli[[β$2$](Disj[Boolean], β$2$), β$3$, γ$4$]], ev1: Alternative[F]): F[T]", "member" : "proptics.Lens_.failover", "link" : "proptics\/Lens_.html#failover[F[_]](f:A=>B)(s:S)(implicitev0:cats.arrow.Strong[[β$3$,γ$4$]cats.data.Kleisli[[β$2$](proptics.data.Disj[Boolean],β$2$),β$3$,γ$4$]],implicitev1:cats.Alternative[F]):F[T]", "kind" : "final def"}, {"label" : "use", "tail" : "(ev: State[S, A]): State[S, A]", "member" : "proptics.Lens_.use", "link" : "proptics\/Lens_.html#use(implicitev:cats.data.State[S,A]):cats.data.State[S,A]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: (A) => Boolean): (S) => Option[A]", "member" : "proptics.Lens_.find", "link" : "proptics\/Lens_.html#find(f:A=>Boolean):S=>Option[A]", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.Lens_.notContains", "link" : "proptics\/Lens_.html#notContains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.Lens_.contains", "link" : "proptics\/Lens_.html#contains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Lens_.notExists", "link" : "proptics\/Lens_.html#notExists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Lens_.exists", "link" : "proptics\/Lens_.html#exists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "traverse", "tail" : "(s: S)(f: (A) => F[B])(arg0: Functor[F]): F[T]", "member" : "proptics.Lens_.traverse", "link" : "proptics\/Lens_.html#traverse[F[_]](s:S)(f:A=>F[B])(implicitevidence$2:cats.Functor[F]):F[T]", "kind" : "final def"}, {"label" : "overF", "tail" : "(f: (A) => F[B])(s: S)(arg0: Functor[F]): F[T]", "member" : "proptics.Lens_.overF", "link" : "proptics\/Lens_.html#overF[F[_]](f:A=>F[B])(s:S)(implicitevidence$1:cats.Functor[F]):F[T]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: (A) => B): (S) => T", "member" : "proptics.Lens_.over", "link" : "proptics\/Lens_.html#over(f:A=>B):S=>T", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.Lens_.set", "link" : "proptics\/Lens_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "view", "tail" : "(s: S): A", "member" : "proptics.Lens_.view", "link" : "proptics\/Lens_.html#view(s:S):A", "kind" : "final def"}, {"member" : "proptics.Lens_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Lens_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Lens_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Lens_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Lens_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Lens_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Lens_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Lens_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Lens_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Lens_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Lens_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Lens_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Lens_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Lens_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Lens_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Lens_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Lens_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "aLensToLens", "tail" : "(aLens: ALens_[S, T, A, B]): Lens_[S, T, A, B]", "member" : "proptics.Lens_.aLensToLens", "link" : "proptics\/Lens_$.html#aLensToLens[S,T,A,B](aLens:proptics.ALens_[S,T,A,B]):proptics.Lens_[S,T,A,B]", "kind" : "implicit def"}, {"label" : "outside", "tail" : "(prism: Prism_[S, T, A, B]): Lens_[(T) => R, (S) => R, (B) => R, (A) => R]", "member" : "proptics.Lens_.outside", "link" : "proptics\/Lens_$.html#outside[S,T,A,B,R](prism:proptics.Prism_[S,T,A,B]):proptics.Lens_[T=>R,S=>R,B=>R,A=>R]", "kind" : "final def"}, {"label" : "id", "tail" : "(): Lens_[S, T, S, T]", "member" : "proptics.Lens_.id", "link" : "proptics\/Lens_$.html#id[S,T]:proptics.Lens_[S,T,S,T]", "kind" : "final def"}, {"label" : "lens", "tail" : "(to: (S) => (A, (B) => T)): Lens_[S, T, A, B]", "member" : "proptics.Lens_.lens", "link" : "proptics\/Lens_$.html#lens[S,T,A,B](to:S=>(A,B=>T)):proptics.Lens_[S,T,A,B]", "kind" : "final def"}, {"label" : "apply", "tail" : "(view: (S) => A)(set: (S) => (B) => T): Lens_[S, T, A, B]", "member" : "proptics.Lens_.apply", "link" : "proptics\/Lens_$.html#apply[S,T,A,B](view:S=>A)(set:S=>(B=>T)):proptics.Lens_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Lens_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Lens_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Lens_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Lens_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Lens_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Lens_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Lens_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Lens_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Lens_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Lens_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Lens_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Lens_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Lens_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Lens_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Lens_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Lens_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Lens_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/Lens_.html", "kind" : "class"}, {"name" : "proptics.Prism", "shortDescription" : "", "object" : "proptics\/Prism$.html", "members_object" : [{"label" : "id", "tail" : "(): Prism[S, S]", "member" : "proptics.Prism.id", "link" : "proptics\/Prism$.html#id[S]:proptics.Prism[S,S]", "kind" : "final def"}, {"label" : "only", "tail" : "(a: A)(arg0: Eq[A], ev: Alternative[Option]): Prism[A, Unit]", "member" : "proptics.Prism.only", "link" : "proptics\/Prism$.html#only[A](a:A)(implicitevidence$9:cats.Eq[A],implicitev:cats.Alternative[Option]):proptics.Prism[A,Unit]", "kind" : "final def"}, {"label" : "nearly", "tail" : "(a: A)(predicate: (A) => Boolean)(ev: Alternative[Option]): Prism[A, Unit]", "member" : "proptics.Prism.nearly", "link" : "proptics\/Prism$.html#nearly[A](a:A)(predicate:A=>Boolean)(implicitev:cats.Alternative[Option]):proptics.Prism[A,Unit]", "kind" : "final def"}, {"label" : "apply", "tail" : "(viewOrModify: (S) => Either[S, A])(review: (A) => S): Prism[S, A]", "member" : "proptics.Prism.apply", "link" : "proptics\/Prism$.html#apply[S,A](viewOrModify:S=>Either[S,A])(review:A=>S):proptics.Prism[S,A]", "kind" : "final def"}, {"label" : "fromPartial", "tail" : "(preview: PartialFunction[S, A])(review: (A) => S): Prism[S, A]", "member" : "proptics.Prism.fromPartial", "link" : "proptics\/Prism$.html#fromPartial[S,A](preview:PartialFunction[S,A])(review:A=>S):proptics.Prism[S,A]", "kind" : "final def"}, {"label" : "fromPreview", "tail" : "(preview: (S) => Option[A])(review: (A) => S): Prism[S, A]", "member" : "proptics.Prism.fromPreview", "link" : "proptics\/Prism$.html#fromPreview[S,A](preview:S=>Option[A])(review:A=>S):proptics.Prism[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Prism$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Prism$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Prism$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Prism$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Prism$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Prism$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Prism$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Prism$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Prism$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Prism$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Prism$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Prism$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Prism$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Prism$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Prism$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Prism$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Prism$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Prism$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Prism$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Prism_", "shortDescription" : "A Prism_ is used for selecting cases of a type, most often a sum type.", "object" : "proptics\/Prism_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedFold_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[I,C,D](other:proptics.IndexedFold_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedGetter_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[I,C,D](other:proptics.IndexedGetter_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedSetter_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[I,C,D](other:proptics.IndexedSetter_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[I,C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[I,C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[I,C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Review_[A, B, C, D]): Review_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.Review_[A,B,C,D]):proptics.Review_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): AnAffineTraversal_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.AnAffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): APrism_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.APrism_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): Prism_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.Prism_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): AffineTraversal_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.AffineTraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): Prism_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.Prism_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): Prism_[S, T, C, D]", "member" : "proptics.Prism_.compose", "link" : "proptics\/Prism_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.Prism_[S,T,C,D]", "kind" : "final def"}, {"label" : "to", "tail" : "(f: (A) => C): Fold_[S, T, C, D]", "member" : "proptics.Prism_.to", "link" : "proptics\/Prism_.html#to[C,D](f:A=>C):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "asFold", "tail" : "(): Fold_[S, T, A, B]", "member" : "proptics.Prism_.asFold", "link" : "proptics\/Prism_.html#asFold:proptics.Fold_[S,T,A,B]", "kind" : "final def"}, {"label" : "asAPrism", "tail" : "(): APrism_[S, T, A, B]", "member" : "proptics.Prism_.asAPrism", "link" : "proptics\/Prism_.html#asAPrism:proptics.APrism_[S,T,A,B]", "kind" : "final def"}, {"label" : "find", "tail" : "(p: (A) => Boolean): (S) => Option[A]", "member" : "proptics.Prism_.find", "link" : "proptics\/Prism_.html#find(p:A=>Boolean):S=>Option[A]", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.Prism_.nonEmpty", "link" : "proptics\/Prism_.html#nonEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.Prism_.isEmpty", "link" : "proptics\/Prism_.html#isEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.Prism_.notContains", "link" : "proptics\/Prism_.html#notContains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.Prism_.contains", "link" : "proptics\/Prism_.html#contains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Prism_.notExists", "link" : "proptics\/Prism_.html#notExists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Prism_.exists", "link" : "proptics\/Prism_.html#exists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "forall", "tail" : "(s: S)(f: (A) => R)(arg0: Heyting[R]): R", "member" : "proptics.Prism_.forall", "link" : "proptics\/Prism_.html#forall[R](s:S)(f:A=>R)(implicitevidence$3:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "forall", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Prism_.forall", "link" : "proptics\/Prism_.html#forall(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "traverse", "tail" : "(s: S)(f: (A) => F[B])(arg0: Applicative[F]): F[T]", "member" : "proptics.Prism_.traverse", "link" : "proptics\/Prism_.html#traverse[F[_]](s:S)(f:A=>F[B])(implicitevidence$2:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "overF", "tail" : "(f: (A) => F[B])(s: S)(arg0: Applicative[F]): F[T]", "member" : "proptics.Prism_.overF", "link" : "proptics\/Prism_.html#overF[F[_]](f:A=>F[B])(s:S)(implicitevidence$1:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "overOption", "tail" : "(f: (A) => B): (S) => Option[T]", "member" : "proptics.Prism_.overOption", "link" : "proptics\/Prism_.html#overOption(f:A=>B):S=>Option[T]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: (A) => B): (S) => T", "member" : "proptics.Prism_.over", "link" : "proptics\/Prism_.html#over(f:A=>B):S=>T", "kind" : "final def"}, {"label" : "setOption", "tail" : "(b: B): (S) => Option[T]", "member" : "proptics.Prism_.setOption", "link" : "proptics\/Prism_.html#setOption(b:B):S=>Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.Prism_.set", "link" : "proptics\/Prism_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "review", "tail" : "(b: B): T", "member" : "proptics.Prism_.review", "link" : "proptics\/Prism_.html#review(b:B):T", "kind" : "final def"}, {"label" : "preview", "tail" : "(s: S): Option[A]", "member" : "proptics.Prism_.preview", "link" : "proptics\/Prism_.html#preview(s:S):Option[A]", "kind" : "final def"}, {"member" : "proptics.Prism_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Prism_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Prism_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Prism_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Prism_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Prism_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Prism_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Prism_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Prism_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Prism_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Prism_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Prism_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Prism_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Prism_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Prism_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Prism_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Prism_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Prism_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Prism_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Prism_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "viewOrModify", "tail" : "(s: S): Either[T, A]", "member" : "proptics.Prism_.viewOrModify", "link" : "proptics\/Prism_.html#viewOrModify(s:S):Either[T,A]", "kind" : "abstract def"}], "members_object" : [{"label" : "aPrismToPrism", "tail" : "(aPrism: APrism_[S, T, A, B]): Prism_[S, T, A, B]", "member" : "proptics.Prism_.aPrismToPrism", "link" : "proptics\/Prism_$.html#aPrismToPrism[S,T,A,B](aPrism:proptics.APrism_[S,T,A,B]):proptics.Prism_[S,T,A,B]", "kind" : "implicit def"}, {"label" : "id", "tail" : "(): Prism_[S, T, S, T]", "member" : "proptics.Prism_.id", "link" : "proptics\/Prism_$.html#id[S,T]:proptics.Prism_[S,T,S,T]", "kind" : "final def"}, {"label" : "apply", "tail" : "(_viewOrModify: (S) => Either[T, A])(review: (B) => T): Prism_[S, T, A, B]", "member" : "proptics.Prism_.apply", "link" : "proptics\/Prism_$.html#apply[S,T,A,B](_viewOrModify:S=>Either[T,A])(review:B=>T):proptics.Prism_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Prism_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Prism_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Prism_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Prism_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Prism_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Prism_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Prism_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Prism_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Prism_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Prism_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Prism_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Prism_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Prism_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Prism_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Prism_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Prism_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Prism_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Prism_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Prism_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/Prism_.html", "kind" : "class"}, {"name" : "proptics.Review", "shortDescription" : "", "object" : "proptics\/Review$.html", "members_object" : [{"label" : "id", "tail" : "(): Review[S, S]", "member" : "proptics.Review.id", "link" : "proptics\/Review$.html#id[S]:proptics.Review[S,S]", "kind" : "final def"}, {"label" : "apply", "tail" : "(f: (A) => S): Review[S, A]", "member" : "proptics.Review.apply", "link" : "proptics\/Review$.html#apply[S,A](f:A=>S):proptics.Review[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Review$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Review$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Review$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Review$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Review$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Review$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Review$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Review$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Review$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Review$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Review$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Review$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Review$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Review$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Review$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Review$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Review$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Review$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Review$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Review_", "shortDescription" : "A Review_ describes how to construct a single value.", "object" : "proptics\/Review_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: Review_[A, B, C, D]): Review_[S, T, C, D]", "member" : "proptics.Review_.compose", "link" : "proptics\/Review_.html#compose[C,D](other:proptics.Review_[A,B,C,D]):proptics.Review_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Grate_[A, B, C, D]): Review_[S, T, C, D]", "member" : "proptics.Review_.compose", "link" : "proptics\/Review_.html#compose[C,D](other:proptics.Grate_[A,B,C,D]):proptics.Review_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): Review_[S, T, C, D]", "member" : "proptics.Review_.compose", "link" : "proptics\/Review_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.Review_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): Review_[S, T, C, D]", "member" : "proptics.Review_.compose", "link" : "proptics\/Review_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.Review_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): Review_[S, T, C, D]", "member" : "proptics.Review_.compose", "link" : "proptics\/Review_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.Review_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): Review_[S, T, C, D]", "member" : "proptics.Review_.compose", "link" : "proptics\/Review_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.Review_[S,T,C,D]", "kind" : "final def"}, {"label" : "reuse", "tail" : "(ev: State[B, T]): State[B, T]", "member" : "proptics.Review_.reuse", "link" : "proptics\/Review_.html#reuse(implicitev:cats.data.State[B,T]):cats.data.State[B,T]", "kind" : "final def"}, {"label" : "review", "tail" : "(b: B): T", "member" : "proptics.Review_.review", "link" : "proptics\/Review_.html#review(b:B):T", "kind" : "final def"}, {"member" : "proptics.Review_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Review_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Review_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Review_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Review_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Review_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Review_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Review_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Review_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Review_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Review_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Review_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Review_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Review_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Review_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Review_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Review_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Review_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Review_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Review_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "id", "tail" : "(): Review_[S, T, S, T]", "member" : "proptics.Review_.id", "link" : "proptics\/Review_$.html#id[S,T]:proptics.Review_[S,T,S,T]", "kind" : "final def"}, {"label" : "apply", "tail" : "(review: (B) => T): Review_[S, T, A, B]", "member" : "proptics.Review_.apply", "link" : "proptics\/Review_$.html#apply[S,T,A,B](review:B=>T):proptics.Review_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Review_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Review_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Review_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Review_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Review_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Review_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Review_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Review_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Review_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Review_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Review_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Review_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Review_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Review_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Review_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Review_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Review_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Review_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Review_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/Review_.html", "kind" : "class"}, {"name" : "proptics.Setter", "shortDescription" : "", "object" : "proptics\/Setter$.html", "members_object" : [{"label" : "id", "tail" : "(): Setter[S, S]", "member" : "proptics.Setter.id", "link" : "proptics\/Setter$.html#id[S]:proptics.Setter[S,S]", "kind" : "final def"}, {"label" : "fromContravariant", "tail" : "(ev: Contravariant[F]): Setter[F[A], A]", "member" : "proptics.Setter.fromContravariant", "link" : "proptics\/Setter$.html#fromContravariant[F[_],A](implicitev:cats.Contravariant[F]):proptics.Setter[F[A],A]", "kind" : "final def"}, {"label" : "fromFunctor", "tail" : "(ev: Functor[F]): Setter[F[A], A]", "member" : "proptics.Setter.fromFunctor", "link" : "proptics\/Setter$.html#fromFunctor[F[_],A](implicitev:cats.Functor[F]):proptics.Setter[F[A],A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(mapping: ((A) => A) => (S) => S): Setter[S, A]", "member" : "proptics.Setter.apply", "link" : "proptics\/Setter$.html#apply[S,A](mapping:(A=>A)=>(S=>S)):proptics.Setter[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Setter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Setter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Setter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Setter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Setter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Setter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Setter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Setter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Setter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Setter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Setter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Setter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Setter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Setter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Setter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Setter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Setter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Setter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Setter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Setter_", "shortDescription" : "A Setter_ is a generalization of map from cats.Functor", "object" : "proptics\/Setter_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedSetter_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[I,C,D](other:proptics.IndexedSetter_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[I,C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[I,C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[I,C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Grate_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[C,D](other:proptics.Grate_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Setter_.compose", "link" : "proptics\/Setter_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: (A) => B): (S) => T", "member" : "proptics.Setter_.over", "link" : "proptics\/Setter_.html#over(f:A=>B):S=>T", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.Setter_.set", "link" : "proptics\/Setter_.html#set(b:B):S=>T", "kind" : "final def"}, {"member" : "proptics.Setter_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Setter_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Setter_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Setter_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Setter_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Setter_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Setter_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Setter_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Setter_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Setter_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Setter_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Setter_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Setter_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Setter_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Setter_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Setter_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Setter_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Setter_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Setter_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Setter_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "id", "tail" : "(): Setter_[S, T, S, T]", "member" : "proptics.Setter_.id", "link" : "proptics\/Setter_$.html#id[S,T]:proptics.Setter_[S,T,S,T]", "kind" : "final def"}, {"label" : "fromContravariant", "tail" : "(ev: Contravariant[F]): Setter_[F[B], F[A], A, B]", "member" : "proptics.Setter_.fromContravariant", "link" : "proptics\/Setter_$.html#fromContravariant[F[_],A,B](implicitev:cats.Contravariant[F]):proptics.Setter_[F[B],F[A],A,B]", "kind" : "final def"}, {"label" : "fromFunctor", "tail" : "(ev: Functor[F]): Setter_[F[A], F[B], A, B]", "member" : "proptics.Setter_.fromFunctor", "link" : "proptics\/Setter_$.html#fromFunctor[F[_],A,B](implicitev:cats.Functor[F]):proptics.Setter_[F[A],F[B],A,B]", "kind" : "final def"}, {"label" : "apply", "tail" : "(mapping: ((A) => B) => (S) => T): Setter_[S, T, A, B]", "member" : "proptics.Setter_.apply", "link" : "proptics\/Setter_$.html#apply[S,T,A,B](mapping:(A=>B)=>(S=>T)):proptics.Setter_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Setter_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Setter_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Setter_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Setter_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Setter_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Setter_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Setter_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Setter_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Setter_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Setter_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Setter_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Setter_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Setter_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Setter_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Setter_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Setter_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Setter_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Setter_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Setter_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/Setter_.html", "kind" : "class"}, {"name" : "proptics.Traversal", "shortDescription" : "", "object" : "proptics\/Traversal$.html", "members_object" : [{"label" : "partsOf", "tail" : "(traversal: Traversal_[S, T, A, A])(ev0: Sellable[[α$56$, β$57$](α$56$) => β$57$, [β$58$, γ$59$, ε$60$]Bazaar[[α$54$, β$55$](α$54$) => β$55$, β$58$, γ$59$, Unit, ε$60$]]): Lens_[S, T, List[A], List[A]]", "member" : "proptics.Traversal.partsOf", "link" : "proptics\/Traversal$.html#partsOf[S,T,A](traversal:proptics.Traversal_[S,T,A,A])(implicitev0:proptics.internal.Sellable[[α$56$,β$57$]α$56$=>β$57$,[β$58$,γ$59$,ε$60$]proptics.internal.Bazaar[[α$54$,β$55$]α$54$=>β$55$,β$58$,γ$59$,Unit,ε$60$]]):proptics.Lens_[S,T,List[A],List[A]]", "kind" : "final def"}, {"label" : "dropWhile", "tail" : "(predicate: (A) => Boolean)(arg0: Traverse[G]): Traversal[G[A], A]", "member" : "proptics.Traversal.dropWhile", "link" : "proptics\/Traversal$.html#dropWhile[G[_],A](predicate:A=>Boolean)(implicitevidence$19:cats.Traverse[G]):proptics.Traversal[G[A],A]", "kind" : "final def"}, {"label" : "takeWhile", "tail" : "(predicate: (A) => Boolean)(arg0: Traverse[G]): Traversal[G[A], A]", "member" : "proptics.Traversal.takeWhile", "link" : "proptics\/Traversal$.html#takeWhile[G[_],A](predicate:A=>Boolean)(implicitevidence$18:cats.Traverse[G]):proptics.Traversal[G[A],A]", "kind" : "final def"}, {"label" : "drop", "tail" : "(i: Int)(arg0: Traverse[F]): Traversal[F[A], A]", "member" : "proptics.Traversal.drop", "link" : "proptics\/Traversal$.html#drop[F[_],A](i:Int)(implicitevidence$17:cats.Traverse[F]):proptics.Traversal[F[A],A]", "kind" : "final def"}, {"label" : "take", "tail" : "(i: Int)(arg0: Traverse[F]): Traversal[F[A], A]", "member" : "proptics.Traversal.take", "link" : "proptics\/Traversal$.html#take[F[_],A](i:Int)(implicitevidence$16:cats.Traverse[F]):proptics.Traversal[F[A],A]", "kind" : "final def"}, {"label" : "elementAt", "tail" : "(i: Int)(arg0: Traverse[F]): Traversal[F[A], A]", "member" : "proptics.Traversal.elementAt", "link" : "proptics\/Traversal$.html#elementAt[F[_],A](i:Int)(implicitevidence$15:cats.Traverse[F]):proptics.Traversal[F[A],A]", "kind" : "final def"}, {"label" : "id", "tail" : "(): Traversal[S, S]", "member" : "proptics.Traversal.id", "link" : "proptics\/Traversal$.html#id[S]:proptics.Traversal[S,S]", "kind" : "final def"}, {"label" : "wander", "tail" : "(lensLike: LensLike[S, S, A, A]): Traversal[S, A]", "member" : "proptics.Traversal.wander", "link" : "proptics\/Traversal$.html#wander[S,A](lensLike:proptics.rank2types.LensLike[S,S,A,A]):proptics.Traversal[S,A]", "kind" : "final def"}, {"label" : "both", "tail" : "(arg0: Bitraverse[G]): Traversal[G[A, A], A]", "member" : "proptics.Traversal.both", "link" : "proptics\/Traversal$.html#both[G[_,_],A](implicitevidence$14:cats.Bitraverse[G]):proptics.Traversal[G[A,A],A]", "kind" : "final def"}, {"label" : "fromBazaar", "tail" : "(bazaar: Bazaar[[α$52$, β$53$](α$52$) => β$53$, A, A, S, S]): Traversal[S, A]", "member" : "proptics.Traversal.fromBazaar", "link" : "proptics\/Traversal$.html#fromBazaar[S,A](bazaar:proptics.internal.Bazaar[[α$52$,β$53$]α$52$=>β$53$,A,A,S,S]):proptics.Traversal[S,A]", "kind" : "final def"}, {"label" : "fromTraverse", "tail" : "(arg0: Traverse[F]): Traversal[F[A], A]", "member" : "proptics.Traversal.fromTraverse", "link" : "proptics\/Traversal$.html#fromTraverse[F[_],A](implicitevidence$13:cats.Traverse[F]):proptics.Traversal[F[A],A]", "kind" : "final def"}, {"label" : "filter", "tail" : "(fold: Fold[A, B]): Traversal[A, A]", "member" : "proptics.Traversal.filter", "link" : "proptics\/Traversal$.html#filter[A,B](fold:proptics.Fold[A,B]):proptics.Traversal[A,A]", "kind" : "final def"}, {"label" : "filter", "tail" : "(predicate: (A) => Boolean): Traversal[A, A]", "member" : "proptics.Traversal.filter", "link" : "proptics\/Traversal$.html#filter[A](predicate:A=>Boolean):proptics.Traversal[A,A]", "kind" : "final def"}, {"label" : "traversal", "tail" : "(to: (S) => (A, (A) => S)): Traversal[S, A]", "member" : "proptics.Traversal.traversal", "link" : "proptics\/Traversal$.html#traversal[S,A](to:S=>(A,A=>S)):proptics.Traversal[S,A]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => A)(set: (S) => (A) => S): Traversal[S, A]", "member" : "proptics.Traversal.apply", "link" : "proptics\/Traversal$.html#apply[S,A](get:S=>A)(set:S=>(A=>S)):proptics.Traversal[S,A]", "kind" : "final def"}, {"label" : "fromTraversal", "tail" : "(lensLikeTraversal: Rank2TypeTraversalLike[S, S, A, A]): Traversal[S, A]", "member" : "proptics.Traversal.fromTraversal", "link" : "proptics\/Traversal$.html#fromTraversal[S,A](lensLikeTraversal:proptics.rank2types.Rank2TypeTraversalLike[S,S,A,A]):proptics.Traversal[S,A]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Traversal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Traversal$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Traversal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Traversal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Traversal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Traversal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Traversal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Traversal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Traversal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Traversal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Traversal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Traversal$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Traversal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Traversal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Traversal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Traversal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Traversal2", "shortDescription" : "", "object" : "proptics\/Traversal2$.html", "members_object" : [{"label" : "apply", "tail" : "(view1: (S) => A, view2: (S) => A)(set: (B, B, S) => T): Traversal_[S, T, A, B]", "member" : "proptics.Traversal2.apply", "link" : "proptics\/Traversal2$.html#apply[S,T,A,B](view1:S=>A,view2:S=>A)(set:(B,B,S)=>T):proptics.Traversal_[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Traversal2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Traversal2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Traversal2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Traversal2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Traversal2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Traversal2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Traversal2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal2$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Traversal2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Traversal2$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Traversal2$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Traversal2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Traversal2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Traversal2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Traversal2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Traversal2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Traversal2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Traversal3", "shortDescription" : "", "object" : "proptics\/Traversal3$.html", "members_object" : [{"label" : "apply", "tail" : "(view1: (S) => A, view2: (S) => A, view3: (S) => A)(set: (B, B, B, S) => T): Traversal_[S, T, A, B]", "member" : "proptics.Traversal3.apply", "link" : "proptics\/Traversal3$.html#apply[S,T,A,B](view1:S=>A,view2:S=>A,view3:S=>A)(set:(B,B,B,S)=>T):proptics.Traversal_[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Traversal3$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Traversal3$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Traversal3$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Traversal3$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Traversal3$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Traversal3$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Traversal3$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal3$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal3$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal3$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Traversal3$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Traversal3$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Traversal3$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Traversal3$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Traversal3$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Traversal3$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Traversal3$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Traversal3$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Traversal3$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Traversal4", "shortDescription" : "", "object" : "proptics\/Traversal4$.html", "members_object" : [{"label" : "apply", "tail" : "(view1: (S) => A, view2: (S) => A, view3: (S) => A, view4: (S) => A)(set: (B, B, B, B, S) => T): Traversal_[S, T, A, B]", "member" : "proptics.Traversal4.apply", "link" : "proptics\/Traversal4$.html#apply[S,T,A,B](view1:S=>A,view2:S=>A,view3:S=>A,view4:S=>A)(set:(B,B,B,B,S)=>T):proptics.Traversal_[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Traversal4$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Traversal4$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Traversal4$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Traversal4$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Traversal4$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Traversal4$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Traversal4$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal4$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal4$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal4$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Traversal4$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Traversal4$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Traversal4$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Traversal4$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Traversal4$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Traversal4$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Traversal4$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Traversal4$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Traversal4$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Traversal5", "shortDescription" : "", "object" : "proptics\/Traversal5$.html", "members_object" : [{"label" : "apply", "tail" : "(view1: (S) => A, view2: (S) => A, view3: (S) => A, view4: (S) => A, view5: (S) => A)(set: (B, B, B, B, B, S) => T): Traversal_[S, T, A, B]", "member" : "proptics.Traversal5.apply", "link" : "proptics\/Traversal5$.html#apply[S,T,A,B](view1:S=>A,view2:S=>A,view3:S=>A,view4:S=>A,view5:S=>A)(set:(B,B,B,B,B,S)=>T):proptics.Traversal_[S,T,A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Traversal5$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Traversal5$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Traversal5$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Traversal5$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Traversal5$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Traversal5$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Traversal5$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal5$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal5$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal5$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Traversal5$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Traversal5$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Traversal5$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Traversal5$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Traversal5$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Traversal5$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Traversal5$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Traversal5$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Traversal5$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "proptics.Traversal_", "shortDescription" : "A Traversal_ is an optic that focuses on zero or more values", "object" : "proptics\/Traversal_$.html", "members_class" : [{"label" : "compose", "tail" : "(other: IndexedFold_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[I,C,D](other:proptics.IndexedFold_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedGetter_[I, A, B, C, D]): IndexedFold_[I, S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[I,C,D](other:proptics.IndexedGetter_[I,A,B,C,D]):proptics.IndexedFold_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedSetter_[I, A, B, C, D]): IndexedSetter_[I, S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[I,C,D](other:proptics.IndexedSetter_[I,A,B,C,D]):proptics.IndexedSetter_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedTraversal_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[I,C,D](other:proptics.IndexedTraversal_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIndexedLens_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[I,C,D](other:proptics.AnIndexedLens_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: IndexedLens_[I, A, B, C, D]): IndexedTraversal_[I, S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[I,C,D](other:proptics.IndexedLens_[I,A,B,C,D]):proptics.IndexedTraversal_[I,S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Fold_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[C,D](other:proptics.Fold_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Getter_[A, B, C, D]): Fold_[S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[C,D](other:proptics.Getter_[A,B,C,D]):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Setter_[A, B, C, D]): Setter_[S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[C,D](other:proptics.Setter_[A,B,C,D]):proptics.Setter_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ATraversal_[A, B, C, D]): ATraversal_[S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[C,D](other:proptics.ATraversal_[A,B,C,D]):proptics.ATraversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Traversal_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[C,D](other:proptics.Traversal_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnAffineTraversal_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[C,D](other:proptics.AnAffineTraversal_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AffineTraversal_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[C,D](other:proptics.AffineTraversal_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: APrism_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[C,D](other:proptics.APrism_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Prism_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[C,D](other:proptics.Prism_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: ALens_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[C,D](other:proptics.ALens_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Lens_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[C,D](other:proptics.Lens_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: AnIso_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[C,D](other:proptics.AnIso_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "compose", "tail" : "(other: Iso_[A, B, C, D]): Traversal_[S, T, C, D]", "member" : "proptics.Traversal_.compose", "link" : "proptics\/Traversal_.html#compose[C,D](other:proptics.Iso_[A,B,C,D]):proptics.Traversal_[S,T,C,D]", "kind" : "final def"}, {"label" : "unsafePartsOf", "tail" : "(ev0: Sellable[[α$24$, β$25$](α$24$) => β$25$, [β$26$, γ$27$, ε$28$]Bazaar[[α$22$, β$23$](α$22$) => β$23$, β$26$, γ$27$, Unit, ε$28$]], ev1: Aux[[α$29$, β$30$](α$29$) => β$30$, [β$31$]IndexedStateT[Eval, List[B], List[B], β$31$]]): Lens_[S, T, List[A], List[B]]", "member" : "proptics.Traversal_.unsafePartsOf", "link" : "proptics\/Traversal_.html#unsafePartsOf(implicitev0:proptics.internal.Sellable[[α$24$,β$25$]α$24$=>β$25$,[β$26$,γ$27$,ε$28$]proptics.internal.Bazaar[[α$22$,β$23$]α$22$=>β$23$,β$26$,γ$27$,Unit,ε$28$]],implicitev1:proptics.profunctor.Corepresentable.Aux[[α$29$,β$30$]α$29$=>β$30$,[β$31$]cats.data.IndexedStateT[cats.Eval,List[B],List[B],β$31$]]):proptics.Lens_[S,T,List[A],List[B]]", "kind" : "final def"}, {"label" : "to", "tail" : "(f: (A) => C): Fold_[S, T, C, D]", "member" : "proptics.Traversal_.to", "link" : "proptics\/Traversal_.html#to[C,D](f:A=>C):proptics.Fold_[S,T,C,D]", "kind" : "final def"}, {"label" : "asFold", "tail" : "(): Fold_[S, T, A, B]", "member" : "proptics.Traversal_.asFold", "link" : "proptics\/Traversal_.html#asFold:proptics.Fold_[S,T,A,B]", "kind" : "final def"}, {"label" : "asIndexableTraversal", "tail" : "(ev0: Applicative[[β$19$]IndexedStateT[Eval, Int, Int, β$19$]]): IndexedTraversal_[Int, S, T, A, B]", "member" : "proptics.Traversal_.asIndexableTraversal", "link" : "proptics\/Traversal_.html#asIndexableTraversal(implicitev0:cats.Applicative[[β$19$]cats.data.IndexedStateT[cats.Eval,Int,Int,β$19$]]):proptics.IndexedTraversal_[Int,S,T,A,B]", "kind" : "final def"}, {"label" : "asATraversal", "tail" : "(): ATraversal_[S, T, A, B]", "member" : "proptics.Traversal_.asATraversal", "link" : "proptics\/Traversal_.html#asATraversal:proptics.ATraversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "toBazaar", "tail" : "(): Bazaar[[α$9$, β$10$](α$9$) => β$10$, A, B, S, T]", "member" : "proptics.Traversal_.toBazaar", "link" : "proptics\/Traversal_.html#toBazaar:proptics.internal.Bazaar[[α$9$,β$10$]α$9$=>β$10$,A,B,S,T]", "kind" : "final def"}, {"label" : "use", "tail" : "(ev: State[S, A]): State[S, List[A]]", "member" : "proptics.Traversal_.use", "link" : "proptics\/Traversal_.html#use(implicitev:cats.data.State[S,A]):cats.data.State[S,List[A]]", "kind" : "final def"}, {"label" : "toList", "tail" : "(s: S): List[A]", "member" : "proptics.Traversal_.toList", "link" : "proptics\/Traversal_.html#toList(s:S):List[A]", "kind" : "final def"}, {"label" : "toArray", "tail" : "(s: S)(arg0: ClassTag[AA]): Array[AA]", "member" : "proptics.Traversal_.toArray", "link" : "proptics\/Traversal_.html#toArray[AA>:A](s:S)(implicitevidence$6:scala.reflect.ClassTag[AA]):Array[AA]", "kind" : "final def"}, {"label" : "maximum", "tail" : "(s: S)(ev: Order[A]): Option[A]", "member" : "proptics.Traversal_.maximum", "link" : "proptics\/Traversal_.html#maximum(s:S)(implicitev:cats.Order[A]):Option[A]", "kind" : "final def"}, {"label" : "minimum", "tail" : "(s: S)(ev: Order[A]): Option[A]", "member" : "proptics.Traversal_.minimum", "link" : "proptics\/Traversal_.html#minimum(s:S)(implicitev:cats.Order[A]):Option[A]", "kind" : "final def"}, {"label" : "last", "tail" : "(s: S): Option[A]", "member" : "proptics.Traversal_.last", "link" : "proptics\/Traversal_.html#last(s:S):Option[A]", "kind" : "final def"}, {"label" : "first", "tail" : "(s: S): Option[A]", "member" : "proptics.Traversal_.first", "link" : "proptics\/Traversal_.html#first(s:S):Option[A]", "kind" : "final def"}, {"label" : "find", "tail" : "(f: (A) => Boolean): (S) => Option[A]", "member" : "proptics.Traversal_.find", "link" : "proptics\/Traversal_.html#find(f:A=>Boolean):S=>Option[A]", "kind" : "final def"}, {"label" : "length", "tail" : "(s: S): Int", "member" : "proptics.Traversal_.length", "link" : "proptics\/Traversal_.html#length(s:S):Int", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.Traversal_.nonEmpty", "link" : "proptics\/Traversal_.html#nonEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "isEmpty", "tail" : "(s: S): Boolean", "member" : "proptics.Traversal_.isEmpty", "link" : "proptics\/Traversal_.html#isEmpty(s:S):Boolean", "kind" : "final def"}, {"label" : "notContains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.Traversal_.notContains", "link" : "proptics\/Traversal_.html#notContains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "contains", "tail" : "(a: A)(s: S)(ev: Eq[A]): Boolean", "member" : "proptics.Traversal_.contains", "link" : "proptics\/Traversal_.html#contains(a:A)(s:S)(implicitev:cats.Eq[A]):Boolean", "kind" : "final def"}, {"label" : "notExists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Traversal_.notExists", "link" : "proptics\/Traversal_.html#notExists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "exists", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Traversal_.exists", "link" : "proptics\/Traversal_.html#exists(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "any", "tail" : "(s: S)(f: (A) => R)(arg0: Heyting[R]): R", "member" : "proptics.Traversal_.any", "link" : "proptics\/Traversal_.html#any[R](s:S)(f:A=>R)(implicitevidence$5:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "or", "tail" : "(s: S)(ev: Heyting[A]): A", "member" : "proptics.Traversal_.or", "link" : "proptics\/Traversal_.html#or(s:S)(implicitev:spire.algebra.lattice.Heyting[A]):A", "kind" : "final def"}, {"label" : "and", "tail" : "(s: S)(ev: Heyting[A]): A", "member" : "proptics.Traversal_.and", "link" : "proptics\/Traversal_.html#and(s:S)(implicitev:spire.algebra.lattice.Heyting[A]):A", "kind" : "final def"}, {"label" : "forall", "tail" : "(s: S)(f: (A) => R)(arg0: Heyting[R]): R", "member" : "proptics.Traversal_.forall", "link" : "proptics\/Traversal_.html#forall[R](s:S)(f:A=>R)(implicitevidence$4:spire.algebra.lattice.Heyting[R]):R", "kind" : "final def"}, {"label" : "forall", "tail" : "(f: (A) => Boolean): (S) => Boolean", "member" : "proptics.Traversal_.forall", "link" : "proptics\/Traversal_.html#forall(f:A=>Boolean):S=>Boolean", "kind" : "final def"}, {"label" : "product", "tail" : "(s: S)(ev: MultiplicativeMonoid[A]): A", "member" : "proptics.Traversal_.product", "link" : "proptics\/Traversal_.html#product(s:S)(implicitev:spire.algebra.MultiplicativeMonoid[A]):A", "kind" : "final def"}, {"label" : "sum", "tail" : "(s: S)(ev: Semiring[A]): A", "member" : "proptics.Traversal_.sum", "link" : "proptics\/Traversal_.html#sum(s:S)(implicitev:spire.algebra.Semiring[A]):A", "kind" : "final def"}, {"label" : "traverse_", "tail" : "(s: S)(f: (A) => F[R])(ev: Applicative[F]): F[Unit]", "member" : "proptics.Traversal_.traverse_", "link" : "proptics\/Traversal_.html#traverse_[F[_],R](s:S)(f:A=>F[R])(implicitev:cats.Applicative[F]):F[Unit]", "kind" : "final def"}, {"label" : "sequence_", "tail" : "(s: S)(ev: Applicative[F]): F[Unit]", "member" : "proptics.Traversal_.sequence_", "link" : "proptics\/Traversal_.html#sequence_[F[_]](s:S)(implicitev:cats.Applicative[F]):F[Unit]", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(s: S)(r: R)(f: (R, A) => R): R", "member" : "proptics.Traversal_.foldLeft", "link" : "proptics\/Traversal_.html#foldLeft[R](s:S)(r:R)(f:(R,A)=>R):R", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(s: S)(r: R)(f: (A, R) => R): R", "member" : "proptics.Traversal_.foldRight", "link" : "proptics\/Traversal_.html#foldRight[R](s:S)(r:R)(f:(A,R)=>R):R", "kind" : "final def"}, {"label" : "fold", "tail" : "(s: S)(ev: Monoid[A]): A", "member" : "proptics.Traversal_.fold", "link" : "proptics\/Traversal_.html#fold(s:S)(implicitev:cats.Monoid[A]):A", "kind" : "final def"}, {"label" : "foldMap", "tail" : "(s: S)(f: (A) => R)(arg0: Monoid[R]): R", "member" : "proptics.Traversal_.foldMap", "link" : "proptics\/Traversal_.html#foldMap[R](s:S)(f:A=>R)(implicitevidence$3:cats.Monoid[R]):R", "kind" : "final def"}, {"label" : "traverse", "tail" : "(s: S)(f: (A) => F[B])(arg0: Applicative[F]): F[T]", "member" : "proptics.Traversal_.traverse", "link" : "proptics\/Traversal_.html#traverse[F[_]](s:S)(f:A=>F[B])(implicitevidence$2:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "overF", "tail" : "(f: (A) => F[B])(s: S)(arg0: Applicative[F]): F[T]", "member" : "proptics.Traversal_.overF", "link" : "proptics\/Traversal_.html#overF[F[_]](f:A=>F[B])(s:S)(implicitevidence$1:cats.Applicative[F]):F[T]", "kind" : "final def"}, {"label" : "over", "tail" : "(f: (A) => B): (S) => T", "member" : "proptics.Traversal_.over", "link" : "proptics\/Traversal_.html#over(f:A=>B):S=>T", "kind" : "final def"}, {"label" : "set", "tail" : "(b: B): (S) => T", "member" : "proptics.Traversal_.set", "link" : "proptics\/Traversal_.html#set(b:B):S=>T", "kind" : "final def"}, {"label" : "preview", "tail" : "(s: S): Option[A]", "member" : "proptics.Traversal_.preview", "link" : "proptics\/Traversal_.html#preview(s:S):Option[A]", "kind" : "final def"}, {"label" : "viewAll", "tail" : "(s: S): List[A]", "member" : "proptics.Traversal_.viewAll", "link" : "proptics\/Traversal_.html#viewAll(s:S):List[A]", "kind" : "final def"}, {"label" : "view", "tail" : "(s: S)(ev: Monoid[A]): A", "member" : "proptics.Traversal_.view", "link" : "proptics\/Traversal_.html#view(s:S)(implicitev:cats.Monoid[A]):A", "kind" : "final def"}, {"member" : "proptics.Traversal_#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Traversal_.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Traversal_.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Traversal_.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Traversal_.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Traversal_.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Traversal_.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Traversal_.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal_.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal_.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal_.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Traversal_.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Traversal_.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Traversal_.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Traversal_.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Traversal_.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Traversal_.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Traversal_.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Traversal_.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Traversal_.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unsafePartsOf", "tail" : "(traversal: Traversal_[S, T, A, B])(ev0: Sellable[[α$44$, β$45$](α$44$) => β$45$, [β$46$, γ$47$, ε$48$]Bazaar[[α$42$, β$43$](α$42$) => β$43$, β$46$, γ$47$, Unit, ε$48$]], ev2: Aux[[α$49$, β$50$](α$49$) => β$50$, [β$51$]IndexedStateT[Eval, List[B], List[B], β$51$]]): Lens_[S, T, List[A], List[B]]", "member" : "proptics.Traversal_.unsafePartsOf", "link" : "proptics\/Traversal_$.html#unsafePartsOf[S,T,A,B](traversal:proptics.Traversal_[S,T,A,B])(implicitev0:proptics.internal.Sellable[[α$44$,β$45$]α$44$=>β$45$,[β$46$,γ$47$,ε$48$]proptics.internal.Bazaar[[α$42$,β$43$]α$42$=>β$43$,β$46$,γ$47$,Unit,ε$48$]],implicitev2:proptics.profunctor.Corepresentable.Aux[[α$49$,β$50$]α$49$=>β$50$,[β$51$]cats.data.IndexedStateT[cats.Eval,List[B],List[B],β$51$]]):proptics.Lens_[S,T,List[A],List[B]]", "kind" : "final def"}, {"label" : "id", "tail" : "(): Traversal_[S, T, S, T]", "member" : "proptics.Traversal_.id", "link" : "proptics\/Traversal_$.html#id[S,T]:proptics.Traversal_[S,T,S,T]", "kind" : "final def"}, {"label" : "wander", "tail" : "(lensLike: LensLike[S, T, A, B]): Traversal_[S, T, A, B]", "member" : "proptics.Traversal_.wander", "link" : "proptics\/Traversal_$.html#wander[S,T,A,B](lensLike:proptics.rank2types.LensLike[S,T,A,B]):proptics.Traversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "both", "tail" : "(arg0: Bitraverse[G]): Traversal_[G[A, A], G[B, B], A, B]", "member" : "proptics.Traversal_.both", "link" : "proptics\/Traversal_$.html#both[G[_,_],A,B](implicitevidence$12:cats.Bitraverse[G]):proptics.Traversal_[G[A,A],G[B,B],A,B]", "kind" : "final def"}, {"label" : "fromBazaar", "tail" : "(bazaar: Bazaar[[α$40$, β$41$](α$40$) => β$41$, A, B, S, T]): Traversal_[S, T, A, B]", "member" : "proptics.Traversal_.fromBazaar", "link" : "proptics\/Traversal_$.html#fromBazaar[S,T,A,B](bazaar:proptics.internal.Bazaar[[α$40$,β$41$]α$40$=>β$41$,A,B,S,T]):proptics.Traversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "fromTraverse", "tail" : "(ev0: Traverse[G]): Traversal_[G[A], G[B], A, B]", "member" : "proptics.Traversal_.fromTraverse", "link" : "proptics\/Traversal_$.html#fromTraverse[G[_],A,B](implicitev0:cats.Traverse[G]):proptics.Traversal_[G[A],G[B],A,B]", "kind" : "final def"}, {"label" : "filter", "tail" : "(predicate: (A) => Boolean): Traversal_[A, A, A, A]", "member" : "proptics.Traversal_.filter", "link" : "proptics\/Traversal_$.html#filter[A](predicate:A=>Boolean):proptics.Traversal_[A,A,A,A]", "kind" : "final def"}, {"label" : "traversal", "tail" : "(to: (S) => (A, (B) => T)): Traversal_[S, T, A, B]", "member" : "proptics.Traversal_.traversal", "link" : "proptics\/Traversal_$.html#traversal[S,T,A,B](to:S=>(A,B=>T)):proptics.Traversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "apply", "tail" : "(get: (S) => A)(_set: (S) => (B) => T): Traversal_[S, T, A, B]", "member" : "proptics.Traversal_.apply", "link" : "proptics\/Traversal_$.html#apply[S,T,A,B](get:S=>A)(_set:S=>(B=>T)):proptics.Traversal_[S,T,A,B]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/Traversal_$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/Traversal_$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/Traversal_$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/Traversal_$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/Traversal_$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/Traversal_$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/Traversal_$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal_$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal_$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/Traversal_$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/Traversal_$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/Traversal_$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/Traversal_$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/Traversal_$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/Traversal_$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/Traversal_$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/Traversal_$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/Traversal_$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/Traversal_$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "proptics\/Traversal_.html", "kind" : "class"}], "proptics.law.discipline" : [{"name" : "proptics.law.discipline.AffineTraversalTests", "object" : "proptics\/law\/discipline\/AffineTraversalTests$.html", "members_object" : [{"label" : "apply", "tail" : "(f: (I) => AffineTraversal[S, A]): AffineTraversalTests[S, I, A]", "member" : "proptics.law.discipline.AffineTraversalTests.apply", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#apply[S,I,A](f:I=>proptics.AffineTraversal[S,A]):proptics.law.discipline.AffineTraversalTests[S,I,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(_affineTraversal: AffineTraversal[S, A]): AffineTraversalTests[S, Unit, A]", "member" : "proptics.law.discipline.AffineTraversalTests.apply", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#apply[S,A](_affineTraversal:proptics.AffineTraversal[S,A]):proptics.law.discipline.AffineTraversalTests[S,Unit,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/AffineTraversalTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/AffineTraversalTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "affineTraversal", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbI: Arbitrary[I], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.AffineTraversalTests.affineTraversal", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#affineTraversal(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbI:org.scalacheck.Arbitrary[I],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A]):AffineTraversalTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(i: I): AffineTraversalLaws[S, A]", "member" : "proptics.law.discipline.AffineTraversalTests.laws", "link" : "proptics\/law\/discipline\/AffineTraversalTests.html#laws(i:I):proptics.law.AffineTraversalLaws[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.ALensTests", "object" : "proptics\/law\/discipline\/ALensTests$.html", "members_object" : [{"label" : "apply", "tail" : "(_aLens: ALens[S, A]): ALensTests[S, A]", "member" : "proptics.law.discipline.ALensTests.apply", "link" : "proptics\/law\/discipline\/ALensTests$.html#apply[S,A](_aLens:proptics.ALens[S,A]):proptics.law.discipline.ALensTests[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/ALensTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/ALensTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/ALensTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/ALensTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/ALensTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/ALensTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/ALensTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ALensTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ALensTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ALensTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/ALensTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/ALensTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/ALensTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/ALensTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/ALensTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/ALensTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/ALensTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/ALensTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/ALensTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/ALensTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/ALensTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/ALensTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/ALensTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/ALensTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "aLens", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.ALensTests.aLens", "link" : "proptics\/law\/discipline\/ALensTests.html#aLens(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A]):ALensTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/ALensTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/ALensTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/ALensTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/ALensTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/ALensTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/ALensTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/ALensTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/ALensTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ALensTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ALensTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ALensTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/ALensTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/ALensTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/ALensTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/ALensTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/ALensTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/ALensTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/ALensTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/ALensTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/ALensTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): ALensLaws[S, A]", "member" : "proptics.law.discipline.ALensTests.laws", "link" : "proptics\/law\/discipline\/ALensTests.html#laws:proptics.law.ALensLaws[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.AnAffineTraversalTests", "object" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html", "members_object" : [{"label" : "apply", "tail" : "(_anAffineTraversal: AnAffineTraversal[S, A]): AnAffineTraversalTests[S, A]", "member" : "proptics.law.discipline.AnAffineTraversalTests.apply", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#apply[S,A](_anAffineTraversal:proptics.AnAffineTraversal[S,A]):proptics.law.discipline.AnAffineTraversalTests[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/AnAffineTraversalTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "anAffineTraversal", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.AnAffineTraversalTests.anAffineTraversal", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#anAffineTraversal(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A]):AnAffineTraversalTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): AnAffineTraversalLaws[S, A]", "member" : "proptics.law.discipline.AnAffineTraversalTests.laws", "link" : "proptics\/law\/discipline\/AnAffineTraversalTests.html#laws:proptics.law.AnAffineTraversalLaws[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.AnIndexedLensTests", "object" : "proptics\/law\/discipline\/AnIndexedLensTests$.html", "members_object" : [{"label" : "apply", "tail" : "(_anIndexedLens: AnIndexedLens[I, S, A]): AnIndexedLensTests[I, S, A]", "member" : "proptics.law.discipline.AnIndexedLensTests.apply", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#apply[I,S,A](_anIndexedLens:proptics.AnIndexedLens[I,S,A]):proptics.law.discipline.AnIndexedLensTests[I,S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/AnIndexedLensTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/AnIndexedLensTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "anIndexedLens", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A], arbIAA: Arbitrary[(A, I) => A]): RuleSet", "member" : "proptics.law.discipline.AnIndexedLensTests.anIndexedLens", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#anIndexedLens(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A],implicitarbIAA:org.scalacheck.Arbitrary[(A,I)=>A]):AnIndexedLensTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): AnIndexedLensLaws[I, S, A]", "member" : "proptics.law.discipline.AnIndexedLensTests.laws", "link" : "proptics\/law\/discipline\/AnIndexedLensTests.html#laws:proptics.law.AnIndexedLensLaws[I,S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.AnIsoTests", "object" : "proptics\/law\/discipline\/AnIsoTests$.html", "members_object" : [{"label" : "apply", "tail" : "(_anIso: AnIso[S, A]): AnIsoTests[S, A]", "member" : "proptics.law.discipline.AnIsoTests.apply", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#apply[S,A](_anIso:proptics.AnIso[S,A]):proptics.law.discipline.AnIsoTests[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/AnIsoTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/AnIsoTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/AnIsoTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/AnIsoTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/AnIsoTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/AnIsoTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/AnIsoTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "anIso", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.AnIsoTests.anIso", "link" : "proptics\/law\/discipline\/AnIsoTests.html#anIso(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A]):AnIsoTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/AnIsoTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/AnIsoTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/AnIsoTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/AnIsoTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/AnIsoTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/AnIsoTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/AnIsoTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/AnIsoTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnIsoTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnIsoTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AnIsoTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/AnIsoTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/AnIsoTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/AnIsoTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/AnIsoTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/AnIsoTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/AnIsoTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/AnIsoTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/AnIsoTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/AnIsoTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): AnIsoLaws[S, A]", "member" : "proptics.law.discipline.AnIsoTests.laws", "link" : "proptics\/law\/discipline\/AnIsoTests.html#laws:proptics.law.AnIsoLaws[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.APrismTests", "object" : "proptics\/law\/discipline\/APrismTests$.html", "members_object" : [{"label" : "apply", "tail" : "(_aPrism: APrism[S, A]): APrismTests[S, A]", "member" : "proptics.law.discipline.APrismTests.apply", "link" : "proptics\/law\/discipline\/APrismTests$.html#apply[S,A](_aPrism:proptics.APrism[S,A]):proptics.law.discipline.APrismTests[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/APrismTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/APrismTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/APrismTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/APrismTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/APrismTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/APrismTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/APrismTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/APrismTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/APrismTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/APrismTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/APrismTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/APrismTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/APrismTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/APrismTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/APrismTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/APrismTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/APrismTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/APrismTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/APrismTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/APrismTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/APrismTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/APrismTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/APrismTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/APrismTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "aPrism", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.APrismTests.aPrism", "link" : "proptics\/law\/discipline\/APrismTests.html#aPrism(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A]):APrismTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/APrismTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/APrismTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/APrismTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/APrismTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/APrismTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/APrismTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/APrismTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/APrismTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/APrismTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/APrismTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/APrismTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/APrismTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/APrismTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/APrismTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/APrismTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/APrismTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/APrismTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/APrismTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/APrismTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/APrismTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): APrismLaws[S, A]", "member" : "proptics.law.discipline.APrismTests.laws", "link" : "proptics\/law\/discipline\/APrismTests.html#laws:proptics.law.APrismLaws[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.ATraversalTests", "object" : "proptics\/law\/discipline\/ATraversalTests$.html", "members_object" : [{"label" : "apply", "tail" : "(_aTraversal: ATraversal[S, A]): ATraversalTests[S, A]", "member" : "proptics.law.discipline.ATraversalTests.apply", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#apply[S,A](_aTraversal:proptics.ATraversal[S,A]):proptics.law.discipline.ATraversalTests[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/ATraversalTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/ATraversalTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/ATraversalTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/ATraversalTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/ATraversalTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/ATraversalTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/ATraversalTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "aTraversal", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.ATraversalTests.aTraversal", "link" : "proptics\/law\/discipline\/ATraversalTests.html#aTraversal(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A]):ATraversalTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/ATraversalTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/ATraversalTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/ATraversalTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/ATraversalTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/ATraversalTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/ATraversalTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/ATraversalTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/ATraversalTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ATraversalTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ATraversalTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ATraversalTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/ATraversalTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/ATraversalTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/ATraversalTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/ATraversalTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/ATraversalTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/ATraversalTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/ATraversalTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/ATraversalTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/ATraversalTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): ATraversalLaws[S, A]", "member" : "proptics.law.discipline.ATraversalTests.laws", "link" : "proptics\/law\/discipline\/ATraversalTests.html#laws:proptics.law.ATraversalLaws[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.AtTests", "object" : "proptics\/law\/discipline\/AtTests$.html", "members_object" : [{"label" : "apply", "tail" : "(): AtTests[S, I, A]", "member" : "proptics.law.discipline.AtTests.apply", "link" : "proptics\/law\/discipline\/AtTests$.html#apply[S,I,A]:proptics.law.discipline.AtTests[S,I,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/AtTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/AtTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/AtTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/AtTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/AtTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/AtTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/AtTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AtTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AtTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AtTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/AtTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/AtTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/AtTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/AtTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/AtTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/AtTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/AtTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/AtTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/AtTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/AtTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/AtTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/AtTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/AtTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/AtTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "at", "tail" : "(ev: At[S, I, A], eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbI: Arbitrary[I], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A], arbOp: Arbitrary[(Option[A]) => Option[A]]): RuleSet", "member" : "proptics.law.discipline.AtTests.at", "link" : "proptics\/law\/discipline\/AtTests.html#at(implicitev:proptics.typeclass.At[S,I,A],impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbI:org.scalacheck.Arbitrary[I],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A],implicitarbOp:org.scalacheck.Arbitrary[Option[A]=>Option[A]]):AtTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/AtTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/AtTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/AtTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/AtTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/AtTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/AtTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/AtTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/AtTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AtTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AtTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/AtTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/AtTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/AtTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/AtTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/AtTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/AtTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/AtTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/AtTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/AtTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/AtTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.ChoiceTests", "object" : "proptics\/law\/discipline\/ChoiceTests$.html", "members_object" : [{"label" : "apply", "tail" : "(arg0: Choice[F]): ChoiceTests[F]", "member" : "proptics.law.discipline.ChoiceTests.apply", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#apply[F[_,_]](implicitevidence$7:proptics.profunctor.Choice[F]):proptics.law.discipline.ChoiceTests[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/ChoiceTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/ChoiceTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/ChoiceTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/ChoiceTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/ChoiceTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/ChoiceTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/ChoiceTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "choice", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], arg3: Arbitrary[D], arg4: Arbitrary[E], arg5: Arbitrary[G], ArbFAB: Arbitrary[F[A, B]], ArbFCD: Arbitrary[F[C, D]], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], CogenD: Cogen[D], CogenE: Cogen[E], EqFAB: Eq[F[A, B]], EqFAD: Eq[F[A, D]], EqFAG: Eq[F[A, G]], EqFEitherABC: Eq[F[A, Either[B, C]]], EqFEitherACB: Eq[F[A, Either[C, B]]], LEqFEitherABC: Eq[F[Either[C, A], Either[C, B]]], REqFEitherABC: Eq[F[Either[A, C], Either[B, C]]], EitherAssociationACB: Eq[F[Either[Either[A, C], B], Either[Either[B, C], B]]], EitherAssociationBCA: Eq[F[Either[B, Either[C, A]], Either[B, Either[C, B]]]]): RuleSet", "member" : "proptics.law.discipline.ChoiceTests.choice", "link" : "proptics\/law\/discipline\/ChoiceTests.html#choice[A,B,C,D,E,G](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitevidence$4:org.scalacheck.Arbitrary[D],implicitevidence$5:org.scalacheck.Arbitrary[E],implicitevidence$6:org.scalacheck.Arbitrary[G],implicitArbFAB:org.scalacheck.Arbitrary[F[A,B]],implicitArbFCD:org.scalacheck.Arbitrary[F[C,D]],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitCogenD:org.scalacheck.Cogen[D],implicitCogenE:org.scalacheck.Cogen[E],implicitEqFAB:cats.Eq[F[A,B]],implicitEqFAD:cats.Eq[F[A,D]],implicitEqFAG:cats.Eq[F[A,G]],implicitEqFEitherABC:cats.Eq[F[A,Either[B,C]]],implicitEqFEitherACB:cats.Eq[F[A,Either[C,B]]],implicitLEqFEitherABC:cats.Eq[F[Either[C,A],Either[C,B]]],implicitREqFEitherABC:cats.Eq[F[Either[A,C],Either[B,C]]],implicitEitherAssociationACB:cats.Eq[F[Either[Either[A,C],B],Either[Either[B,C],B]]],implicitEitherAssociationBCA:cats.Eq[F[Either[B,Either[C,A]],Either[B,Either[C,B]]]]):ChoiceTests.this.RuleSet", "kind" : "def"}, {"label" : "profunctor", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], arg3: Arbitrary[D], arg4: Arbitrary[E], arg5: Arbitrary[G], ArbFAB: Arbitrary[F[A, B]], ArbFCD: Arbitrary[F[C, D]], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], CogenD: Cogen[D], CogenE: Cogen[E], EqFAB: Eq[F[A, B]], EqFAD: Eq[F[A, D]], EqFAG: Eq[F[A, G]]): RuleSet", "member" : "cats.laws.discipline.ProfunctorTests.profunctor", "link" : "proptics\/law\/discipline\/ChoiceTests.html#profunctor[A,B,C,D,E,G](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitevidence$4:org.scalacheck.Arbitrary[D],implicitevidence$5:org.scalacheck.Arbitrary[E],implicitevidence$6:org.scalacheck.Arbitrary[G],implicitArbFAB:org.scalacheck.Arbitrary[F[A,B]],implicitArbFCD:org.scalacheck.Arbitrary[F[C,D]],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitCogenD:org.scalacheck.Cogen[D],implicitCogenE:org.scalacheck.Cogen[E],implicitEqFAB:cats.Eq[F[A,B]],implicitEqFAD:cats.Eq[F[A,D]],implicitEqFAG:cats.Eq[F[A,G]]):ProfunctorTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/ChoiceTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/ChoiceTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/ChoiceTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/ChoiceTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/ChoiceTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/ChoiceTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/ChoiceTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/ChoiceTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ChoiceTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ChoiceTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ChoiceTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/ChoiceTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/ChoiceTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/ChoiceTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/ChoiceTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/ChoiceTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/ChoiceTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/ChoiceTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/ChoiceTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/ChoiceTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): ChoiceLaws[F]", "member" : "proptics.law.discipline.ChoiceTests.laws", "link" : "proptics\/law\/discipline\/ChoiceTests.html#laws:proptics.law.ChoiceLaws[F]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.ClosedTests", "object" : "proptics\/law\/discipline\/ClosedTests$.html", "members_object" : [{"label" : "apply", "tail" : "(arg0: Closed[F]): ClosedTests[F]", "member" : "proptics.law.discipline.ClosedTests.apply", "link" : "proptics\/law\/discipline\/ClosedTests$.html#apply[F[_,_]](implicitevidence$7:proptics.profunctor.Closed[F]):proptics.law.discipline.ClosedTests[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/ClosedTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/ClosedTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/ClosedTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/ClosedTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/ClosedTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/ClosedTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/ClosedTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ClosedTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ClosedTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ClosedTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/ClosedTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/ClosedTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/ClosedTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/ClosedTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/ClosedTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/ClosedTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/ClosedTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/ClosedTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/ClosedTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/ClosedTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/ClosedTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/ClosedTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/ClosedTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/ClosedTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "closed", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], arg3: Arbitrary[D], arg4: Arbitrary[E], arg5: Arbitrary[G], ArbFAB: Arbitrary[F[A, B]], ArbFAA: Arbitrary[F[A, A]], ArbFCD: Arbitrary[F[C, D]], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], CogenD: Cogen[D], CogenE: Cogen[E], CogenCACA: Cogen[((C) => A) => (C) => A], CogenCBCB: Cogen[((C) => B) => (C) => B], EqFAB: Eq[F[A, B]], EqFAD: Eq[F[A, D]], EqFAG: Eq[F[A, G]], EqAAAA: Eq[F[(A) => A, (A) => A]], EqCACB: Eq[F[(C) => A, (C) => B]], EqAAAAAB: Eq[F[(A) => (A) => A, (A) => (A) => B]]): RuleSet", "member" : "proptics.law.discipline.ClosedTests.closed", "link" : "proptics\/law\/discipline\/ClosedTests.html#closed[A,B,C,D,E,G](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitevidence$4:org.scalacheck.Arbitrary[D],implicitevidence$5:org.scalacheck.Arbitrary[E],implicitevidence$6:org.scalacheck.Arbitrary[G],implicitArbFAB:org.scalacheck.Arbitrary[F[A,B]],implicitArbFAA:org.scalacheck.Arbitrary[F[A,A]],implicitArbFCD:org.scalacheck.Arbitrary[F[C,D]],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitCogenD:org.scalacheck.Cogen[D],implicitCogenE:org.scalacheck.Cogen[E],implicitCogenCACA:org.scalacheck.Cogen[(C=>A)=>(C=>A)],implicitCogenCBCB:org.scalacheck.Cogen[(C=>B)=>(C=>B)],implicitEqFAB:cats.Eq[F[A,B]],implicitEqFAD:cats.Eq[F[A,D]],implicitEqFAG:cats.Eq[F[A,G]],implicitEqAAAA:cats.Eq[F[A=>A,A=>A]],implicitEqCACB:cats.Eq[F[C=>A,C=>B]],implicitEqAAAAAB:cats.Eq[F[A=>(A=>A),A=>(A=>B)]]):ClosedTests.this.RuleSet", "kind" : "def"}, {"label" : "profunctor", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], arg3: Arbitrary[D], arg4: Arbitrary[E], arg5: Arbitrary[G], ArbFAB: Arbitrary[F[A, B]], ArbFCD: Arbitrary[F[C, D]], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], CogenD: Cogen[D], CogenE: Cogen[E], EqFAB: Eq[F[A, B]], EqFAD: Eq[F[A, D]], EqFAG: Eq[F[A, G]]): RuleSet", "member" : "cats.laws.discipline.ProfunctorTests.profunctor", "link" : "proptics\/law\/discipline\/ClosedTests.html#profunctor[A,B,C,D,E,G](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitevidence$4:org.scalacheck.Arbitrary[D],implicitevidence$5:org.scalacheck.Arbitrary[E],implicitevidence$6:org.scalacheck.Arbitrary[G],implicitArbFAB:org.scalacheck.Arbitrary[F[A,B]],implicitArbFCD:org.scalacheck.Arbitrary[F[C,D]],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitCogenD:org.scalacheck.Cogen[D],implicitCogenE:org.scalacheck.Cogen[E],implicitEqFAB:cats.Eq[F[A,B]],implicitEqFAD:cats.Eq[F[A,D]],implicitEqFAG:cats.Eq[F[A,G]]):ProfunctorTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/ClosedTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/ClosedTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/ClosedTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/ClosedTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/ClosedTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/ClosedTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/ClosedTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/ClosedTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ClosedTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ClosedTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ClosedTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/ClosedTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/ClosedTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/ClosedTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/ClosedTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/ClosedTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/ClosedTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/ClosedTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/ClosedTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/ClosedTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): ClosedLaws[F]", "member" : "proptics.law.discipline.ClosedTests.laws", "link" : "proptics\/law\/discipline\/ClosedTests.html#laws:proptics.law.ClosedLaws[F]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.CochoiceTests", "object" : "proptics\/law\/discipline\/CochoiceTests$.html", "members_object" : [{"label" : "apply", "tail" : "(arg0: Cochoice[F]): CochoiceTests[F]", "member" : "proptics.law.discipline.CochoiceTests.apply", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#apply[F[_,_]](implicitevidence$7:proptics.profunctor.Cochoice[F]):proptics.law.discipline.CochoiceTests[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/CochoiceTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/CochoiceTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/CochoiceTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/CochoiceTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/CochoiceTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/CochoiceTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/CochoiceTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "cochoice", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], arg3: Arbitrary[D], arg4: Arbitrary[E], arg5: Arbitrary[G], ArbFAB: Arbitrary[F[A, B]], ArbFCD: Arbitrary[F[C, D]], ArbEACEBC: Arbitrary[F[Either[A, C], Either[B, C]]], ArbECAECB: Arbitrary[F[Either[C, A], Either[C, B]]], ArbEEABCEEBCC: Arbitrary[F[Either[Either[A, B], C], Either[Either[B, C], C]]], ArbECEABECEBC: Arbitrary[F[Either[C, Either[A, B]], Either[C, Either[B, C]]]], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], CogenD: Cogen[D], CogenE: Cogen[E], EqFAB: Eq[F[A, B]], EqFBC: Eq[F[B, C]], EqFAD: Eq[F[A, D]], EqFAG: Eq[F[A, G]], EqFEitherABC: Eq[F[A, Either[B, C]]], EqFEitherACB: Eq[F[A, Either[C, B]]], LEqFEitherABC: Eq[F[Either[C, A], Either[C, B]]], REqFEitherABC: Eq[F[Either[A, C], Either[B, C]]], EitherAssociationACB: Eq[F[Either[Either[A, C], B], Either[Either[B, C], B]]], EitherAssociationBCA: Eq[F[Either[B, Either[C, A]], Either[B, Either[C, B]]]]): RuleSet", "member" : "proptics.law.discipline.CochoiceTests.cochoice", "link" : "proptics\/law\/discipline\/CochoiceTests.html#cochoice[A,B,C,D,E,G](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitevidence$4:org.scalacheck.Arbitrary[D],implicitevidence$5:org.scalacheck.Arbitrary[E],implicitevidence$6:org.scalacheck.Arbitrary[G],implicitArbFAB:org.scalacheck.Arbitrary[F[A,B]],implicitArbFCD:org.scalacheck.Arbitrary[F[C,D]],implicitArbEACEBC:org.scalacheck.Arbitrary[F[Either[A,C],Either[B,C]]],implicitArbECAECB:org.scalacheck.Arbitrary[F[Either[C,A],Either[C,B]]],implicitArbEEABCEEBCC:org.scalacheck.Arbitrary[F[Either[Either[A,B],C],Either[Either[B,C],C]]],implicitArbECEABECEBC:org.scalacheck.Arbitrary[F[Either[C,Either[A,B]],Either[C,Either[B,C]]]],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitCogenD:org.scalacheck.Cogen[D],implicitCogenE:org.scalacheck.Cogen[E],implicitEqFAB:cats.Eq[F[A,B]],implicitEqFBC:cats.Eq[F[B,C]],implicitEqFAD:cats.Eq[F[A,D]],implicitEqFAG:cats.Eq[F[A,G]],implicitEqFEitherABC:cats.Eq[F[A,Either[B,C]]],implicitEqFEitherACB:cats.Eq[F[A,Either[C,B]]],implicitLEqFEitherABC:cats.Eq[F[Either[C,A],Either[C,B]]],implicitREqFEitherABC:cats.Eq[F[Either[A,C],Either[B,C]]],implicitEitherAssociationACB:cats.Eq[F[Either[Either[A,C],B],Either[Either[B,C],B]]],implicitEitherAssociationBCA:cats.Eq[F[Either[B,Either[C,A]],Either[B,Either[C,B]]]]):CochoiceTests.this.RuleSet", "kind" : "def"}, {"label" : "profunctor", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], arg3: Arbitrary[D], arg4: Arbitrary[E], arg5: Arbitrary[G], ArbFAB: Arbitrary[F[A, B]], ArbFCD: Arbitrary[F[C, D]], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], CogenD: Cogen[D], CogenE: Cogen[E], EqFAB: Eq[F[A, B]], EqFAD: Eq[F[A, D]], EqFAG: Eq[F[A, G]]): RuleSet", "member" : "cats.laws.discipline.ProfunctorTests.profunctor", "link" : "proptics\/law\/discipline\/CochoiceTests.html#profunctor[A,B,C,D,E,G](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitevidence$4:org.scalacheck.Arbitrary[D],implicitevidence$5:org.scalacheck.Arbitrary[E],implicitevidence$6:org.scalacheck.Arbitrary[G],implicitArbFAB:org.scalacheck.Arbitrary[F[A,B]],implicitArbFCD:org.scalacheck.Arbitrary[F[C,D]],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitCogenD:org.scalacheck.Cogen[D],implicitCogenE:org.scalacheck.Cogen[E],implicitEqFAB:cats.Eq[F[A,B]],implicitEqFAD:cats.Eq[F[A,D]],implicitEqFAG:cats.Eq[F[A,G]]):ProfunctorTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/CochoiceTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/CochoiceTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/CochoiceTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/CochoiceTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/CochoiceTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/CochoiceTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/CochoiceTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/CochoiceTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/CochoiceTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/CochoiceTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/CochoiceTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/CochoiceTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/CochoiceTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/CochoiceTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/CochoiceTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/CochoiceTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/CochoiceTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/CochoiceTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/CochoiceTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/CochoiceTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): CochoiceLaws[F]", "member" : "proptics.law.discipline.CochoiceTests.laws", "link" : "proptics\/law\/discipline\/CochoiceTests.html#laws:proptics.law.CochoiceLaws[F]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.ConsTests", "object" : "proptics\/law\/discipline\/ConsTests$.html", "members_object" : [{"label" : "apply", "tail" : "(): ConsTests[S, A]", "member" : "proptics.law.discipline.ConsTests.apply", "link" : "proptics\/law\/discipline\/ConsTests$.html#apply[S,A]:proptics.law.discipline.ConsTests[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/ConsTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/ConsTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/ConsTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/ConsTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/ConsTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/ConsTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/ConsTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ConsTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ConsTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ConsTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/ConsTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/ConsTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/ConsTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/ConsTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/ConsTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/ConsTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/ConsTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/ConsTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/ConsTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/ConsTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/ConsTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/ConsTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/ConsTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/ConsTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "tailOption", "tail" : "(ev: Cons[S, A], eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbA2A: Arbitrary[(S) => S]): RuleSet", "member" : "proptics.law.discipline.ConsTests.tailOption", "link" : "proptics\/law\/discipline\/ConsTests.html#tailOption(implicitev:proptics.typeclass.Cons[S,A],impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbA2A:org.scalacheck.Arbitrary[S=>S]):ConsTests.this.RuleSet", "kind" : "def"}, {"label" : "headOption", "tail" : "(ev: Cons[S, A], eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbA2A: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.ConsTests.headOption", "link" : "proptics\/law\/discipline\/ConsTests.html#headOption(implicitev:proptics.typeclass.Cons[S,A],impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbA2A:org.scalacheck.Arbitrary[A=>A]):ConsTests.this.RuleSet", "kind" : "def"}, {"label" : "cons", "tail" : "(ev: Cons[S, A], eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbOp: Arbitrary[((A, S)) => (A, S)]): RuleSet", "member" : "proptics.law.discipline.ConsTests.cons", "link" : "proptics\/law\/discipline\/ConsTests.html#cons(implicitev:proptics.typeclass.Cons[S,A],impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbOp:org.scalacheck.Arbitrary[((A,S))=>(A,S)]):ConsTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/ConsTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/ConsTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/ConsTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/ConsTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/ConsTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/ConsTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/ConsTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/ConsTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ConsTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ConsTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ConsTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/ConsTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/ConsTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/ConsTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/ConsTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/ConsTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/ConsTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/ConsTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/ConsTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/ConsTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.EachTests", "object" : "proptics\/law\/discipline\/EachTests$.html", "members_object" : [{"label" : "apply", "tail" : "(): EachTests[S, A]", "member" : "proptics.law.discipline.EachTests.apply", "link" : "proptics\/law\/discipline\/EachTests$.html#apply[S,A]:proptics.law.discipline.EachTests[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/EachTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/EachTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/EachTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/EachTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/EachTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/EachTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/EachTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/EachTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/EachTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/EachTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/EachTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/EachTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/EachTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/EachTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/EachTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/EachTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/EachTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/EachTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/EachTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/EachTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/EachTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/EachTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/EachTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/EachTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "each", "tail" : "(ev: Each[S, A], eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbOp: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.EachTests.each", "link" : "proptics\/law\/discipline\/EachTests.html#each(implicitev:proptics.typeclass.Each[S,A],impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbOp:org.scalacheck.Arbitrary[A=>A]):EachTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/EachTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/EachTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/EachTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/EachTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/EachTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/EachTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/EachTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/EachTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/EachTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/EachTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/EachTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/EachTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/EachTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/EachTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/EachTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/EachTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/EachTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/EachTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/EachTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/EachTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.EmptyTests", "object" : "proptics\/law\/discipline\/EmptyTests$.html", "members_object" : [{"label" : "apply", "tail" : "(): EmptyTests[S]", "member" : "proptics.law.discipline.EmptyTests.apply", "link" : "proptics\/law\/discipline\/EmptyTests$.html#apply[S]:proptics.law.discipline.EmptyTests[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/EmptyTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/EmptyTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/EmptyTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/EmptyTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/EmptyTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/EmptyTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/EmptyTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/EmptyTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/EmptyTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/EmptyTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/EmptyTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/EmptyTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/EmptyTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/EmptyTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/EmptyTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/EmptyTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/EmptyTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/EmptyTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/EmptyTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/EmptyTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/EmptyTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/EmptyTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/EmptyTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/EmptyTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "empty", "tail" : "(ev: Empty[S], eqS: Eq[S], arbA: Arbitrary[S]): RuleSet", "member" : "proptics.law.discipline.EmptyTests.empty", "link" : "proptics\/law\/discipline\/EmptyTests.html#empty(implicitev:proptics.typeclass.Empty[S],impliciteqS:cats.Eq[S],implicitarbA:org.scalacheck.Arbitrary[S]):EmptyTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/EmptyTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/EmptyTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/EmptyTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/EmptyTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/EmptyTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/EmptyTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/EmptyTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/EmptyTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/EmptyTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/EmptyTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/EmptyTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/EmptyTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/EmptyTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/EmptyTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/EmptyTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/EmptyTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/EmptyTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/EmptyTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/EmptyTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/EmptyTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.Field1Tests", "object" : "proptics\/law\/discipline\/Field1Tests$.html", "members_object" : [{"label" : "apply", "tail" : "(): Field1Tests[A, B]", "member" : "proptics.law.discipline.Field1Tests.apply", "link" : "proptics\/law\/discipline\/Field1Tests$.html#apply[A,B]:proptics.law.discipline.Field1Tests[A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/Field1Tests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/Field1Tests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/Field1Tests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/Field1Tests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/Field1Tests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/Field1Tests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/Field1Tests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field1Tests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field1Tests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field1Tests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/Field1Tests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/Field1Tests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/Field1Tests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/Field1Tests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/Field1Tests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/Field1Tests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/Field1Tests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/Field1Tests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/Field1Tests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/Field1Tests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/Field1Tests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/Field1Tests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/Field1Tests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/Field1Tests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "first", "tail" : "(ev: Field1[(A, B), A], eqS: Eq[A], eqA: Eq[B], arbA: Arbitrary[A], arbB: Arbitrary[B], arbOp: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.Field1Tests.first", "link" : "proptics\/law\/discipline\/Field1Tests.html#first(implicitev:proptics.typeclass.Field1[(A,B),A],impliciteqS:cats.Eq[A],impliciteqA:cats.Eq[B],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbB:org.scalacheck.Arbitrary[B],implicitarbOp:org.scalacheck.Arbitrary[A=>A]):Field1Tests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/Field1Tests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/Field1Tests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/Field1Tests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/Field1Tests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/Field1Tests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/Field1Tests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/Field1Tests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/Field1Tests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field1Tests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field1Tests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field1Tests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/Field1Tests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/Field1Tests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/Field1Tests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/Field1Tests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/Field1Tests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/Field1Tests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/Field1Tests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/Field1Tests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/Field1Tests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.Field2Tests", "object" : "proptics\/law\/discipline\/Field2Tests$.html", "members_object" : [{"label" : "apply", "tail" : "(): Field2Tests[A, B]", "member" : "proptics.law.discipline.Field2Tests.apply", "link" : "proptics\/law\/discipline\/Field2Tests$.html#apply[A,B]:proptics.law.discipline.Field2Tests[A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/Field2Tests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/Field2Tests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/Field2Tests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/Field2Tests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/Field2Tests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/Field2Tests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/Field2Tests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field2Tests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field2Tests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field2Tests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/Field2Tests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/Field2Tests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/Field2Tests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/Field2Tests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/Field2Tests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/Field2Tests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/Field2Tests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/Field2Tests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/Field2Tests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/Field2Tests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/Field2Tests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/Field2Tests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/Field2Tests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/Field2Tests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "second", "tail" : "(ev: Field2[(A, B), B], eqA: Eq[A], eqB: Eq[B], arbA: Arbitrary[A], arbB: Arbitrary[B], arbOp: Arbitrary[(B) => B]): RuleSet", "member" : "proptics.law.discipline.Field2Tests.second", "link" : "proptics\/law\/discipline\/Field2Tests.html#second(implicitev:proptics.typeclass.Field2[(A,B),B],impliciteqA:cats.Eq[A],impliciteqB:cats.Eq[B],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbB:org.scalacheck.Arbitrary[B],implicitarbOp:org.scalacheck.Arbitrary[B=>B]):Field2Tests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/Field2Tests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/Field2Tests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/Field2Tests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/Field2Tests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/Field2Tests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/Field2Tests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/Field2Tests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/Field2Tests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field2Tests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field2Tests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field2Tests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/Field2Tests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/Field2Tests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/Field2Tests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/Field2Tests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/Field2Tests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/Field2Tests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/Field2Tests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/Field2Tests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/Field2Tests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.Field3Tests", "object" : "proptics\/law\/discipline\/Field3Tests$.html", "members_object" : [{"label" : "apply", "tail" : "(): Field3Tests[A, B, C]", "member" : "proptics.law.discipline.Field3Tests.apply", "link" : "proptics\/law\/discipline\/Field3Tests$.html#apply[A,B,C]:proptics.law.discipline.Field3Tests[A,B,C]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/Field3Tests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/Field3Tests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/Field3Tests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/Field3Tests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/Field3Tests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/Field3Tests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/Field3Tests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field3Tests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field3Tests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field3Tests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/Field3Tests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/Field3Tests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/Field3Tests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/Field3Tests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/Field3Tests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/Field3Tests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/Field3Tests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/Field3Tests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/Field3Tests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/Field3Tests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/Field3Tests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/Field3Tests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/Field3Tests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/Field3Tests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "third", "tail" : "(ev: Field3[(A, B, C), C], eqA: Eq[A], eqB: Eq[B], eqC: Eq[C], arbA: Arbitrary[A], arbB: Arbitrary[B], arbC: Arbitrary[C], arbOp: Arbitrary[(C) => C]): RuleSet", "member" : "proptics.law.discipline.Field3Tests.third", "link" : "proptics\/law\/discipline\/Field3Tests.html#third(implicitev:proptics.typeclass.Field3[(A,B,C),C],impliciteqA:cats.Eq[A],impliciteqB:cats.Eq[B],impliciteqC:cats.Eq[C],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbB:org.scalacheck.Arbitrary[B],implicitarbC:org.scalacheck.Arbitrary[C],implicitarbOp:org.scalacheck.Arbitrary[C=>C]):Field3Tests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/Field3Tests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/Field3Tests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/Field3Tests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/Field3Tests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/Field3Tests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/Field3Tests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/Field3Tests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/Field3Tests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field3Tests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field3Tests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field3Tests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/Field3Tests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/Field3Tests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/Field3Tests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/Field3Tests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/Field3Tests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/Field3Tests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/Field3Tests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/Field3Tests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/Field3Tests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.Field4Tests", "object" : "proptics\/law\/discipline\/Field4Tests$.html", "members_object" : [{"label" : "apply", "tail" : "(): Field4Tests[A, B, C, D]", "member" : "proptics.law.discipline.Field4Tests.apply", "link" : "proptics\/law\/discipline\/Field4Tests$.html#apply[A,B,C,D]:proptics.law.discipline.Field4Tests[A,B,C,D]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/Field4Tests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/Field4Tests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/Field4Tests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/Field4Tests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/Field4Tests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/Field4Tests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/Field4Tests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field4Tests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field4Tests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field4Tests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/Field4Tests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/Field4Tests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/Field4Tests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/Field4Tests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/Field4Tests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/Field4Tests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/Field4Tests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/Field4Tests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/Field4Tests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/Field4Tests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/Field4Tests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/Field4Tests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/Field4Tests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/Field4Tests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "fourth", "tail" : "(ev: Field4[(A, B, C, D), D], eqA: Eq[A], eqB: Eq[B], eqC: Eq[C], eqD: Eq[D], arbA: Arbitrary[A], arbB: Arbitrary[B], arbC: Arbitrary[C], arbD: Arbitrary[D], arbOp: Arbitrary[(D) => D]): RuleSet", "member" : "proptics.law.discipline.Field4Tests.fourth", "link" : "proptics\/law\/discipline\/Field4Tests.html#fourth(implicitev:proptics.typeclass.Field4[(A,B,C,D),D],impliciteqA:cats.Eq[A],impliciteqB:cats.Eq[B],impliciteqC:cats.Eq[C],impliciteqD:cats.Eq[D],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbB:org.scalacheck.Arbitrary[B],implicitarbC:org.scalacheck.Arbitrary[C],implicitarbD:org.scalacheck.Arbitrary[D],implicitarbOp:org.scalacheck.Arbitrary[D=>D]):Field4Tests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/Field4Tests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/Field4Tests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/Field4Tests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/Field4Tests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/Field4Tests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/Field4Tests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/Field4Tests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/Field4Tests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field4Tests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field4Tests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field4Tests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/Field4Tests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/Field4Tests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/Field4Tests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/Field4Tests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/Field4Tests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/Field4Tests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/Field4Tests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/Field4Tests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/Field4Tests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.Field5Tests", "object" : "proptics\/law\/discipline\/Field5Tests$.html", "members_object" : [{"label" : "apply", "tail" : "(): Field5Tests[A, B, C, D, E]", "member" : "proptics.law.discipline.Field5Tests.apply", "link" : "proptics\/law\/discipline\/Field5Tests$.html#apply[A,B,C,D,E]:proptics.law.discipline.Field5Tests[A,B,C,D,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/Field5Tests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/Field5Tests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/Field5Tests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/Field5Tests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/Field5Tests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/Field5Tests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/Field5Tests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field5Tests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field5Tests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field5Tests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/Field5Tests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/Field5Tests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/Field5Tests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/Field5Tests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/Field5Tests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/Field5Tests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/Field5Tests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/Field5Tests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/Field5Tests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/Field5Tests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/Field5Tests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/Field5Tests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/Field5Tests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/Field5Tests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "fifth", "tail" : "(ev: Field5[(A, B, C, D, E), E], eqA: Eq[A], eqB: Eq[B], eqC: Eq[C], eqD: Eq[D], eqE: Eq[E], arbA: Arbitrary[A], arbB: Arbitrary[B], arbC: Arbitrary[C], arbD: Arbitrary[D], arbE: Arbitrary[E], arbOp: Arbitrary[(E) => E]): RuleSet", "member" : "proptics.law.discipline.Field5Tests.fifth", "link" : "proptics\/law\/discipline\/Field5Tests.html#fifth(implicitev:proptics.typeclass.Field5[(A,B,C,D,E),E],impliciteqA:cats.Eq[A],impliciteqB:cats.Eq[B],impliciteqC:cats.Eq[C],impliciteqD:cats.Eq[D],impliciteqE:cats.Eq[E],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbB:org.scalacheck.Arbitrary[B],implicitarbC:org.scalacheck.Arbitrary[C],implicitarbD:org.scalacheck.Arbitrary[D],implicitarbE:org.scalacheck.Arbitrary[E],implicitarbOp:org.scalacheck.Arbitrary[E=>E]):Field5Tests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/Field5Tests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/Field5Tests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/Field5Tests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/Field5Tests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/Field5Tests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/Field5Tests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/Field5Tests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/Field5Tests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field5Tests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field5Tests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/Field5Tests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/Field5Tests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/Field5Tests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/Field5Tests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/Field5Tests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/Field5Tests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/Field5Tests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/Field5Tests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/Field5Tests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/Field5Tests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.FoldableWithIndexTests", "object" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: FoldableWithIndex[F, I]): FoldableWithIndexTests[F, I]", "member" : "proptics.law.discipline.FoldableWithIndexTests.apply", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#apply[F[_],I](implicitev:proptics.indices.FoldableWithIndex[F,I]):proptics.law.discipline.FoldableWithIndexTests[F,I]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/FoldableWithIndexTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "foldableWithIndex", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], ArbFA: Arbitrary[F[A]], ArbI: Arbitrary[I], ArbAI2B: Arbitrary[(A, I) => B], CogenA: Cogen[A], CogenB: Cogen[B], A: CommutativeMonoid[A], B: CommutativeMonoid[B], EqA: Eq[A], EqB: Eq[B], EqFA: Eq[F[A]]): RuleSet", "member" : "proptics.law.discipline.FoldableWithIndexTests.foldableWithIndex", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#foldableWithIndex[A,B,C](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitArbI:org.scalacheck.Arbitrary[I],implicitArbAI2B:org.scalacheck.Arbitrary[(A,I)=>B],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitA:cats.kernel.CommutativeMonoid[A],implicitB:cats.kernel.CommutativeMonoid[B],implicitEqA:cats.Eq[A],implicitEqB:cats.Eq[B],implicitEqFA:cats.Eq[F[A]]):FoldableWithIndexTests.this.RuleSet", "kind" : "def"}, {"label" : "foldable", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], ArbFA: Arbitrary[F[A]], A: CommutativeMonoid[A], B: CommutativeMonoid[B], CogenA: Cogen[A], CogenB: Cogen[B], EqA: Eq[A], EqFA: Eq[F[A]], EqB: Eq[B], EqOptionB: Eq[Option[B]], EqOptionA: Eq[Option[A]]): RuleSet", "member" : "cats.laws.discipline.FoldableTests.foldable", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#foldable[A,B](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitA:cats.kernel.CommutativeMonoid[A],implicitB:cats.kernel.CommutativeMonoid[B],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitEqA:cats.Eq[A],implicitEqFA:cats.Eq[F[A]],implicitEqB:cats.Eq[B],implicitEqOptionB:cats.Eq[Option[B]],implicitEqOptionA:cats.Eq[Option[A]]):FoldableTests.this.RuleSet", "kind" : "def"}, {"label" : "unorderedFoldable", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], ArbFA: Arbitrary[F[A]], ArbF: Arbitrary[(A) => B], CogenA: Cogen[A], A: CommutativeMonoid[A], B: CommutativeMonoid[B], EqFA: Eq[A], EqFB: Eq[B]): RuleSet", "member" : "cats.laws.discipline.UnorderedFoldableTests.unorderedFoldable", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#unorderedFoldable[A,B](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitArbF:org.scalacheck.Arbitrary[A=>B],implicitCogenA:org.scalacheck.Cogen[A],implicitA:cats.kernel.CommutativeMonoid[A],implicitB:cats.kernel.CommutativeMonoid[B],implicitEqFA:cats.Eq[A],implicitEqFB:cats.Eq[B]):UnorderedFoldableTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): FoldableWithIndexLaws[F, I]", "member" : "proptics.law.discipline.FoldableWithIndexTests.laws", "link" : "proptics\/law\/discipline\/FoldableWithIndexTests.html#laws:proptics.law.FoldableWithIndexLaws[F,I]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.FunctorWithIndexTests", "object" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: FunctorWithIndex[F, I]): FunctorWithIndexTests[F, I]", "member" : "proptics.law.discipline.FunctorWithIndexTests.apply", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#apply[F[_],I](implicitev:proptics.indices.FunctorWithIndex[F,I]):proptics.law.discipline.FunctorWithIndexTests[F,I]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/FunctorWithIndexTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "functorWithIndex", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], ArbFA: Arbitrary[F[A]], ArbI: Arbitrary[I], ArbAI2B: Arbitrary[(A, I) => B], ArbBI2C: Arbitrary[(B, I) => C], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], EqFA: Eq[F[A]], EqFC: Eq[F[C]]): RuleSet", "member" : "proptics.law.discipline.FunctorWithIndexTests.functorWithIndex", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#functorWithIndex[A,B,C](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitArbI:org.scalacheck.Arbitrary[I],implicitArbAI2B:org.scalacheck.Arbitrary[(A,I)=>B],implicitArbBI2C:org.scalacheck.Arbitrary[(B,I)=>C],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitEqFA:cats.Eq[F[A]],implicitEqFC:cats.Eq[F[C]]):FunctorWithIndexTests.this.RuleSet", "kind" : "def"}, {"label" : "functor", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], ArbFA: Arbitrary[F[A]], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], EqFA: Eq[F[A]], EqFC: Eq[F[C]]): RuleSet", "member" : "cats.laws.discipline.FunctorTests.functor", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#functor[A,B,C](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitEqFA:cats.Eq[F[A]],implicitEqFC:cats.Eq[F[C]]):FunctorTests.this.RuleSet", "kind" : "def"}, {"label" : "invariant", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], ArbFA: Arbitrary[F[A]], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], EqFA: Eq[F[A]], EqFC: Eq[F[C]]): RuleSet", "member" : "cats.laws.discipline.InvariantTests.invariant", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#invariant[A,B,C](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitEqFA:cats.Eq[F[A]],implicitEqFC:cats.Eq[F[C]]):InvariantTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): FunctorWithIndexLaws[F, I]", "member" : "proptics.law.discipline.FunctorWithIndexTests.laws", "link" : "proptics\/law\/discipline\/FunctorWithIndexTests.html#laws:proptics.law.FunctorWithIndexLaws[F,I]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.GrateTests", "object" : "proptics\/law\/discipline\/GrateTests$.html", "members_object" : [{"label" : "apply", "tail" : "(_grate: Grate[S, A]): GrateTests[S, A]", "member" : "proptics.law.discipline.GrateTests.apply", "link" : "proptics\/law\/discipline\/GrateTests$.html#apply[S,A](_grate:proptics.Grate[S,A]):proptics.law.discipline.GrateTests[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/GrateTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/GrateTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/GrateTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/GrateTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/GrateTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/GrateTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/GrateTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/GrateTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/GrateTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/GrateTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/GrateTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/GrateTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/GrateTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/GrateTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/GrateTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/GrateTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/GrateTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/GrateTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/GrateTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/GrateTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/GrateTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/GrateTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/GrateTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/GrateTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "grate", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.GrateTests.grate", "link" : "proptics\/law\/discipline\/GrateTests.html#grate(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A]):GrateTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/GrateTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/GrateTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/GrateTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/GrateTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/GrateTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/GrateTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/GrateTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/GrateTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/GrateTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/GrateTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/GrateTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/GrateTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/GrateTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/GrateTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/GrateTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/GrateTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/GrateTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/GrateTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/GrateTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/GrateTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): GrateLaws[S, A]", "member" : "proptics.law.discipline.GrateTests.laws", "link" : "proptics\/law\/discipline\/GrateTests.html#laws:proptics.law.GrateLaws[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.IndexedLensTests", "object" : "proptics\/law\/discipline\/IndexedLensTests$.html", "members_object" : [{"label" : "apply", "tail" : "(_indexedLens: IndexedLens[I, S, A]): IndexedLensTests[I, S, A]", "member" : "proptics.law.discipline.IndexedLensTests.apply", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#apply[I,S,A](_indexedLens:proptics.IndexedLens[I,S,A]):proptics.law.discipline.IndexedLensTests[I,S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/IndexedLensTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/IndexedLensTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "indexedLens", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A], arbIAA: Arbitrary[(A, I) => A]): RuleSet", "member" : "proptics.law.discipline.IndexedLensTests.indexedLens", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#indexedLens(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A],implicitarbIAA:org.scalacheck.Arbitrary[(A,I)=>A]):IndexedLensTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/IndexedLensTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): IndexedLensLaws[I, S, A]", "member" : "proptics.law.discipline.IndexedLensTests.laws", "link" : "proptics\/law\/discipline\/IndexedLensTests.html#laws:proptics.law.IndexedLensLaws[I,S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.IndexedSetterTests", "object" : "proptics\/law\/discipline\/IndexedSetterTests$.html", "members_object" : [{"label" : "apply", "tail" : "(_indexedSetter: IndexedSetter[I, S, A]): IndexedSetterTests[I, S, A]", "member" : "proptics.law.discipline.IndexedSetterTests.apply", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#apply[I,S,A](_indexedSetter:proptics.IndexedSetter[I,S,A]):proptics.law.discipline.IndexedSetterTests[I,S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/IndexedSetterTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/IndexedSetterTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "indexedSetter", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A], arbIAA: Arbitrary[(A, I) => A]): RuleSet", "member" : "proptics.law.discipline.IndexedSetterTests.indexedSetter", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#indexedSetter(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A],implicitarbIAA:org.scalacheck.Arbitrary[(A,I)=>A]):IndexedSetterTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): IndexedSetterLaws[I, S, A]", "member" : "proptics.law.discipline.IndexedSetterTests.laws", "link" : "proptics\/law\/discipline\/IndexedSetterTests.html#laws:proptics.law.IndexedSetterLaws[I,S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.IndexedTraversalTests", "object" : "proptics\/law\/discipline\/IndexedTraversalTests$.html", "members_object" : [{"label" : "apply", "tail" : "(_indexedTraversal: IndexedTraversal[I, S, A]): IndexedTraversalTests[I, S, A]", "member" : "proptics.law.discipline.IndexedTraversalTests.apply", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#apply[I,S,A](_indexedTraversal:proptics.IndexedTraversal[I,S,A]):proptics.law.discipline.IndexedTraversalTests[I,S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/IndexedTraversalTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/IndexedTraversalTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "indexedTraversal", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], eqListIA: Eq[List[(A, I)]], eqOpIa: Eq[Option[(A, I)]], arbIA2A: Arbitrary[(A, I) => A], arbOpIA: Arbitrary[Option[(A, I)]], arbListIA: Arbitrary[List[(A, I)]]): RuleSet", "member" : "proptics.law.discipline.IndexedTraversalTests.indexedTraversal", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#indexedTraversal(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],impliciteqListIA:cats.Eq[List[(A,I)]],impliciteqOpIa:cats.Eq[Option[(A,I)]],implicitarbIA2A:org.scalacheck.Arbitrary[(A,I)=>A],implicitarbOpIA:org.scalacheck.Arbitrary[Option[(A,I)]],implicitarbListIA:org.scalacheck.Arbitrary[List[(A,I)]]):IndexedTraversalTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): IndexedTraversalLaws[I, S, A]", "member" : "proptics.law.discipline.IndexedTraversalTests.laws", "link" : "proptics\/law\/discipline\/IndexedTraversalTests.html#laws:proptics.law.IndexedTraversalLaws[I,S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.IndexTests", "object" : "proptics\/law\/discipline\/IndexTests$.html", "members_object" : [{"label" : "apply", "tail" : "(): IndexTests[S, I, A]", "member" : "proptics.law.discipline.IndexTests.apply", "link" : "proptics\/law\/discipline\/IndexTests$.html#apply[S,I,A]:proptics.law.discipline.IndexTests[S,I,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/IndexTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/IndexTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/IndexTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/IndexTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/IndexTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/IndexTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/IndexTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/IndexTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/IndexTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/IndexTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/IndexTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/IndexTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/IndexTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/IndexTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/IndexTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/IndexTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/IndexTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/IndexTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/IndexTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/IndexTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/IndexTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "index", "tail" : "(ev: Index[S, I, A], eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbI: Arbitrary[I], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A], arbOp: Arbitrary[(Option[A]) => Option[A]]): RuleSet", "member" : "proptics.law.discipline.IndexTests.index", "link" : "proptics\/law\/discipline\/IndexTests.html#index(implicitev:proptics.typeclass.Index[S,I,A],impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbI:org.scalacheck.Arbitrary[I],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A],implicitarbOp:org.scalacheck.Arbitrary[Option[A]=>Option[A]]):IndexTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/IndexTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/IndexTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/IndexTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/IndexTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/IndexTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/IndexTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/IndexTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/IndexTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IndexTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/IndexTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/IndexTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/IndexTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/IndexTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/IndexTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/IndexTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/IndexTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/IndexTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/IndexTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.IsoTests", "object" : "proptics\/law\/discipline\/IsoTests$.html", "members_object" : [{"label" : "apply", "tail" : "(_iso: Iso[S, A]): IsoTests[S, A]", "member" : "proptics.law.discipline.IsoTests.apply", "link" : "proptics\/law\/discipline\/IsoTests$.html#apply[S,A](_iso:proptics.Iso[S,A]):proptics.law.discipline.IsoTests[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/IsoTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/IsoTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/IsoTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/IsoTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/IsoTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/IsoTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/IsoTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IsoTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IsoTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IsoTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/IsoTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/IsoTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/IsoTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/IsoTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/IsoTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/IsoTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/IsoTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/IsoTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/IsoTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/IsoTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/IsoTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/IsoTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/IsoTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/IsoTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "iso", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.IsoTests.iso", "link" : "proptics\/law\/discipline\/IsoTests.html#iso(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A]):IsoTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/IsoTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/IsoTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/IsoTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/IsoTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/IsoTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/IsoTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/IsoTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/IsoTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IsoTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IsoTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/IsoTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/IsoTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/IsoTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/IsoTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/IsoTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/IsoTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/IsoTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/IsoTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/IsoTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/IsoTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): IsoLaws[S, A]", "member" : "proptics.law.discipline.IsoTests.laws", "link" : "proptics\/law\/discipline\/IsoTests.html#laws:proptics.law.IsoLaws[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.LensTests", "object" : "proptics\/law\/discipline\/LensTests$.html", "members_object" : [{"label" : "apply", "tail" : "(f: (I) => Lens[S, A]): LensTests[S, I, A]", "member" : "proptics.law.discipline.LensTests.apply", "link" : "proptics\/law\/discipline\/LensTests$.html#apply[S,I,A](f:I=>proptics.Lens[S,A]):proptics.law.discipline.LensTests[S,I,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(_iso: Lens[S, A]): LensTests[S, Unit, A]", "member" : "proptics.law.discipline.LensTests.apply", "link" : "proptics\/law\/discipline\/LensTests$.html#apply[S,A](_iso:proptics.Lens[S,A]):proptics.law.discipline.LensTests[S,Unit,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/LensTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/LensTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/LensTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/LensTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/LensTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/LensTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/LensTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/LensTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/LensTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/LensTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/LensTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/LensTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/LensTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/LensTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/LensTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/LensTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/LensTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/LensTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/LensTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/LensTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/LensTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/LensTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/LensTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/LensTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "lens", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbI: Arbitrary[I], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.LensTests.lens", "link" : "proptics\/law\/discipline\/LensTests.html#lens(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbI:org.scalacheck.Arbitrary[I],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A]):LensTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/LensTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/LensTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/LensTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/LensTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/LensTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/LensTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/LensTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/LensTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/LensTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/LensTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/LensTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/LensTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/LensTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/LensTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/LensTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/LensTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/LensTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/LensTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/LensTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/LensTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(i: I): LensLaws[S, A]", "member" : "proptics.law.discipline.LensTests.laws", "link" : "proptics\/law\/discipline\/LensTests.html#laws(i:I):proptics.law.LensLaws[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.NonEmptyConsTests", "object" : "proptics\/law\/discipline\/NonEmptyConsTests$.html", "members_object" : [{"label" : "apply", "tail" : "(): NonEmptyConsTests[S, H, T]", "member" : "proptics.law.discipline.NonEmptyConsTests.apply", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#apply[S,H,T]:proptics.law.discipline.NonEmptyConsTests[S,H,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/NonEmptyConsTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/NonEmptyConsTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "tailOption", "tail" : "(ev: NonEmptyCons[S, H, T], eqS: Eq[S], eqH: Eq[H], eqT: Eq[T], arbS: Arbitrary[S], arbH: Arbitrary[H], arbT: Arbitrary[T], arbA2A: Arbitrary[(T) => T]): RuleSet", "member" : "proptics.law.discipline.NonEmptyConsTests.tailOption", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#tailOption(implicitev:proptics.typeclass.NonEmptyCons[S,H,T],impliciteqS:cats.Eq[S],impliciteqH:cats.Eq[H],impliciteqT:cats.Eq[T],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbH:org.scalacheck.Arbitrary[H],implicitarbT:org.scalacheck.Arbitrary[T],implicitarbA2A:org.scalacheck.Arbitrary[T=>T]):NonEmptyConsTests.this.RuleSet", "kind" : "def"}, {"label" : "headOption", "tail" : "(ev: NonEmptyCons[S, H, T], eqS: Eq[S], eqH: Eq[H], eqT: Eq[T], arbS: Arbitrary[S], arbH: Arbitrary[H], arbT: Arbitrary[T], arbH2H: Arbitrary[(H) => H]): RuleSet", "member" : "proptics.law.discipline.NonEmptyConsTests.headOption", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#headOption(implicitev:proptics.typeclass.NonEmptyCons[S,H,T],impliciteqS:cats.Eq[S],impliciteqH:cats.Eq[H],impliciteqT:cats.Eq[T],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbH:org.scalacheck.Arbitrary[H],implicitarbT:org.scalacheck.Arbitrary[T],implicitarbH2H:org.scalacheck.Arbitrary[H=>H]):NonEmptyConsTests.this.RuleSet", "kind" : "def"}, {"label" : "nonEmptyCons", "tail" : "(ev: NonEmptyCons[S, H, T], eqS: Eq[S], eqH: Eq[H], eqT: Eq[T], arbS: Arbitrary[S], arbH: Arbitrary[H], arbT: Arbitrary[T], arbOp: Arbitrary[((H, T)) => (H, T)]): RuleSet", "member" : "proptics.law.discipline.NonEmptyConsTests.nonEmptyCons", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#nonEmptyCons(implicitev:proptics.typeclass.NonEmptyCons[S,H,T],impliciteqS:cats.Eq[S],impliciteqH:cats.Eq[H],impliciteqT:cats.Eq[T],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbH:org.scalacheck.Arbitrary[H],implicitarbT:org.scalacheck.Arbitrary[T],implicitarbOp:org.scalacheck.Arbitrary[((H,T))=>(H,T)]):NonEmptyConsTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/NonEmptyConsTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.PrefixedTests", "object" : "proptics\/law\/discipline\/PrefixedTests$.html", "members_object" : [{"label" : "apply", "tail" : "(): PrefixedTests[S, T]", "member" : "proptics.law.discipline.PrefixedTests.apply", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#apply[S,T]:proptics.law.discipline.PrefixedTests[S,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/PrefixedTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/PrefixedTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/PrefixedTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/PrefixedTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/PrefixedTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/PrefixedTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/PrefixedTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "prefixed", "tail" : "(ev: Prefixed[S, T], eqS: Eq[S], eqT: Eq[T], arbS: Arbitrary[S], arbT: Arbitrary[T], arbOp: Arbitrary[(T) => T], arbOp2: Arbitrary[(Option[T]) => Option[T]]): RuleSet", "member" : "proptics.law.discipline.PrefixedTests.prefixed", "link" : "proptics\/law\/discipline\/PrefixedTests.html#prefixed(implicitev:proptics.typeclass.Prefixed[S,T],impliciteqS:cats.Eq[S],impliciteqT:cats.Eq[T],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbT:org.scalacheck.Arbitrary[T],implicitarbOp:org.scalacheck.Arbitrary[T=>T],implicitarbOp2:org.scalacheck.Arbitrary[Option[T]=>Option[T]]):PrefixedTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/PrefixedTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/PrefixedTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/PrefixedTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/PrefixedTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/PrefixedTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/PrefixedTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/PrefixedTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/PrefixedTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/PrefixedTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/PrefixedTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/PrefixedTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/PrefixedTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/PrefixedTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/PrefixedTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/PrefixedTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/PrefixedTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/PrefixedTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/PrefixedTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/PrefixedTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/PrefixedTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.PrismTests", "object" : "proptics\/law\/discipline\/PrismTests$.html", "members_object" : [{"label" : "apply", "tail" : "(f: (S) => Prism[S, A]): PrismTests[S, S, A]", "member" : "proptics.law.discipline.PrismTests.apply", "link" : "proptics\/law\/discipline\/PrismTests$.html#apply[S,A](f:S=>proptics.Prism[S,A]):proptics.law.discipline.PrismTests[S,S,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(_prism: Prism[S, A]): PrismTests[S, Unit, A]", "member" : "proptics.law.discipline.PrismTests.apply", "link" : "proptics\/law\/discipline\/PrismTests$.html#apply[S,A](_prism:proptics.Prism[S,A]):proptics.law.discipline.PrismTests[S,Unit,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/PrismTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/PrismTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/PrismTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/PrismTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/PrismTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/PrismTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/PrismTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/PrismTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/PrismTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/PrismTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/PrismTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/PrismTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/PrismTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/PrismTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/PrismTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/PrismTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/PrismTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/PrismTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/PrismTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/PrismTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/PrismTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/PrismTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/PrismTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/PrismTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "prism", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbT: Arbitrary[T], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.PrismTests.prism", "link" : "proptics\/law\/discipline\/PrismTests.html#prism(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbT:org.scalacheck.Arbitrary[T],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A]):PrismTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/PrismTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/PrismTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/PrismTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/PrismTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/PrismTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/PrismTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/PrismTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/PrismTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/PrismTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/PrismTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/PrismTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/PrismTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/PrismTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/PrismTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/PrismTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/PrismTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/PrismTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/PrismTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/PrismTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/PrismTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(t: T): PrismLaws[S, A]", "member" : "proptics.law.discipline.PrismTests.laws", "link" : "proptics\/law\/discipline\/PrismTests.html#laws(t:T):proptics.law.PrismLaws[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.ReverseTests", "object" : "proptics\/law\/discipline\/ReverseTests$.html", "members_object" : [{"label" : "apply", "tail" : "(): ReverseTests[S, T]", "member" : "proptics.law.discipline.ReverseTests.apply", "link" : "proptics\/law\/discipline\/ReverseTests$.html#apply[S,T]:proptics.law.discipline.ReverseTests[S,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/ReverseTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/ReverseTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/ReverseTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/ReverseTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/ReverseTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/ReverseTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/ReverseTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ReverseTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ReverseTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ReverseTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/ReverseTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/ReverseTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/ReverseTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/ReverseTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/ReverseTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/ReverseTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/ReverseTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/ReverseTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/ReverseTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/ReverseTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/ReverseTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/ReverseTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/ReverseTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/ReverseTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "reverse", "tail" : "(ev: Reverse[S, T], eqS: Eq[S], eqT: Eq[T], arbS: Arbitrary[S], arbT: Arbitrary[T], arbOp: Arbitrary[(T) => T]): RuleSet", "member" : "proptics.law.discipline.ReverseTests.reverse", "link" : "proptics\/law\/discipline\/ReverseTests.html#reverse(implicitev:proptics.typeclass.Reverse[S,T],impliciteqS:cats.Eq[S],impliciteqT:cats.Eq[T],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbT:org.scalacheck.Arbitrary[T],implicitarbOp:org.scalacheck.Arbitrary[T=>T]):ReverseTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/ReverseTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/ReverseTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/ReverseTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/ReverseTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/ReverseTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/ReverseTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/ReverseTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/ReverseTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ReverseTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ReverseTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/ReverseTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/ReverseTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/ReverseTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/ReverseTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/ReverseTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/ReverseTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/ReverseTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/ReverseTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/ReverseTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/ReverseTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.SetterTests", "object" : "proptics\/law\/discipline\/SetterTests$.html", "members_object" : [{"label" : "apply", "tail" : "(_setter: Setter[S, A]): SetterTests[S, A]", "member" : "proptics.law.discipline.SetterTests.apply", "link" : "proptics\/law\/discipline\/SetterTests$.html#apply[S,A](_setter:proptics.Setter[S,A]):proptics.law.discipline.SetterTests[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/SetterTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/SetterTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/SetterTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/SetterTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/SetterTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/SetterTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/SetterTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/SetterTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/SetterTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/SetterTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/SetterTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/SetterTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/SetterTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/SetterTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/SetterTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/SetterTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/SetterTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/SetterTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/SetterTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/SetterTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/SetterTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/SetterTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/SetterTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/SetterTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "setter", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.SetterTests.setter", "link" : "proptics\/law\/discipline\/SetterTests.html#setter(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A]):SetterTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/SetterTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/SetterTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/SetterTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/SetterTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/SetterTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/SetterTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/SetterTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/SetterTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/SetterTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/SetterTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/SetterTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/SetterTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/SetterTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/SetterTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/SetterTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/SetterTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/SetterTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/SetterTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/SetterTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/SetterTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): SetterLaws[S, A]", "member" : "proptics.law.discipline.SetterTests.laws", "link" : "proptics\/law\/discipline\/SetterTests.html#laws:proptics.law.SetterLaws[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.SuffixedTests", "object" : "proptics\/law\/discipline\/SuffixedTests$.html", "members_object" : [{"label" : "apply", "tail" : "(): SuffixedTests[S, T]", "member" : "proptics.law.discipline.SuffixedTests.apply", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#apply[S,T]:proptics.law.discipline.SuffixedTests[S,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/SuffixedTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/SuffixedTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/SuffixedTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/SuffixedTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/SuffixedTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/SuffixedTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/SuffixedTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "suffixed", "tail" : "(ev: Suffixed[S, T], eqS: Eq[S], eqT: Eq[T], arbS: Arbitrary[S], arbT: Arbitrary[T], arbOp: Arbitrary[(T) => T], arbOp2: Arbitrary[(Option[T]) => Option[T]]): RuleSet", "member" : "proptics.law.discipline.SuffixedTests.suffixed", "link" : "proptics\/law\/discipline\/SuffixedTests.html#suffixed(implicitev:proptics.typeclass.Suffixed[S,T],impliciteqS:cats.Eq[S],impliciteqT:cats.Eq[T],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbT:org.scalacheck.Arbitrary[T],implicitarbOp:org.scalacheck.Arbitrary[T=>T],implicitarbOp2:org.scalacheck.Arbitrary[Option[T]=>Option[T]]):SuffixedTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/SuffixedTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/SuffixedTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/SuffixedTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/SuffixedTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/SuffixedTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/SuffixedTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/SuffixedTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/SuffixedTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/SuffixedTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/SuffixedTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/SuffixedTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/SuffixedTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/SuffixedTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/SuffixedTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/SuffixedTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/SuffixedTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/SuffixedTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/SuffixedTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/SuffixedTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/SuffixedTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.TraversalTests", "object" : "proptics\/law\/discipline\/TraversalTests$.html", "members_object" : [{"label" : "apply", "tail" : "(_traversal: Traversal[S, A]): TraversalTests[S, A]", "member" : "proptics.law.discipline.TraversalTests.apply", "link" : "proptics\/law\/discipline\/TraversalTests$.html#apply[S,A](_traversal:proptics.Traversal[S,A]):proptics.law.discipline.TraversalTests[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/TraversalTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/TraversalTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/TraversalTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/TraversalTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/TraversalTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/TraversalTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/TraversalTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/TraversalTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/TraversalTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/TraversalTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/TraversalTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/TraversalTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/TraversalTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/TraversalTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/TraversalTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/TraversalTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/TraversalTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/TraversalTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/TraversalTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/TraversalTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/TraversalTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/TraversalTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/TraversalTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/TraversalTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "traversal", "tail" : "(eqS: Eq[S], eqA: Eq[A], arbS: Arbitrary[S], arbA: Arbitrary[A], arbAA: Arbitrary[(A) => A]): RuleSet", "member" : "proptics.law.discipline.TraversalTests.traversal", "link" : "proptics\/law\/discipline\/TraversalTests.html#traversal(impliciteqS:cats.Eq[S],impliciteqA:cats.Eq[A],implicitarbS:org.scalacheck.Arbitrary[S],implicitarbA:org.scalacheck.Arbitrary[A],implicitarbAA:org.scalacheck.Arbitrary[A=>A]):TraversalTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/TraversalTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/TraversalTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/TraversalTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/TraversalTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/TraversalTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/TraversalTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/TraversalTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/TraversalTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/TraversalTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/TraversalTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/TraversalTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/TraversalTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/TraversalTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/TraversalTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/TraversalTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/TraversalTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/TraversalTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/TraversalTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/TraversalTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/TraversalTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): TraversalLaws[S, A]", "member" : "proptics.law.discipline.TraversalTests.laws", "link" : "proptics\/law\/discipline\/TraversalTests.html#laws:proptics.law.TraversalLaws[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.TraverseWithIndexTests", "object" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: TraverseWithIndex[F, I]): TraverseWithIndexTests[F, I]", "member" : "proptics.law.discipline.TraverseWithIndexTests.apply", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#apply[F[_],I](implicitev:proptics.indices.TraverseWithIndex[F,I]):proptics.law.discipline.TraverseWithIndexTests[F,I]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/TraverseWithIndexTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "traverseWithIndex", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], arg3: Arbitrary[M], arg4: CommutativeApplicative[X], arg5: CommutativeApplicative[Y], ArbFA: Arbitrary[F[A]], ArbFB: Arbitrary[F[B]], ArbXB: Arbitrary[X[B]], ArbXM: Arbitrary[X[M]], ArbYB: Arbitrary[Y[B]], ArbYC: Arbitrary[Y[C]], ArbYM: Arbitrary[Y[M]], ArbFXM: Arbitrary[F[X[M]]], ArbAI2B: Arbitrary[(A, I) => B], ArbBI2C: Arbitrary[(B, I) => C], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], CogenM: Cogen[M], M: CommutativeMonoid[M], MA: CommutativeMonoid[A], EqFA: Eq[F[A]], EqFB: Eq[F[B]], EqFC: Eq[F[C]], EqM: Eq[M], EqA: Eq[A], EqXYFC: Eq[X[Y[F[C]]]], EqXFB: Eq[X[F[B]]], EqYFB: Eq[Y[F[B]]], EqXFM: Eq[X[F[M]]], EqYFM: Eq[Y[F[M]]], EqOptionA: Eq[Option[A]]): RuleSet", "member" : "proptics.law.discipline.TraverseWithIndexTests.traverseWithIndex", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#traverseWithIndex[A,B,C,M,X[_],Y[_]](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitevidence$4:org.scalacheck.Arbitrary[M],implicitevidence$5:cats.CommutativeApplicative[X],implicitevidence$6:cats.CommutativeApplicative[Y],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitArbFB:org.scalacheck.Arbitrary[F[B]],implicitArbXB:org.scalacheck.Arbitrary[X[B]],implicitArbXM:org.scalacheck.Arbitrary[X[M]],implicitArbYB:org.scalacheck.Arbitrary[Y[B]],implicitArbYC:org.scalacheck.Arbitrary[Y[C]],implicitArbYM:org.scalacheck.Arbitrary[Y[M]],implicitArbFXM:org.scalacheck.Arbitrary[F[X[M]]],implicitArbAI2B:org.scalacheck.Arbitrary[(A,I)=>B],implicitArbBI2C:org.scalacheck.Arbitrary[(B,I)=>C],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitCogenM:org.scalacheck.Cogen[M],implicitM:cats.kernel.CommutativeMonoid[M],implicitMA:cats.kernel.CommutativeMonoid[A],implicitEqFA:cats.Eq[F[A]],implicitEqFB:cats.Eq[F[B]],implicitEqFC:cats.Eq[F[C]],implicitEqM:cats.Eq[M],implicitEqA:cats.Eq[A],implicitEqXYFC:cats.Eq[X[Y[F[C]]]],implicitEqXFB:cats.Eq[X[F[B]]],implicitEqYFB:cats.Eq[Y[F[B]]],implicitEqXFM:cats.Eq[X[F[M]]],implicitEqYFM:cats.Eq[Y[F[M]]],implicitEqOptionA:cats.Eq[Option[A]]):TraverseWithIndexTests.this.RuleSet", "kind" : "def"}, {"label" : "traverse", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], arg3: Arbitrary[M], arg4: CommutativeApplicative[X], arg5: CommutativeApplicative[Y], ArbFA: Arbitrary[F[A]], ArbFB: Arbitrary[F[B]], ArbXB: Arbitrary[X[B]], ArbXM: Arbitrary[X[M]], ArbYB: Arbitrary[Y[B]], ArbYC: Arbitrary[Y[C]], ArbYM: Arbitrary[Y[M]], ArbFXM: Arbitrary[F[X[M]]], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], CogenM: Cogen[M], M: CommutativeMonoid[M], MA: CommutativeMonoid[A], EqFA: Eq[F[A]], EqFC: Eq[F[C]], EqM: Eq[M], EqA: Eq[A], EqXYFC: Eq[X[Y[F[C]]]], EqXFB: Eq[X[F[B]]], EqYFB: Eq[Y[F[B]]], EqXFM: Eq[X[F[M]]], EqYFM: Eq[Y[F[M]]], EqOptionA: Eq[Option[A]]): RuleSet", "member" : "cats.laws.discipline.TraverseTests.traverse", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#traverse[A,B,C,M,X[_],Y[_]](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitevidence$4:org.scalacheck.Arbitrary[M],implicitevidence$5:cats.CommutativeApplicative[X],implicitevidence$6:cats.CommutativeApplicative[Y],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitArbFB:org.scalacheck.Arbitrary[F[B]],implicitArbXB:org.scalacheck.Arbitrary[X[B]],implicitArbXM:org.scalacheck.Arbitrary[X[M]],implicitArbYB:org.scalacheck.Arbitrary[Y[B]],implicitArbYC:org.scalacheck.Arbitrary[Y[C]],implicitArbYM:org.scalacheck.Arbitrary[Y[M]],implicitArbFXM:org.scalacheck.Arbitrary[F[X[M]]],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitCogenM:org.scalacheck.Cogen[M],implicitM:cats.kernel.CommutativeMonoid[M],implicitMA:cats.kernel.CommutativeMonoid[A],implicitEqFA:cats.Eq[F[A]],implicitEqFC:cats.Eq[F[C]],implicitEqM:cats.Eq[M],implicitEqA:cats.Eq[A],implicitEqXYFC:cats.Eq[X[Y[F[C]]]],implicitEqXFB:cats.Eq[X[F[B]]],implicitEqYFB:cats.Eq[Y[F[B]]],implicitEqXFM:cats.Eq[X[F[M]]],implicitEqYFM:cats.Eq[Y[F[M]]],implicitEqOptionA:cats.Eq[Option[A]]):TraverseTests.this.RuleSet", "kind" : "def"}, {"label" : "unorderedTraverse", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], arg3: CommutativeApplicative[X], arg4: CommutativeApplicative[Y], ArbFA: Arbitrary[F[A]], ArbFXB: Arbitrary[F[X[B]]], ArbXB: Arbitrary[X[B]], ArbYB: Arbitrary[Y[B]], ArbYC: Arbitrary[Y[C]], CogenA: Cogen[A], CogenB: Cogen[B], Ca: CommutativeMonoid[A], Cb: CommutativeMonoid[B], EqA: Eq[A], EqB: Eq[B], EqXYFC: Eq[X[Y[F[C]]]], EqXFB: Eq[X[F[B]]], EqYFB: Eq[Y[F[B]]]): RuleSet", "member" : "cats.laws.discipline.UnorderedTraverseTests.unorderedTraverse", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#unorderedTraverse[A,B,C,X[_<:<?>],Y[_<:<?>]](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitevidence$4:cats.CommutativeApplicative[X],implicitevidence$5:cats.CommutativeApplicative[Y],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitArbFXB:org.scalacheck.Arbitrary[F[X[B]]],implicitArbXB:org.scalacheck.Arbitrary[X[B]],implicitArbYB:org.scalacheck.Arbitrary[Y[B]],implicitArbYC:org.scalacheck.Arbitrary[Y[C]],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCa:cats.kernel.CommutativeMonoid[A],implicitCb:cats.kernel.CommutativeMonoid[B],implicitEqA:cats.Eq[A],implicitEqB:cats.Eq[B],implicitEqXYFC:cats.Eq[X[Y[F[C]]]],implicitEqXFB:cats.Eq[X[F[B]]],implicitEqYFB:cats.Eq[Y[F[B]]]):UnorderedTraverseTests.this.RuleSet", "kind" : "def"}, {"label" : "foldable", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], ArbFA: Arbitrary[F[A]], A: CommutativeMonoid[A], B: CommutativeMonoid[B], CogenA: Cogen[A], CogenB: Cogen[B], EqA: Eq[A], EqFA: Eq[F[A]], EqB: Eq[B], EqOptionB: Eq[Option[B]], EqOptionA: Eq[Option[A]]): RuleSet", "member" : "cats.laws.discipline.FoldableTests.foldable", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#foldable[A,B](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitA:cats.kernel.CommutativeMonoid[A],implicitB:cats.kernel.CommutativeMonoid[B],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitEqA:cats.Eq[A],implicitEqFA:cats.Eq[F[A]],implicitEqB:cats.Eq[B],implicitEqOptionB:cats.Eq[Option[B]],implicitEqOptionA:cats.Eq[Option[A]]):FoldableTests.this.RuleSet", "kind" : "def"}, {"label" : "unorderedFoldable", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], ArbFA: Arbitrary[F[A]], ArbF: Arbitrary[(A) => B], CogenA: Cogen[A], A: CommutativeMonoid[A], B: CommutativeMonoid[B], EqFA: Eq[A], EqFB: Eq[B]): RuleSet", "member" : "cats.laws.discipline.UnorderedFoldableTests.unorderedFoldable", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#unorderedFoldable[A,B](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitArbF:org.scalacheck.Arbitrary[A=>B],implicitCogenA:org.scalacheck.Cogen[A],implicitA:cats.kernel.CommutativeMonoid[A],implicitB:cats.kernel.CommutativeMonoid[B],implicitEqFA:cats.Eq[A],implicitEqFB:cats.Eq[B]):UnorderedFoldableTests.this.RuleSet", "kind" : "def"}, {"label" : "functor", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], ArbFA: Arbitrary[F[A]], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], EqFA: Eq[F[A]], EqFC: Eq[F[C]]): RuleSet", "member" : "cats.laws.discipline.FunctorTests.functor", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#functor[A,B,C](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitEqFA:cats.Eq[F[A]],implicitEqFC:cats.Eq[F[C]]):FunctorTests.this.RuleSet", "kind" : "def"}, {"label" : "invariant", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], ArbFA: Arbitrary[F[A]], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], EqFA: Eq[F[A]], EqFC: Eq[F[C]]): RuleSet", "member" : "cats.laws.discipline.InvariantTests.invariant", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#invariant[A,B,C](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitArbFA:org.scalacheck.Arbitrary[F[A]],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitEqFA:cats.Eq[F[A]],implicitEqFC:cats.Eq[F[C]]):InvariantTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): TraverseWithIndexLaws[F, I]", "member" : "proptics.law.discipline.TraverseWithIndexTests.laws", "link" : "proptics\/law\/discipline\/TraverseWithIndexTests.html#laws:proptics.law.TraverseWithIndexLaws[F,I]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.discipline.WanderTests", "object" : "proptics\/law\/discipline\/WanderTests$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Wander[F]): WanderTests[F]", "member" : "proptics.law.discipline.WanderTests.apply", "link" : "proptics\/law\/discipline\/WanderTests$.html#apply[F[_,_]](implicitev:proptics.profunctor.Wander[F]):proptics.law.discipline.WanderTests[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/WanderTests$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/WanderTests$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/WanderTests$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/WanderTests$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/WanderTests$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/WanderTests$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/WanderTests$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/WanderTests$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/WanderTests$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/WanderTests$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/WanderTests$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/WanderTests$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/WanderTests$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/WanderTests$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/WanderTests$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/WanderTests$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/WanderTests$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/WanderTests$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/WanderTests$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/discipline\/WanderTests.html", "kind" : "trait", "members_trait" : [{"label" : "SimpleRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.SimpleRuleSet", "link" : "proptics\/law\/discipline\/WanderTests.html#SimpleRuleSetextendsLaws.this.DefaultRuleSet", "kind" : "class"}, {"label" : "DefaultRuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.DefaultRuleSet", "link" : "proptics\/law\/discipline\/WanderTests.html#DefaultRuleSetextendsLaws.this.RuleSetwithLaws.this.HasOneParent", "kind" : "class"}, {"label" : "HasOneParent", "tail" : "", "member" : "org.typelevel.discipline.Laws.HasOneParent", "link" : "proptics\/law\/discipline\/WanderTests.html#HasOneParentextendsAnyRef", "kind" : "trait"}, {"label" : "RuleSet", "tail" : "", "member" : "org.typelevel.discipline.Laws.RuleSet", "link" : "proptics\/law\/discipline\/WanderTests.html#RuleSetextendsAnyRef", "kind" : "trait"}, {"label" : "wander", "tail" : "(arg0: Arbitrary[A], arg1: Arbitrary[B], arg2: Arbitrary[C], arg3: Arbitrary[D], arg4: Arbitrary[E], arg5: Arbitrary[G], wander: Wander[F], ArbFAB: Arbitrary[F[A, B]], ArbFCD: Arbitrary[F[C, D]], CogenA: Cogen[A], CogenB: Cogen[B], CogenC: Cogen[C], CogenD: Cogen[D], CogenE: Cogen[E], EqFAB: Eq[F[A, B]], EqFAD: Eq[F[A, D]], EqFAG: Eq[F[A, G]], EqFACB: Eq[F[(A, C), B]], EqFCAB: Eq[F[(C, A), B]], EqFACBC: Eq[F[(A, C), (B, C)]], EqFDADB: Eq[F[(D, A), (D, B)]], EqFACBD: Eq[F[(A, C), (B, D)]], EqFCADB: Eq[F[(C, A), (D, B)]], EqFEitherABC: Eq[F[A, Either[B, C]]], EqFEitherACB: Eq[F[A, Either[C, B]]], EqFACDBCD: Eq[F[((A, C), D), ((B, C), D)]], EqFDCADCB: Eq[F[(D, (C, A)), (D, (C, B))]], LEqFEitherABC: Eq[F[Either[C, A], Either[C, B]]], REqFEitherABC: Eq[F[Either[A, C], Either[B, C]]], EitherAssociationACB: Eq[F[Either[Either[A, C], B], Either[Either[B, C], B]]], EitherAssociationBCA: Eq[F[Either[B, Either[C, A]], Either[B, Either[C, B]]]]): RuleSet", "member" : "proptics.law.discipline.WanderTests.wander", "link" : "proptics\/law\/discipline\/WanderTests.html#wander[A,B,C,D,E,G](implicitevidence$1:org.scalacheck.Arbitrary[A],implicitevidence$2:org.scalacheck.Arbitrary[B],implicitevidence$3:org.scalacheck.Arbitrary[C],implicitevidence$4:org.scalacheck.Arbitrary[D],implicitevidence$5:org.scalacheck.Arbitrary[E],implicitevidence$6:org.scalacheck.Arbitrary[G],implicitwander:proptics.profunctor.Wander[F],implicitArbFAB:org.scalacheck.Arbitrary[F[A,B]],implicitArbFCD:org.scalacheck.Arbitrary[F[C,D]],implicitCogenA:org.scalacheck.Cogen[A],implicitCogenB:org.scalacheck.Cogen[B],implicitCogenC:org.scalacheck.Cogen[C],implicitCogenD:org.scalacheck.Cogen[D],implicitCogenE:org.scalacheck.Cogen[E],implicitEqFAB:cats.Eq[F[A,B]],implicitEqFAD:cats.Eq[F[A,D]],implicitEqFAG:cats.Eq[F[A,G]],implicitEqFACB:cats.Eq[F[(A,C),B]],implicitEqFCAB:cats.Eq[F[(C,A),B]],implicitEqFACBC:cats.Eq[F[(A,C),(B,C)]],implicitEqFDADB:cats.Eq[F[(D,A),(D,B)]],implicitEqFACBD:cats.Eq[F[(A,C),(B,D)]],implicitEqFCADB:cats.Eq[F[(C,A),(D,B)]],implicitEqFEitherABC:cats.Eq[F[A,Either[B,C]]],implicitEqFEitherACB:cats.Eq[F[A,Either[C,B]]],implicitEqFACDBCD:cats.Eq[F[((A,C),D),((B,C),D)]],implicitEqFDCADCB:cats.Eq[F[(D,(C,A)),(D,(C,B))]],implicitLEqFEitherABC:cats.Eq[F[Either[C,A],Either[C,B]]],implicitREqFEitherABC:cats.Eq[F[Either[A,C],Either[B,C]]],implicitEitherAssociationACB:cats.Eq[F[Either[Either[A,C],B],Either[Either[B,C],B]]],implicitEitherAssociationBCA:cats.Eq[F[Either[B,Either[C,A]],Either[B,Either[C,B]]]]):WanderTests.this.RuleSet", "kind" : "def"}, {"label" : "emptyRuleSet", "tail" : "(): RuleSet", "member" : "org.typelevel.discipline.Laws.emptyRuleSet", "link" : "proptics\/law\/discipline\/WanderTests.html#emptyRuleSet:Laws.this.RuleSet", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/discipline\/WanderTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/discipline\/WanderTests.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/discipline\/WanderTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/discipline\/WanderTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/discipline\/WanderTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/discipline\/WanderTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/discipline\/WanderTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/WanderTests.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/WanderTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/discipline\/WanderTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/discipline\/WanderTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/discipline\/WanderTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/discipline\/WanderTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/discipline\/WanderTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/discipline\/WanderTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/discipline\/WanderTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/discipline\/WanderTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/discipline\/WanderTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/discipline\/WanderTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "laws", "tail" : "(): WanderLaws[F]", "member" : "proptics.law.discipline.WanderTests.laws", "link" : "proptics\/law\/discipline\/WanderTests.html#laws:proptics.law.WanderLaws[F]", "kind" : "abstract def"}], "shortDescription" : ""}], "proptics.law" : [{"name" : "proptics.law.AffineTraversalLaws", "object" : "proptics\/law\/AffineTraversalLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_affineTraversal: AffineTraversal[S, A]): AffineTraversalLaws[S, A]", "member" : "proptics.law.AffineTraversalLaws.apply", "link" : "proptics\/law\/AffineTraversalLaws$.html#apply[S,A](_affineTraversal:proptics.AffineTraversal[S,A]):proptics.law.AffineTraversalLaws[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/AffineTraversalLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/AffineTraversalLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/AffineTraversalLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/AffineTraversalLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/AffineTraversalLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/AffineTraversalLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/AffineTraversalLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AffineTraversalLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AffineTraversalLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AffineTraversalLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/AffineTraversalLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/AffineTraversalLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/AffineTraversalLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/AffineTraversalLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/AffineTraversalLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/AffineTraversalLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/AffineTraversalLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/AffineTraversalLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/AffineTraversalLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/AffineTraversalLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeOver", "tail" : "(s: S)(f: (A) => A)(g: (A) => A): IsEq[S]", "member" : "proptics.law.AffineTraversalLaws.composeOver", "link" : "proptics\/law\/AffineTraversalLaws.html#composeOver(s:S)(f:A=>A)(g:A=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.AffineTraversalLaws.overIdentity", "link" : "proptics\/law\/AffineTraversalLaws.html#overIdentity(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.AffineTraversalLaws.setSet", "link" : "proptics\/law\/AffineTraversalLaws.html#setSet(s:S,a:A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "previewSet", "tail" : "(s: S, a: A): IsEq[Option[A]]", "member" : "proptics.law.AffineTraversalLaws.previewSet", "link" : "proptics\/law\/AffineTraversalLaws.html#previewSet(s:S,a:A):cats.kernel.laws.IsEq[Option[A]]", "kind" : "def"}, {"label" : "getSet", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.AffineTraversalLaws.getSet", "link" : "proptics\/law\/AffineTraversalLaws.html#getSet(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "consistentFoci", "tail" : "(s: S, f: (A) => A, g: (A) => A): IsEq[S]", "member" : "proptics.law.AffineTraversalLaws.consistentFoci", "link" : "proptics\/law\/AffineTraversalLaws.html#consistentFoci(s:S,f:A=>A,g:A=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "respectPurity", "tail" : "(s: S)(arg0: Applicative[F]): IsEq[F[S]]", "member" : "proptics.law.AffineTraversalLaws.respectPurity", "link" : "proptics\/law\/AffineTraversalLaws.html#respectPurity[F[_]](s:S)(implicitevidence$1:cats.Applicative[F]):cats.kernel.laws.IsEq[F[S]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/AffineTraversalLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/AffineTraversalLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/AffineTraversalLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/AffineTraversalLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/AffineTraversalLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/AffineTraversalLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/AffineTraversalLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AffineTraversalLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AffineTraversalLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AffineTraversalLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/AffineTraversalLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/AffineTraversalLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/AffineTraversalLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/AffineTraversalLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/AffineTraversalLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/AffineTraversalLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/AffineTraversalLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/AffineTraversalLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/AffineTraversalLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "affineTraversal", "tail" : "(): AffineTraversal[S, A]", "member" : "proptics.law.AffineTraversalLaws.affineTraversal", "link" : "proptics\/law\/AffineTraversalLaws.html#affineTraversal:proptics.AffineTraversal[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.ALensLaws", "object" : "proptics\/law\/ALensLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_aLens: ALens[S, A]): ALensLaws[S, A]", "member" : "proptics.law.ALensLaws.apply", "link" : "proptics\/law\/ALensLaws$.html#apply[S,A](_aLens:proptics.ALens[S,A]):proptics.law.ALensLaws[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/ALensLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/ALensLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/ALensLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/ALensLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/ALensLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/ALensLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/ALensLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ALensLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ALensLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ALensLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/ALensLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/ALensLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/ALensLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/ALensLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/ALensLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/ALensLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/ALensLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/ALensLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/ALensLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/ALensLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeFocusLens", "tail" : "(s: S, a: A): IsEq[A]", "member" : "proptics.law.ALensLaws.composeFocusLens", "link" : "proptics\/law\/ALensLaws.html#composeFocusLens(s:S,a:A):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "composeSourceLens", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.ALensLaws.composeSourceLens", "link" : "proptics\/law\/ALensLaws.html#composeSourceLens(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "composeOver", "tail" : "(s: S)(f: (A) => A)(g: (A) => A): IsEq[S]", "member" : "proptics.law.ALensLaws.composeOver", "link" : "proptics\/law\/ALensLaws.html#composeOver(s:S)(f:A=>A)(g:A=>A):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.ALensLaws.overIdentity", "link" : "proptics\/law\/ALensLaws.html#overIdentity(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.ALensLaws.setSet", "link" : "proptics\/law\/ALensLaws.html#setSet(s:S,a:A):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "getSet", "tail" : "(s: S, a: A): IsEq[A]", "member" : "proptics.law.ALensLaws.getSet", "link" : "proptics\/law\/ALensLaws.html#getSet(s:S,a:A):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "setGet", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.ALensLaws.setGet", "link" : "proptics\/law\/ALensLaws.html#setGet(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/ALensLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/ALensLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/ALensLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/ALensLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/ALensLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/ALensLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/ALensLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ALensLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ALensLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ALensLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/ALensLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/ALensLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/ALensLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/ALensLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/ALensLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/ALensLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/ALensLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/ALensLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/ALensLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "aLens", "tail" : "(): ALens[S, A]", "member" : "proptics.law.ALensLaws.aLens", "link" : "proptics\/law\/ALensLaws.html#aLens:proptics.ALens[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.AnAffineTraversalLaws", "object" : "proptics\/law\/AnAffineTraversalLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_anAffineTraversal: AnAffineTraversal[S, A]): AnAffineTraversalLaws[S, A]", "member" : "proptics.law.AnAffineTraversalLaws.apply", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#apply[S,A](_anAffineTraversal:proptics.AnAffineTraversal[S,A]):proptics.law.AnAffineTraversalLaws[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/AnAffineTraversalLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/AnAffineTraversalLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/AnAffineTraversalLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeOver", "tail" : "(s: S)(f: (A) => A)(g: (A) => A): IsEq[S]", "member" : "proptics.law.AnAffineTraversalLaws.composeOver", "link" : "proptics\/law\/AnAffineTraversalLaws.html#composeOver(s:S)(f:A=>A)(g:A=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.AnAffineTraversalLaws.overIdentity", "link" : "proptics\/law\/AnAffineTraversalLaws.html#overIdentity(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.AnAffineTraversalLaws.setSet", "link" : "proptics\/law\/AnAffineTraversalLaws.html#setSet(s:S,a:A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "previewSet", "tail" : "(s: S, a: A): IsEq[Option[A]]", "member" : "proptics.law.AnAffineTraversalLaws.previewSet", "link" : "proptics\/law\/AnAffineTraversalLaws.html#previewSet(s:S,a:A):cats.kernel.laws.IsEq[Option[A]]", "kind" : "def"}, {"label" : "getSet", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.AnAffineTraversalLaws.getSet", "link" : "proptics\/law\/AnAffineTraversalLaws.html#getSet(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "consistentFoci", "tail" : "(s: S, f: (A) => A, g: (A) => A): IsEq[S]", "member" : "proptics.law.AnAffineTraversalLaws.consistentFoci", "link" : "proptics\/law\/AnAffineTraversalLaws.html#consistentFoci(s:S,f:A=>A,g:A=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "respectPurity", "tail" : "(s: S)(arg0: Applicative[F]): IsEq[F[S]]", "member" : "proptics.law.AnAffineTraversalLaws.respectPurity", "link" : "proptics\/law\/AnAffineTraversalLaws.html#respectPurity[F[_]](s:S)(implicitevidence$1:cats.Applicative[F]):cats.kernel.laws.IsEq[F[S]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/AnAffineTraversalLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/AnAffineTraversalLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/AnAffineTraversalLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/AnAffineTraversalLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/AnAffineTraversalLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/AnAffineTraversalLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/AnAffineTraversalLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnAffineTraversalLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnAffineTraversalLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnAffineTraversalLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/AnAffineTraversalLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/AnAffineTraversalLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/AnAffineTraversalLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/AnAffineTraversalLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/AnAffineTraversalLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/AnAffineTraversalLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/AnAffineTraversalLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/AnAffineTraversalLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/AnAffineTraversalLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "anAffineTraversal", "tail" : "(): AnAffineTraversal[S, A]", "member" : "proptics.law.AnAffineTraversalLaws.anAffineTraversal", "link" : "proptics\/law\/AnAffineTraversalLaws.html#anAffineTraversal:proptics.AnAffineTraversal[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.AnIndexedLensLaws", "object" : "proptics\/law\/AnIndexedLensLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_anIndexedLens: AnIndexedLens[I, S, A]): AnIndexedLensLaws[I, S, A]", "member" : "proptics.law.AnIndexedLensLaws.apply", "link" : "proptics\/law\/AnIndexedLensLaws$.html#apply[I,S,A](_anIndexedLens:proptics.AnIndexedLens[I,S,A]):proptics.law.AnIndexedLensLaws[I,S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/AnIndexedLensLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/AnIndexedLensLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/AnIndexedLensLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/AnIndexedLensLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/AnIndexedLensLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/AnIndexedLensLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/AnIndexedLensLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnIndexedLensLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnIndexedLensLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnIndexedLensLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/AnIndexedLensLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/AnIndexedLensLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/AnIndexedLensLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/AnIndexedLensLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/AnIndexedLensLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/AnIndexedLensLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/AnIndexedLensLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/AnIndexedLensLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/AnIndexedLensLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/AnIndexedLensLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeFocusLens", "tail" : "(s: S, a: A): IsEq[A]", "member" : "proptics.law.AnIndexedLensLaws.composeFocusLens", "link" : "proptics\/law\/AnIndexedLensLaws.html#composeFocusLens(s:S,a:A):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "composeSourceLens", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.AnIndexedLensLaws.composeSourceLens", "link" : "proptics\/law\/AnIndexedLensLaws.html#composeSourceLens(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "composeOver", "tail" : "(s: S)(f: (A, I) => A)(g: (A, I) => A): IsEq[S]", "member" : "proptics.law.AnIndexedLensLaws.composeOver", "link" : "proptics\/law\/AnIndexedLensLaws.html#composeOver(s:S)(f:(A,I)=>A)(g:(A,I)=>A):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.AnIndexedLensLaws.overIdentity", "link" : "proptics\/law\/AnIndexedLensLaws.html#overIdentity(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.AnIndexedLensLaws.setSet", "link" : "proptics\/law\/AnIndexedLensLaws.html#setSet(s:S,a:A):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "getSet", "tail" : "(s: S, a: A): IsEq[A]", "member" : "proptics.law.AnIndexedLensLaws.getSet", "link" : "proptics\/law\/AnIndexedLensLaws.html#getSet(s:S,a:A):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "setGet", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.AnIndexedLensLaws.setGet", "link" : "proptics\/law\/AnIndexedLensLaws.html#setGet(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/AnIndexedLensLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/AnIndexedLensLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/AnIndexedLensLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/AnIndexedLensLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/AnIndexedLensLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/AnIndexedLensLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/AnIndexedLensLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnIndexedLensLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnIndexedLensLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnIndexedLensLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/AnIndexedLensLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/AnIndexedLensLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/AnIndexedLensLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/AnIndexedLensLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/AnIndexedLensLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/AnIndexedLensLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/AnIndexedLensLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/AnIndexedLensLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/AnIndexedLensLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "anIndexedLens", "tail" : "(): AnIndexedLens[I, S, A]", "member" : "proptics.law.AnIndexedLensLaws.anIndexedLens", "link" : "proptics\/law\/AnIndexedLensLaws.html#anIndexedLens:proptics.AnIndexedLens[I,S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.AnIsoLaws", "object" : "proptics\/law\/AnIsoLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_anIso: AnIso[S, A]): AnIsoLaws[S, A]", "member" : "proptics.law.AnIsoLaws.apply", "link" : "proptics\/law\/AnIsoLaws$.html#apply[S,A](_anIso:proptics.AnIso[S,A]):proptics.law.AnIsoLaws[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/AnIsoLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/AnIsoLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/AnIsoLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/AnIsoLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/AnIsoLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/AnIsoLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/AnIsoLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnIsoLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnIsoLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnIsoLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/AnIsoLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/AnIsoLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/AnIsoLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/AnIsoLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/AnIsoLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/AnIsoLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/AnIsoLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/AnIsoLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/AnIsoLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/AnIsoLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeFocusIso", "tail" : "(a: A): IsEq[A]", "member" : "proptics.law.AnIsoLaws.composeFocusIso", "link" : "proptics\/law\/AnIsoLaws.html#composeFocusIso(a:A):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "composeSourceIso", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.AnIsoLaws.composeSourceIso", "link" : "proptics\/law\/AnIsoLaws.html#composeSourceIso(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "composeOver", "tail" : "(s: S)(f: (A) => A)(g: (A) => A): IsEq[S]", "member" : "proptics.law.AnIsoLaws.composeOver", "link" : "proptics\/law\/AnIsoLaws.html#composeOver(s:S)(f:A=>A)(g:A=>A):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.AnIsoLaws.overIdentity", "link" : "proptics\/law\/AnIsoLaws.html#overIdentity(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "focusReversibility", "tail" : "(a: A): IsEq[A]", "member" : "proptics.law.AnIsoLaws.focusReversibility", "link" : "proptics\/law\/AnIsoLaws.html#focusReversibility(a:A):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "sourceReversibility", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.AnIsoLaws.sourceReversibility", "link" : "proptics\/law\/AnIsoLaws.html#sourceReversibility(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/AnIsoLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/AnIsoLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/AnIsoLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/AnIsoLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/AnIsoLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/AnIsoLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/AnIsoLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnIsoLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnIsoLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/AnIsoLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/AnIsoLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/AnIsoLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/AnIsoLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/AnIsoLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/AnIsoLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/AnIsoLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/AnIsoLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/AnIsoLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/AnIsoLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "anIso", "tail" : "(): AnIso[S, A]", "member" : "proptics.law.AnIsoLaws.anIso", "link" : "proptics\/law\/AnIsoLaws.html#anIso:proptics.AnIso[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.APrismLaws", "object" : "proptics\/law\/APrismLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_aPrism: APrism[S, A]): APrismLaws[S, A]", "member" : "proptics.law.APrismLaws.apply", "link" : "proptics\/law\/APrismLaws$.html#apply[S,A](_aPrism:proptics.APrism[S,A]):proptics.law.APrismLaws[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/APrismLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/APrismLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/APrismLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/APrismLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/APrismLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/APrismLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/APrismLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/APrismLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/APrismLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/APrismLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/APrismLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/APrismLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/APrismLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/APrismLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/APrismLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/APrismLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/APrismLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/APrismLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/APrismLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/APrismLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeOver", "tail" : "(s: S)(f: (A) => A)(g: (A) => A): IsEq[S]", "member" : "proptics.law.APrismLaws.composeOver", "link" : "proptics\/law\/APrismLaws.html#composeOver(s:S)(f:A=>A)(g:A=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.APrismLaws.overIdentity", "link" : "proptics\/law\/APrismLaws.html#overIdentity(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.APrismLaws.setSet", "link" : "proptics\/law\/APrismLaws.html#setSet(s:S,a:A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "viewOrModifyReview", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.APrismLaws.viewOrModifyReview", "link" : "proptics\/law\/APrismLaws.html#viewOrModifyReview(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "previewReview", "tail" : "(a: A): IsEq[Option[A]]", "member" : "proptics.law.APrismLaws.previewReview", "link" : "proptics\/law\/APrismLaws.html#previewReview(a:A):cats.kernel.laws.IsEq[Option[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/APrismLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/APrismLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/APrismLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/APrismLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/APrismLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/APrismLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/APrismLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/APrismLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/APrismLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/APrismLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/APrismLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/APrismLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/APrismLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/APrismLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/APrismLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/APrismLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/APrismLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/APrismLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/APrismLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "aPrism", "tail" : "(): APrism[S, A]", "member" : "proptics.law.APrismLaws.aPrism", "link" : "proptics\/law\/APrismLaws.html#aPrism:proptics.APrism[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.ATraversalLaws", "object" : "proptics\/law\/ATraversalLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_aTraversal: ATraversal[S, A]): ATraversalLaws[S, A]", "member" : "proptics.law.ATraversalLaws.apply", "link" : "proptics\/law\/ATraversalLaws$.html#apply[S,A](_aTraversal:proptics.ATraversal[S,A]):proptics.law.ATraversalLaws[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/ATraversalLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/ATraversalLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/ATraversalLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/ATraversalLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/ATraversalLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/ATraversalLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/ATraversalLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ATraversalLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ATraversalLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ATraversalLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/ATraversalLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/ATraversalLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/ATraversalLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/ATraversalLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/ATraversalLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/ATraversalLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/ATraversalLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/ATraversalLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/ATraversalLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/ATraversalLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeOver", "tail" : "(s: S)(f: (A) => A)(g: (A) => A): IsEq[S]", "member" : "proptics.law.ATraversalLaws.composeOver", "link" : "proptics\/law\/ATraversalLaws.html#composeOver(s:S)(f:A=>A)(g:A=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.ATraversalLaws.overIdentity", "link" : "proptics\/law\/ATraversalLaws.html#overIdentity(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.ATraversalLaws.setSet", "link" : "proptics\/law\/ATraversalLaws.html#setSet(s:S,a:A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "setGet", "tail" : "(s: S, f: (A) => A): IsEq[List[A]]", "member" : "proptics.law.ATraversalLaws.setGet", "link" : "proptics\/law\/ATraversalLaws.html#setGet(s:S,f:A=>A):cats.kernel.laws.IsEq[List[A]]", "kind" : "def"}, {"label" : "preview", "tail" : "(s: S): IsEq[Option[A]]", "member" : "proptics.law.ATraversalLaws.preview", "link" : "proptics\/law\/ATraversalLaws.html#preview(s:S):cats.kernel.laws.IsEq[Option[A]]", "kind" : "def"}, {"label" : "consistentFoci", "tail" : "(s: S, f: (A) => A, g: (A) => A): IsEq[S]", "member" : "proptics.law.ATraversalLaws.consistentFoci", "link" : "proptics\/law\/ATraversalLaws.html#consistentFoci(s:S,f:A=>A,g:A=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "respectPurity", "tail" : "(s: S): IsEq[Option[S]]", "member" : "proptics.law.ATraversalLaws.respectPurity", "link" : "proptics\/law\/ATraversalLaws.html#respectPurity(s:S):cats.kernel.laws.IsEq[Option[S]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/ATraversalLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/ATraversalLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/ATraversalLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/ATraversalLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/ATraversalLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/ATraversalLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/ATraversalLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ATraversalLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ATraversalLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ATraversalLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/ATraversalLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/ATraversalLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/ATraversalLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/ATraversalLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/ATraversalLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/ATraversalLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/ATraversalLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/ATraversalLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/ATraversalLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "aTraversal", "tail" : "(): ATraversal[S, A]", "member" : "proptics.law.ATraversalLaws.aTraversal", "link" : "proptics\/law\/ATraversalLaws.html#aTraversal:proptics.ATraversal[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.ChoiceLaws", "object" : "proptics\/law\/ChoiceLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Choice[F]): ChoiceLaws[F]", "member" : "proptics.law.ChoiceLaws.apply", "link" : "proptics\/law\/ChoiceLaws$.html#apply[F[_,_]](implicitev:proptics.profunctor.Choice[F]):proptics.law.ChoiceLaws[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/ChoiceLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/ChoiceLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/ChoiceLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/ChoiceLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/ChoiceLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/ChoiceLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/ChoiceLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ChoiceLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ChoiceLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ChoiceLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/ChoiceLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/ChoiceLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/ChoiceLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/ChoiceLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/ChoiceLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/ChoiceLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/ChoiceLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/ChoiceLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/ChoiceLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/ChoiceLaws.html", "kind" : "trait", "members_trait" : [{"label" : "rightComposeRightDimapConsistent", "tail" : "(fab: F[A, B]): IsEq[F[Either[B, Either[C, A]], Either[B, Either[C, B]]]]", "member" : "proptics.law.ChoiceLaws.rightComposeRightDimapConsistent", "link" : "proptics\/law\/ChoiceLaws.html#rightComposeRightDimapConsistent[A,B,C](fab:F[A,B]):cats.laws.IsEq[F[Either[B,Either[C,A]],Either[B,Either[C,B]]]]", "kind" : "def"}, {"label" : "leftComposeLeftDimapConsistent", "tail" : "(fab: F[A, B]): IsEq[F[Either[Either[A, C], B], Either[Either[B, C], B]]]", "member" : "proptics.law.ChoiceLaws.leftComposeLeftDimapConsistent", "link" : "proptics\/law\/ChoiceLaws.html#leftComposeLeftDimapConsistent[A,B,C](fab:F[A,B]):cats.laws.IsEq[F[Either[Either[A,C],B],Either[Either[B,C],B]]]", "kind" : "def"}, {"label" : "rightLmapRmapConsistent", "tail" : "(fab: F[A, B]): IsEq[F[A, Either[C, B]]]", "member" : "proptics.law.ChoiceLaws.rightLmapRmapConsistent", "link" : "proptics\/law\/ChoiceLaws.html#rightLmapRmapConsistent[A,B,C](fab:F[A,B]):cats.laws.IsEq[F[A,Either[C,B]]]", "kind" : "def"}, {"label" : "leftRmapLmapConsistent", "tail" : "(fab: F[A, B]): IsEq[F[A, Either[B, C]]]", "member" : "proptics.law.ChoiceLaws.leftRmapLmapConsistent", "link" : "proptics\/law\/ChoiceLaws.html#leftRmapLmapConsistent[A,B,C](fab:F[A,B]):cats.laws.IsEq[F[A,Either[B,C]]]", "kind" : "def"}, {"label" : "rightLeftConsistent", "tail" : "(fab: F[A, B]): IsEq[F[Either[C, A], Either[C, B]]]", "member" : "proptics.law.ChoiceLaws.rightLeftConsistent", "link" : "proptics\/law\/ChoiceLaws.html#rightLeftConsistent[A,B,C](fab:F[A,B]):cats.laws.IsEq[F[Either[C,A],Either[C,B]]]", "kind" : "def"}, {"label" : "leftRightConsistent", "tail" : "(fab: F[A, B]): IsEq[F[Either[A, C], Either[B, C]]]", "member" : "proptics.law.ChoiceLaws.leftRightConsistent", "link" : "proptics\/law\/ChoiceLaws.html#leftRightConsistent[A,B,C](fab:F[A,B]):cats.laws.IsEq[F[Either[A,C],Either[B,C]]]", "kind" : "def"}, {"label" : "profunctorRmapComposition", "tail" : "(fab: F[A, B0], f: (B0) => B1, g: (B1) => B2): IsEq[F[A, B2]]", "member" : "cats.laws.ProfunctorLaws.profunctorRmapComposition", "link" : "proptics\/law\/ChoiceLaws.html#profunctorRmapComposition[A,B2,B1,B0](fab:F[A,B0],f:B0=>B1,g:B1=>B2):cats.laws.IsEq[F[A,B2]]", "kind" : "def"}, {"label" : "profunctorLmapComposition", "tail" : "(fab: F[A0, B], f: (A2) => A1, g: (A1) => A0): IsEq[F[A2, B]]", "member" : "cats.laws.ProfunctorLaws.profunctorLmapComposition", "link" : "proptics\/law\/ChoiceLaws.html#profunctorLmapComposition[A2,A1,A0,B](fab:F[A0,B],f:A2=>A1,g:A1=>A0):cats.laws.IsEq[F[A2,B]]", "kind" : "def"}, {"label" : "profunctorRmapIdentity", "tail" : "(fab: F[A, B]): IsEq[F[A, B]]", "member" : "cats.laws.ProfunctorLaws.profunctorRmapIdentity", "link" : "proptics\/law\/ChoiceLaws.html#profunctorRmapIdentity[A,B](fab:F[A,B]):cats.laws.IsEq[F[A,B]]", "kind" : "def"}, {"label" : "profunctorLmapIdentity", "tail" : "(fab: F[A, B]): IsEq[F[A, B]]", "member" : "cats.laws.ProfunctorLaws.profunctorLmapIdentity", "link" : "proptics\/law\/ChoiceLaws.html#profunctorLmapIdentity[A,B](fab:F[A,B]):cats.laws.IsEq[F[A,B]]", "kind" : "def"}, {"label" : "profunctorComposition", "tail" : "(fab: F[A0, B0], f2: (A2) => A1, f1: (A1) => A0, g1: (B0) => B1, g2: (B1) => B2): IsEq[F[A2, B2]]", "member" : "cats.laws.ProfunctorLaws.profunctorComposition", "link" : "proptics\/law\/ChoiceLaws.html#profunctorComposition[A2,A1,A0,B0,B1,B2](fab:F[A0,B0],f2:A2=>A1,f1:A1=>A0,g1:B0=>B1,g2:B1=>B2):cats.laws.IsEq[F[A2,B2]]", "kind" : "def"}, {"label" : "profunctorIdentity", "tail" : "(fab: F[A, B]): IsEq[F[A, B]]", "member" : "cats.laws.ProfunctorLaws.profunctorIdentity", "link" : "proptics\/law\/ChoiceLaws.html#profunctorIdentity[A,B](fab:F[A,B]):cats.laws.IsEq[F[A,B]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/ChoiceLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/ChoiceLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/ChoiceLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/ChoiceLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/ChoiceLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/ChoiceLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/ChoiceLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ChoiceLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ChoiceLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ChoiceLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/ChoiceLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/ChoiceLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/ChoiceLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/ChoiceLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/ChoiceLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/ChoiceLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/ChoiceLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/ChoiceLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/ChoiceLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "F", "tail" : "(): Choice[F]", "member" : "proptics.law.ChoiceLaws.F", "link" : "proptics\/law\/ChoiceLaws.html#F:proptics.profunctor.Choice[F]", "kind" : "implicit abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.ClosedLaws", "object" : "proptics\/law\/ClosedLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Closed[F]): ClosedLaws[F]", "member" : "proptics.law.ClosedLaws.apply", "link" : "proptics\/law\/ClosedLaws$.html#apply[F[_,_]](implicitev:proptics.profunctor.Closed[F]):proptics.law.ClosedLaws[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/ClosedLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/ClosedLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/ClosedLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/ClosedLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/ClosedLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/ClosedLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/ClosedLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ClosedLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ClosedLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ClosedLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/ClosedLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/ClosedLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/ClosedLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/ClosedLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/ClosedLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/ClosedLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/ClosedLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/ClosedLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/ClosedLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/ClosedLaws.html", "kind" : "trait", "members_trait" : [{"label" : "dimapConstIdentityConsistent", "tail" : "(fab: F[A, B]): IsEq[F[A, B]]", "member" : "proptics.law.ClosedLaws.dimapConstIdentityConsistent", "link" : "proptics\/law\/ClosedLaws.html#dimapConstIdentityConsistent[A,B](fab:F[A,B]):cats.laws.IsEq[F[A,B]]", "kind" : "def"}, {"label" : "closedComposeClosedDimapConsistent", "tail" : "(fab: F[A, B]): IsEq[F[(A) => (A) => A, (A) => (A) => B]]", "member" : "proptics.law.ClosedLaws.closedComposeClosedDimapConsistent", "link" : "proptics\/law\/ClosedLaws.html#closedComposeClosedDimapConsistent[A,B](fab:F[A,B]):cats.laws.IsEq[F[A=>(A=>A),A=>(A=>B)]]", "kind" : "def"}, {"label" : "lmapClosedRmapClosedConsistent", "tail" : "(fab: F[A, A]): IsEq[F[(A) => A, (A) => A]]", "member" : "proptics.law.ClosedLaws.lmapClosedRmapClosedConsistent", "link" : "proptics\/law\/ClosedLaws.html#lmapClosedRmapClosedConsistent[A](fab:F[A,A]):cats.laws.IsEq[F[A=>A,A=>A]]", "kind" : "def"}, {"label" : "profunctorRmapComposition", "tail" : "(fab: F[A, B0], f: (B0) => B1, g: (B1) => B2): IsEq[F[A, B2]]", "member" : "cats.laws.ProfunctorLaws.profunctorRmapComposition", "link" : "proptics\/law\/ClosedLaws.html#profunctorRmapComposition[A,B2,B1,B0](fab:F[A,B0],f:B0=>B1,g:B1=>B2):cats.laws.IsEq[F[A,B2]]", "kind" : "def"}, {"label" : "profunctorLmapComposition", "tail" : "(fab: F[A0, B], f: (A2) => A1, g: (A1) => A0): IsEq[F[A2, B]]", "member" : "cats.laws.ProfunctorLaws.profunctorLmapComposition", "link" : "proptics\/law\/ClosedLaws.html#profunctorLmapComposition[A2,A1,A0,B](fab:F[A0,B],f:A2=>A1,g:A1=>A0):cats.laws.IsEq[F[A2,B]]", "kind" : "def"}, {"label" : "profunctorRmapIdentity", "tail" : "(fab: F[A, B]): IsEq[F[A, B]]", "member" : "cats.laws.ProfunctorLaws.profunctorRmapIdentity", "link" : "proptics\/law\/ClosedLaws.html#profunctorRmapIdentity[A,B](fab:F[A,B]):cats.laws.IsEq[F[A,B]]", "kind" : "def"}, {"label" : "profunctorLmapIdentity", "tail" : "(fab: F[A, B]): IsEq[F[A, B]]", "member" : "cats.laws.ProfunctorLaws.profunctorLmapIdentity", "link" : "proptics\/law\/ClosedLaws.html#profunctorLmapIdentity[A,B](fab:F[A,B]):cats.laws.IsEq[F[A,B]]", "kind" : "def"}, {"label" : "profunctorComposition", "tail" : "(fab: F[A0, B0], f2: (A2) => A1, f1: (A1) => A0, g1: (B0) => B1, g2: (B1) => B2): IsEq[F[A2, B2]]", "member" : "cats.laws.ProfunctorLaws.profunctorComposition", "link" : "proptics\/law\/ClosedLaws.html#profunctorComposition[A2,A1,A0,B0,B1,B2](fab:F[A0,B0],f2:A2=>A1,f1:A1=>A0,g1:B0=>B1,g2:B1=>B2):cats.laws.IsEq[F[A2,B2]]", "kind" : "def"}, {"label" : "profunctorIdentity", "tail" : "(fab: F[A, B]): IsEq[F[A, B]]", "member" : "cats.laws.ProfunctorLaws.profunctorIdentity", "link" : "proptics\/law\/ClosedLaws.html#profunctorIdentity[A,B](fab:F[A,B]):cats.laws.IsEq[F[A,B]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/ClosedLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/ClosedLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/ClosedLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/ClosedLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/ClosedLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/ClosedLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/ClosedLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ClosedLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ClosedLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/ClosedLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/ClosedLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/ClosedLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/ClosedLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/ClosedLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/ClosedLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/ClosedLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/ClosedLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/ClosedLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/ClosedLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "F", "tail" : "(): Closed[F]", "member" : "proptics.law.ClosedLaws.F", "link" : "proptics\/law\/ClosedLaws.html#F:proptics.profunctor.Closed[F]", "kind" : "implicit abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.CochoiceLaws", "object" : "proptics\/law\/CochoiceLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Cochoice[F]): CochoiceLaws[F]", "member" : "proptics.law.CochoiceLaws.apply", "link" : "proptics\/law\/CochoiceLaws$.html#apply[F[_,_]](implicitev:proptics.profunctor.Cochoice[F]):proptics.law.CochoiceLaws[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/CochoiceLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/CochoiceLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/CochoiceLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/CochoiceLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/CochoiceLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/CochoiceLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/CochoiceLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/CochoiceLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/CochoiceLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/CochoiceLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/CochoiceLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/CochoiceLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/CochoiceLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/CochoiceLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/CochoiceLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/CochoiceLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/CochoiceLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/CochoiceLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/CochoiceLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/CochoiceLaws.html", "kind" : "trait", "members_trait" : [{"label" : "unrightComposeUnrightDimapConsistent", "tail" : "(fab: F[Either[C, Either[A, B]], Either[C, Either[B, C]]]): IsEq[F[B, C]]", "member" : "proptics.law.CochoiceLaws.unrightComposeUnrightDimapConsistent", "link" : "proptics\/law\/CochoiceLaws.html#unrightComposeUnrightDimapConsistent[A,B,C](fab:F[Either[C,Either[A,B]],Either[C,Either[B,C]]]):cats.laws.IsEq[F[B,C]]", "kind" : "def"}, {"label" : "unleftComposeUnleftDimapConsistent", "tail" : "(fab: F[Either[Either[A, B], C], Either[Either[B, C], C]]): IsEq[F[A, B]]", "member" : "proptics.law.CochoiceLaws.unleftComposeUnleftDimapConsistent", "link" : "proptics\/law\/CochoiceLaws.html#unleftComposeUnleftDimapConsistent[A,B,C](fab:F[Either[Either[A,B],C],Either[Either[B,C],C]]):cats.laws.IsEq[F[A,B]]", "kind" : "def"}, {"label" : "unrightUnLeftConsistent", "tail" : "(fab: F[Either[C, A], Either[C, B]]): IsEq[F[A, B]]", "member" : "proptics.law.CochoiceLaws.unrightUnLeftConsistent", "link" : "proptics\/law\/CochoiceLaws.html#unrightUnLeftConsistent[A,B,C](fab:F[Either[C,A],Either[C,B]]):cats.laws.IsEq[F[A,B]]", "kind" : "def"}, {"label" : "unleftUnrightConsistent", "tail" : "(fab: F[Either[A, C], Either[B, C]]): IsEq[F[A, B]]", "member" : "proptics.law.CochoiceLaws.unleftUnrightConsistent", "link" : "proptics\/law\/CochoiceLaws.html#unleftUnrightConsistent[A,B,C](fab:F[Either[A,C],Either[B,C]]):cats.laws.IsEq[F[A,B]]", "kind" : "def"}, {"label" : "profunctorRmapComposition", "tail" : "(fab: F[A, B0], f: (B0) => B1, g: (B1) => B2): IsEq[F[A, B2]]", "member" : "cats.laws.ProfunctorLaws.profunctorRmapComposition", "link" : "proptics\/law\/CochoiceLaws.html#profunctorRmapComposition[A,B2,B1,B0](fab:F[A,B0],f:B0=>B1,g:B1=>B2):cats.laws.IsEq[F[A,B2]]", "kind" : "def"}, {"label" : "profunctorLmapComposition", "tail" : "(fab: F[A0, B], f: (A2) => A1, g: (A1) => A0): IsEq[F[A2, B]]", "member" : "cats.laws.ProfunctorLaws.profunctorLmapComposition", "link" : "proptics\/law\/CochoiceLaws.html#profunctorLmapComposition[A2,A1,A0,B](fab:F[A0,B],f:A2=>A1,g:A1=>A0):cats.laws.IsEq[F[A2,B]]", "kind" : "def"}, {"label" : "profunctorRmapIdentity", "tail" : "(fab: F[A, B]): IsEq[F[A, B]]", "member" : "cats.laws.ProfunctorLaws.profunctorRmapIdentity", "link" : "proptics\/law\/CochoiceLaws.html#profunctorRmapIdentity[A,B](fab:F[A,B]):cats.laws.IsEq[F[A,B]]", "kind" : "def"}, {"label" : "profunctorLmapIdentity", "tail" : "(fab: F[A, B]): IsEq[F[A, B]]", "member" : "cats.laws.ProfunctorLaws.profunctorLmapIdentity", "link" : "proptics\/law\/CochoiceLaws.html#profunctorLmapIdentity[A,B](fab:F[A,B]):cats.laws.IsEq[F[A,B]]", "kind" : "def"}, {"label" : "profunctorComposition", "tail" : "(fab: F[A0, B0], f2: (A2) => A1, f1: (A1) => A0, g1: (B0) => B1, g2: (B1) => B2): IsEq[F[A2, B2]]", "member" : "cats.laws.ProfunctorLaws.profunctorComposition", "link" : "proptics\/law\/CochoiceLaws.html#profunctorComposition[A2,A1,A0,B0,B1,B2](fab:F[A0,B0],f2:A2=>A1,f1:A1=>A0,g1:B0=>B1,g2:B1=>B2):cats.laws.IsEq[F[A2,B2]]", "kind" : "def"}, {"label" : "profunctorIdentity", "tail" : "(fab: F[A, B]): IsEq[F[A, B]]", "member" : "cats.laws.ProfunctorLaws.profunctorIdentity", "link" : "proptics\/law\/CochoiceLaws.html#profunctorIdentity[A,B](fab:F[A,B]):cats.laws.IsEq[F[A,B]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/CochoiceLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/CochoiceLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/CochoiceLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/CochoiceLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/CochoiceLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/CochoiceLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/CochoiceLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/CochoiceLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/CochoiceLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/CochoiceLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/CochoiceLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/CochoiceLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/CochoiceLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/CochoiceLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/CochoiceLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/CochoiceLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/CochoiceLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/CochoiceLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/CochoiceLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "F", "tail" : "(): Cochoice[F]", "member" : "proptics.law.CochoiceLaws.F", "link" : "proptics\/law\/CochoiceLaws.html#F:proptics.profunctor.Cochoice[F]", "kind" : "implicit abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.FoldableWithIndexLaws", "object" : "proptics\/law\/FoldableWithIndexLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: FoldableWithIndex[F, I]): FoldableWithIndexLaws[F, I]", "member" : "proptics.law.FoldableWithIndexLaws.apply", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#apply[F[_],I](implicitev:proptics.indices.FoldableWithIndex[F,I]):proptics.law.FoldableWithIndexLaws[F,I]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/FoldableWithIndexLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/FoldableWithIndexLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/FoldableWithIndexLaws.html", "kind" : "trait", "members_trait" : [{"label" : "rightFoldWithIndexConsistentWithFoldMapWithIndex", "tail" : "(fa: F[A], f: (A, I) => B)(ev: Monoid[B]): IsEq[B]", "member" : "proptics.law.FoldableWithIndexLaws.rightFoldWithIndexConsistentWithFoldMapWithIndex", "link" : "proptics\/law\/FoldableWithIndexLaws.html#rightFoldWithIndexConsistentWithFoldMapWithIndex[A,B](fa:F[A],f:(A,I)=>B)(implicitev:cats.Monoid[B]):cats.laws.IsEq[B]", "kind" : "def"}, {"label" : "leftFoldWithIndexConsistentWithFoldMapWithIndex", "tail" : "(fa: F[A], f: (A, I) => B)(ev: Monoid[B]): IsEq[B]", "member" : "proptics.law.FoldableWithIndexLaws.leftFoldWithIndexConsistentWithFoldMapWithIndex", "link" : "proptics\/law\/FoldableWithIndexLaws.html#leftFoldWithIndexConsistentWithFoldMapWithIndex[A,B](fa:F[A],f:(A,I)=>B)(implicitev:cats.Monoid[B]):cats.laws.IsEq[B]", "kind" : "def"}, {"label" : "foldRightWithIndexLazy", "tail" : "(fa: F[A]): Boolean", "member" : "proptics.law.FoldableWithIndexLaws.foldRightWithIndexLazy", "link" : "proptics\/law\/FoldableWithIndexLaws.html#foldRightWithIndexLazy[A](fa:F[A]):Boolean", "kind" : "def"}, {"label" : "orderedConsistency", "tail" : "(x: F[A], y: F[A])(arg0: Eq[A], ev: Eq[F[A]]): IsEq[List[A]]", "member" : "cats.laws.FoldableLaws.orderedConsistency", "link" : "proptics\/law\/FoldableWithIndexLaws.html#orderedConsistency[A](x:F[A],y:F[A])(implicitevidence$1:cats.Eq[A],implicitev:cats.Eq[F[A]]):cats.laws.IsEq[List[A]]", "kind" : "def"}, {"label" : "collectFirst_Ref", "tail" : "(fa: F[A], pf: PartialFunction[A, B]): IsEq[Option[B]]", "member" : "cats.laws.FoldableLaws.collectFirst_Ref", "link" : "proptics\/law\/FoldableWithIndexLaws.html#collectFirst_Ref[A,B](fa:F[A],pf:PartialFunction[A,B]):cats.laws.IsEq[Option[B]]", "kind" : "def"}, {"label" : "collectFirstSome_Ref", "tail" : "(fa: F[A], f: (A) => Option[B]): IsEq[Option[B]]", "member" : "cats.laws.FoldableLaws.collectFirstSome_Ref", "link" : "proptics\/law\/FoldableWithIndexLaws.html#collectFirstSome_Ref[A,B](fa:F[A],f:A=>Option[B]):cats.laws.IsEq[Option[B]]", "kind" : "def"}, {"label" : "dropWhile_Ref", "tail" : "(fa: F[A], p: (A) => Boolean): IsEq[List[A]]", "member" : "cats.laws.FoldableLaws.dropWhile_Ref", "link" : "proptics\/law\/FoldableWithIndexLaws.html#dropWhile_Ref[A](fa:F[A],p:A=>Boolean):cats.laws.IsEq[List[A]]", "kind" : "def"}, {"label" : "takeWhile_Ref", "tail" : "(fa: F[A], p: (A) => Boolean): IsEq[List[A]]", "member" : "cats.laws.FoldableLaws.takeWhile_Ref", "link" : "proptics\/law\/FoldableWithIndexLaws.html#takeWhile_Ref[A](fa:F[A],p:A=>Boolean):cats.laws.IsEq[List[A]]", "kind" : "def"}, {"label" : "filter_Ref", "tail" : "(fa: F[A], p: (A) => Boolean): IsEq[List[A]]", "member" : "cats.laws.FoldableLaws.filter_Ref", "link" : "proptics\/law\/FoldableWithIndexLaws.html#filter_Ref[A](fa:F[A],p:A=>Boolean):cats.laws.IsEq[List[A]]", "kind" : "def"}, {"label" : "toListRef", "tail" : "(fa: F[A]): IsEq[List[A]]", "member" : "cats.laws.FoldableLaws.toListRef", "link" : "proptics\/law\/FoldableWithIndexLaws.html#toListRef[A](fa:F[A]):cats.laws.IsEq[List[A]]", "kind" : "def"}, {"label" : "foldRef", "tail" : "(fa: F[A])(A: Monoid[A]): IsEq[A]", "member" : "cats.laws.FoldableLaws.foldRef", "link" : "proptics\/law\/FoldableWithIndexLaws.html#foldRef[A](fa:F[A])(implicitA:cats.Monoid[A]):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "getRef", "tail" : "(fa: F[A], idx: Long): IsEq[Option[A]]", "member" : "cats.laws.FoldableLaws.getRef", "link" : "proptics\/law\/FoldableWithIndexLaws.html#getRef[A](fa:F[A],idx:Long):cats.laws.IsEq[Option[A]]", "kind" : "def"}, {"label" : "reduceRightOptionConsistentWithReduceRightToOption", "tail" : "(fa: F[A], f: (A, A) => A): IsEq[Option[A]]", "member" : "cats.laws.FoldableLaws.reduceRightOptionConsistentWithReduceRightToOption", "link" : "proptics\/law\/FoldableWithIndexLaws.html#reduceRightOptionConsistentWithReduceRightToOption[A](fa:F[A],f:(A,A)=>A):cats.laws.IsEq[Option[A]]", "kind" : "def"}, {"label" : "reduceLeftOptionConsistentWithReduceLeftToOption", "tail" : "(fa: F[A], f: (A, A) => A): IsEq[Option[A]]", "member" : "cats.laws.FoldableLaws.reduceLeftOptionConsistentWithReduceLeftToOption", "link" : "proptics\/law\/FoldableWithIndexLaws.html#reduceLeftOptionConsistentWithReduceLeftToOption[A](fa:F[A],f:(A,A)=>A):cats.laws.IsEq[Option[A]]", "kind" : "def"}, {"label" : "foldRightDeferConsistentWithFoldRight", "tail" : "(fa: F[A], f: (B, A) => B)(M: Monoid[B]): IsEq[B]", "member" : "cats.laws.FoldableLaws.foldRightDeferConsistentWithFoldRight", "link" : "proptics\/law\/FoldableWithIndexLaws.html#foldRightDeferConsistentWithFoldRight[A,B](fa:F[A],f:(B,A)=>B)(implicitM:cats.Monoid[B]):cats.laws.IsEq[B]", "kind" : "def"}, {"label" : "foldMIdentity", "tail" : "(fa: F[A], b: B, f: (B, A) => B): IsEq[B]", "member" : "cats.laws.FoldableLaws.foldMIdentity", "link" : "proptics\/law\/FoldableWithIndexLaws.html#foldMIdentity[A,B](fa:F[A],b:B,f:(B,A)=>B):cats.laws.IsEq[B]", "kind" : "def"}, {"label" : "existsConsistentWithFind", "tail" : "(fa: F[A], p: (A) => Boolean): Boolean", "member" : "cats.laws.FoldableLaws.existsConsistentWithFind", "link" : "proptics\/law\/FoldableWithIndexLaws.html#existsConsistentWithFind[A](fa:F[A],p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "rightFoldConsistentWithFoldMap", "tail" : "(fa: F[A], f: (A) => B)(M: Monoid[B]): IsEq[B]", "member" : "cats.laws.FoldableLaws.rightFoldConsistentWithFoldMap", "link" : "proptics\/law\/FoldableWithIndexLaws.html#rightFoldConsistentWithFoldMap[A,B](fa:F[A],f:A=>B)(implicitM:cats.Monoid[B]):cats.laws.IsEq[B]", "kind" : "def"}, {"label" : "leftFoldConsistentWithFoldMap", "tail" : "(fa: F[A], f: (A) => B)(M: Monoid[B]): IsEq[B]", "member" : "cats.laws.FoldableLaws.leftFoldConsistentWithFoldMap", "link" : "proptics\/law\/FoldableWithIndexLaws.html#leftFoldConsistentWithFoldMap[A,B](fa:F[A],f:A=>B)(implicitM:cats.Monoid[B]):cats.laws.IsEq[B]", "kind" : "def"}, {"label" : "foldRightLazy", "tail" : "(fa: F[A]): Boolean", "member" : "cats.laws.FoldableLaws.foldRightLazy", "link" : "proptics\/law\/FoldableWithIndexLaws.html#foldRightLazy[A](fa:F[A]):Boolean", "kind" : "def"}, {"label" : "nonEmptyRef", "tail" : "(fa: F[A]): IsEq[Boolean]", "member" : "cats.laws.UnorderedFoldableLaws.nonEmptyRef", "link" : "proptics\/law\/FoldableWithIndexLaws.html#nonEmptyRef[A](fa:F[A]):cats.laws.IsEq[Boolean]", "kind" : "def"}, {"label" : "forallEmpty", "tail" : "(fa: F[A], p: (A) => Boolean): Boolean", "member" : "cats.laws.UnorderedFoldableLaws.forallEmpty", "link" : "proptics\/law\/FoldableWithIndexLaws.html#forallEmpty[A](fa:F[A],p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forallLazy", "tail" : "(fa: F[A]): Boolean", "member" : "cats.laws.UnorderedFoldableLaws.forallLazy", "link" : "proptics\/law\/FoldableWithIndexLaws.html#forallLazy[A](fa:F[A]):Boolean", "kind" : "def"}, {"label" : "existsLazy", "tail" : "(fa: F[A]): Boolean", "member" : "cats.laws.UnorderedFoldableLaws.existsLazy", "link" : "proptics\/law\/FoldableWithIndexLaws.html#existsLazy[A](fa:F[A]):Boolean", "kind" : "def"}, {"label" : "forallConsistentWithExists", "tail" : "(fa: F[A], p: (A) => Boolean): Boolean", "member" : "cats.laws.UnorderedFoldableLaws.forallConsistentWithExists", "link" : "proptics\/law\/FoldableWithIndexLaws.html#forallConsistentWithExists[A](fa:F[A],p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "unorderedFoldConsistentWithUnorderedFoldMap", "tail" : "(fa: F[A])(arg0: CommutativeMonoid[A]): IsEq[A]", "member" : "cats.laws.UnorderedFoldableLaws.unorderedFoldConsistentWithUnorderedFoldMap", "link" : "proptics\/law\/FoldableWithIndexLaws.html#unorderedFoldConsistentWithUnorderedFoldMap[A](fa:F[A])(implicitevidence$1:cats.kernel.CommutativeMonoid[A]):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/FoldableWithIndexLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/FoldableWithIndexLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/FoldableWithIndexLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/FoldableWithIndexLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/FoldableWithIndexLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/FoldableWithIndexLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/FoldableWithIndexLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/FoldableWithIndexLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/FoldableWithIndexLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/FoldableWithIndexLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/FoldableWithIndexLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/FoldableWithIndexLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/FoldableWithIndexLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/FoldableWithIndexLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/FoldableWithIndexLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/FoldableWithIndexLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/FoldableWithIndexLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/FoldableWithIndexLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/FoldableWithIndexLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "F", "tail" : "(): FoldableWithIndex[F, I]", "member" : "proptics.law.FoldableWithIndexLaws.F", "link" : "proptics\/law\/FoldableWithIndexLaws.html#F:proptics.indices.FoldableWithIndex[F,I]", "kind" : "implicit abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.FunctorWithIndexLaws", "object" : "proptics\/law\/FunctorWithIndexLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: FunctorWithIndex[F, I]): FunctorWithIndexLaws[F, I]", "member" : "proptics.law.FunctorWithIndexLaws.apply", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#apply[F[_],I](implicitev:proptics.indices.FunctorWithIndex[F,I]):proptics.law.FunctorWithIndexLaws[F,I]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/FunctorWithIndexLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/FunctorWithIndexLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/FunctorWithIndexLaws.html", "kind" : "trait", "members_trait" : [{"label" : "functorWithIndexIdentity", "tail" : "(fa: F[A]): IsEq[F[A]]", "member" : "proptics.law.FunctorWithIndexLaws.functorWithIndexIdentity", "link" : "proptics\/law\/FunctorWithIndexLaws.html#functorWithIndexIdentity[A](fa:F[A]):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "functorWithIndexComposition", "tail" : "(fa: F[A], f: (A, I) => B, g: (B, I) => C): IsEq[F[C]]", "member" : "proptics.law.FunctorWithIndexLaws.functorWithIndexComposition", "link" : "proptics\/law\/FunctorWithIndexLaws.html#functorWithIndexComposition[A,B,C](fa:F[A],f:(A,I)=>B,g:(B,I)=>C):cats.laws.IsEq[F[C]]", "kind" : "def"}, {"label" : "covariantComposition", "tail" : "(fa: F[A], f: (A) => B, g: (B) => C): IsEq[F[C]]", "member" : "cats.laws.FunctorLaws.covariantComposition", "link" : "proptics\/law\/FunctorWithIndexLaws.html#covariantComposition[A,B,C](fa:F[A],f:A=>B,g:B=>C):cats.laws.IsEq[F[C]]", "kind" : "def"}, {"label" : "covariantIdentity", "tail" : "(fa: F[A]): IsEq[F[A]]", "member" : "cats.laws.FunctorLaws.covariantIdentity", "link" : "proptics\/law\/FunctorWithIndexLaws.html#covariantIdentity[A](fa:F[A]):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "invariantComposition", "tail" : "(fa: F[A], f1: (A) => B, f2: (B) => A, g1: (B) => C, g2: (C) => B): IsEq[F[C]]", "member" : "cats.laws.InvariantLaws.invariantComposition", "link" : "proptics\/law\/FunctorWithIndexLaws.html#invariantComposition[A,B,C](fa:F[A],f1:A=>B,f2:B=>A,g1:B=>C,g2:C=>B):cats.laws.IsEq[F[C]]", "kind" : "def"}, {"label" : "invariantIdentity", "tail" : "(fa: F[A]): IsEq[F[A]]", "member" : "cats.laws.InvariantLaws.invariantIdentity", "link" : "proptics\/law\/FunctorWithIndexLaws.html#invariantIdentity[A](fa:F[A]):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/FunctorWithIndexLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/FunctorWithIndexLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/FunctorWithIndexLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/FunctorWithIndexLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/FunctorWithIndexLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/FunctorWithIndexLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/FunctorWithIndexLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/FunctorWithIndexLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/FunctorWithIndexLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/FunctorWithIndexLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/FunctorWithIndexLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/FunctorWithIndexLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/FunctorWithIndexLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/FunctorWithIndexLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/FunctorWithIndexLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/FunctorWithIndexLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/FunctorWithIndexLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/FunctorWithIndexLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/FunctorWithIndexLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "F", "tail" : "(): FunctorWithIndex[F, I]", "member" : "proptics.law.FunctorWithIndexLaws.F", "link" : "proptics\/law\/FunctorWithIndexLaws.html#F:proptics.indices.FunctorWithIndex[F,I]", "kind" : "implicit abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.GrateLaws", "object" : "proptics\/law\/GrateLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_grate: Grate[S, A]): GrateLaws[S, A]", "member" : "proptics.law.GrateLaws.apply", "link" : "proptics\/law\/GrateLaws$.html#apply[S,A](_grate:proptics.Grate[S,A]):proptics.law.GrateLaws[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/GrateLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/GrateLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/GrateLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/GrateLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/GrateLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/GrateLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/GrateLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/GrateLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/GrateLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/GrateLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/GrateLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/GrateLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/GrateLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/GrateLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/GrateLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/GrateLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/GrateLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/GrateLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/GrateLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/GrateLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeOver", "tail" : "(s: S)(f: (A) => A)(g: (A) => A): IsEq[S]", "member" : "proptics.law.GrateLaws.composeOver", "link" : "proptics\/law\/GrateLaws.html#composeOver(s:S)(f:A=>A)(g:A=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.GrateLaws.overIdentity", "link" : "proptics\/law\/GrateLaws.html#overIdentity(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.GrateLaws.setSet", "link" : "proptics\/law\/GrateLaws.html#setSet(s:S,a:A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "consistentFoci", "tail" : "(s: S, f: (A) => A, g: (A) => A): IsEq[S]", "member" : "proptics.law.GrateLaws.consistentFoci", "link" : "proptics\/law\/GrateLaws.html#consistentFoci(s:S,f:A=>A,g:A=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "identityLaw", "tail" : "(a: A): IsEq[Id[A]]", "member" : "proptics.law.GrateLaws.identityLaw", "link" : "proptics\/law\/GrateLaws.html#identityLaw(a:A):cats.kernel.laws.IsEq[cats.Id[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/GrateLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/GrateLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/GrateLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/GrateLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/GrateLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/GrateLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/GrateLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/GrateLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/GrateLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/GrateLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/GrateLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/GrateLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/GrateLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/GrateLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/GrateLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/GrateLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/GrateLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/GrateLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/GrateLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "grate", "tail" : "(): Grate[S, A]", "member" : "proptics.law.GrateLaws.grate", "link" : "proptics\/law\/GrateLaws.html#grate:proptics.Grate[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.IndexedLensLaws", "object" : "proptics\/law\/IndexedLensLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_indexedLensLaws: IndexedLens[I, S, A]): IndexedLensLaws[I, S, A]", "member" : "proptics.law.IndexedLensLaws.apply", "link" : "proptics\/law\/IndexedLensLaws$.html#apply[I,S,A](_indexedLensLaws:proptics.IndexedLens[I,S,A]):proptics.law.IndexedLensLaws[I,S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/IndexedLensLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/IndexedLensLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/IndexedLensLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/IndexedLensLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/IndexedLensLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/IndexedLensLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/IndexedLensLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedLensLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedLensLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedLensLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/IndexedLensLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/IndexedLensLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/IndexedLensLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/IndexedLensLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/IndexedLensLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/IndexedLensLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/IndexedLensLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/IndexedLensLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/IndexedLensLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/IndexedLensLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeFocusLens", "tail" : "(s: S, a: A): IsEq[A]", "member" : "proptics.law.IndexedLensLaws.composeFocusLens", "link" : "proptics\/law\/IndexedLensLaws.html#composeFocusLens(s:S,a:A):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "composeSourceLens", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.IndexedLensLaws.composeSourceLens", "link" : "proptics\/law\/IndexedLensLaws.html#composeSourceLens(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "composeOver", "tail" : "(s: S)(f: (A, I) => A)(g: (A, I) => A): IsEq[S]", "member" : "proptics.law.IndexedLensLaws.composeOver", "link" : "proptics\/law\/IndexedLensLaws.html#composeOver(s:S)(f:(A,I)=>A)(g:(A,I)=>A):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.IndexedLensLaws.overIdentity", "link" : "proptics\/law\/IndexedLensLaws.html#overIdentity(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.IndexedLensLaws.setSet", "link" : "proptics\/law\/IndexedLensLaws.html#setSet(s:S,a:A):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "getSet", "tail" : "(s: S, a: A): IsEq[A]", "member" : "proptics.law.IndexedLensLaws.getSet", "link" : "proptics\/law\/IndexedLensLaws.html#getSet(s:S,a:A):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "setGet", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.IndexedLensLaws.setGet", "link" : "proptics\/law\/IndexedLensLaws.html#setGet(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/IndexedLensLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/IndexedLensLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/IndexedLensLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/IndexedLensLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/IndexedLensLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/IndexedLensLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/IndexedLensLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedLensLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedLensLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedLensLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/IndexedLensLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/IndexedLensLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/IndexedLensLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/IndexedLensLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/IndexedLensLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/IndexedLensLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/IndexedLensLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/IndexedLensLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/IndexedLensLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "indexedLens", "tail" : "(): IndexedLens[I, S, A]", "member" : "proptics.law.IndexedLensLaws.indexedLens", "link" : "proptics\/law\/IndexedLensLaws.html#indexedLens:proptics.IndexedLens[I,S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.IndexedSetterLaws", "object" : "proptics\/law\/IndexedSetterLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_indexedSetter: IndexedSetter[I, S, A]): IndexedSetterLaws[I, S, A]", "member" : "proptics.law.IndexedSetterLaws.apply", "link" : "proptics\/law\/IndexedSetterLaws$.html#apply[I,S,A](_indexedSetter:proptics.IndexedSetter[I,S,A]):proptics.law.IndexedSetterLaws[I,S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/IndexedSetterLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/IndexedSetterLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/IndexedSetterLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/IndexedSetterLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/IndexedSetterLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/IndexedSetterLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/IndexedSetterLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedSetterLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedSetterLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedSetterLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/IndexedSetterLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/IndexedSetterLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/IndexedSetterLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/IndexedSetterLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/IndexedSetterLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/IndexedSetterLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/IndexedSetterLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/IndexedSetterLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/IndexedSetterLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/IndexedSetterLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeOver", "tail" : "(s: S)(f: (A, I) => A)(g: (A, I) => A): IsEq[S]", "member" : "proptics.law.IndexedSetterLaws.composeOver", "link" : "proptics\/law\/IndexedSetterLaws.html#composeOver(s:S)(f:(A,I)=>A)(g:(A,I)=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.IndexedSetterLaws.overIdentity", "link" : "proptics\/law\/IndexedSetterLaws.html#overIdentity(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "setASetB", "tail" : "(s: S, a: A, b: A): IsEq[S]", "member" : "proptics.law.IndexedSetterLaws.setASetB", "link" : "proptics\/law\/IndexedSetterLaws.html#setASetB(s:S,a:A,b:A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.IndexedSetterLaws.setSet", "link" : "proptics\/law\/IndexedSetterLaws.html#setSet(s:S,a:A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/IndexedSetterLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/IndexedSetterLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/IndexedSetterLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/IndexedSetterLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/IndexedSetterLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/IndexedSetterLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/IndexedSetterLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedSetterLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedSetterLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedSetterLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/IndexedSetterLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/IndexedSetterLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/IndexedSetterLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/IndexedSetterLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/IndexedSetterLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/IndexedSetterLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/IndexedSetterLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/IndexedSetterLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/IndexedSetterLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "indexedSetter", "tail" : "(): IndexedSetter[I, S, A]", "member" : "proptics.law.IndexedSetterLaws.indexedSetter", "link" : "proptics\/law\/IndexedSetterLaws.html#indexedSetter:proptics.IndexedSetter[I,S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.IndexedTraversalLaws", "object" : "proptics\/law\/IndexedTraversalLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_indexedTraversal: IndexedTraversal[I, S, A]): IndexedTraversalLaws[I, S, A]", "member" : "proptics.law.IndexedTraversalLaws.apply", "link" : "proptics\/law\/IndexedTraversalLaws$.html#apply[I,S,A](_indexedTraversal:proptics.IndexedTraversal[I,S,A]):proptics.law.IndexedTraversalLaws[I,S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/IndexedTraversalLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/IndexedTraversalLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/IndexedTraversalLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/IndexedTraversalLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/IndexedTraversalLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/IndexedTraversalLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/IndexedTraversalLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedTraversalLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedTraversalLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedTraversalLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/IndexedTraversalLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/IndexedTraversalLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/IndexedTraversalLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/IndexedTraversalLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/IndexedTraversalLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/IndexedTraversalLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/IndexedTraversalLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/IndexedTraversalLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/IndexedTraversalLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/IndexedTraversalLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeOver", "tail" : "(s: S)(f: (A, I) => A)(g: (A, I) => A): IsEq[S]", "member" : "proptics.law.IndexedTraversalLaws.composeOver", "link" : "proptics\/law\/IndexedTraversalLaws.html#composeOver(s:S)(f:(A,I)=>A)(g:(A,I)=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.IndexedTraversalLaws.overIdentity", "link" : "proptics\/law\/IndexedTraversalLaws.html#overIdentity(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.IndexedTraversalLaws.setSet", "link" : "proptics\/law\/IndexedTraversalLaws.html#setSet(s:S,a:A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "getSet", "tail" : "(s: S, f: (A, I) => A): IsEq[List[(A, I)]]", "member" : "proptics.law.IndexedTraversalLaws.getSet", "link" : "proptics\/law\/IndexedTraversalLaws.html#getSet(s:S,f:(A,I)=>A):cats.kernel.laws.IsEq[List[(A,I)]]", "kind" : "def"}, {"label" : "preview", "tail" : "(s: S): IsEq[Option[(A, I)]]", "member" : "proptics.law.IndexedTraversalLaws.preview", "link" : "proptics\/law\/IndexedTraversalLaws.html#preview(s:S):cats.kernel.laws.IsEq[Option[(A,I)]]", "kind" : "def"}, {"label" : "consistentFoci", "tail" : "(s: S, f: (A, I) => A, g: (A, I) => A): IsEq[S]", "member" : "proptics.law.IndexedTraversalLaws.consistentFoci", "link" : "proptics\/law\/IndexedTraversalLaws.html#consistentFoci(s:S,f:(A,I)=>A,g:(A,I)=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "respectPurity", "tail" : "(s: S)(arg0: Applicative[F]): IsEq[F[S]]", "member" : "proptics.law.IndexedTraversalLaws.respectPurity", "link" : "proptics\/law\/IndexedTraversalLaws.html#respectPurity[F[_]](s:S)(implicitevidence$1:cats.Applicative[F]):cats.kernel.laws.IsEq[F[S]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/IndexedTraversalLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/IndexedTraversalLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/IndexedTraversalLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/IndexedTraversalLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/IndexedTraversalLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/IndexedTraversalLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/IndexedTraversalLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedTraversalLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedTraversalLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IndexedTraversalLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/IndexedTraversalLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/IndexedTraversalLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/IndexedTraversalLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/IndexedTraversalLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/IndexedTraversalLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/IndexedTraversalLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/IndexedTraversalLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/IndexedTraversalLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/IndexedTraversalLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "indexedTraversal", "tail" : "(): IndexedTraversal_[I, S, S, A, A]", "member" : "proptics.law.IndexedTraversalLaws.indexedTraversal", "link" : "proptics\/law\/IndexedTraversalLaws.html#indexedTraversal:proptics.IndexedTraversal_[I,S,S,A,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.IsoLaws", "object" : "proptics\/law\/IsoLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_iso: Iso[S, A]): IsoLaws[S, A]", "member" : "proptics.law.IsoLaws.apply", "link" : "proptics\/law\/IsoLaws$.html#apply[S,A](_iso:proptics.Iso[S,A]):proptics.law.IsoLaws[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/IsoLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/IsoLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/IsoLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/IsoLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/IsoLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/IsoLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/IsoLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IsoLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IsoLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IsoLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/IsoLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/IsoLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/IsoLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/IsoLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/IsoLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/IsoLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/IsoLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/IsoLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/IsoLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/IsoLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeFocusIso", "tail" : "(a: A): IsEq[A]", "member" : "proptics.law.IsoLaws.composeFocusIso", "link" : "proptics\/law\/IsoLaws.html#composeFocusIso(a:A):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "composeSourceIso", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.IsoLaws.composeSourceIso", "link" : "proptics\/law\/IsoLaws.html#composeSourceIso(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "composeOver", "tail" : "(s: S)(f: (A) => A)(g: (A) => A): IsEq[S]", "member" : "proptics.law.IsoLaws.composeOver", "link" : "proptics\/law\/IsoLaws.html#composeOver(s:S)(f:A=>A)(g:A=>A):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.IsoLaws.overIdentity", "link" : "proptics\/law\/IsoLaws.html#overIdentity(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "focusReversibility", "tail" : "(a: A): IsEq[A]", "member" : "proptics.law.IsoLaws.focusReversibility", "link" : "proptics\/law\/IsoLaws.html#focusReversibility(a:A):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "sourceReversibility", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.IsoLaws.sourceReversibility", "link" : "proptics\/law\/IsoLaws.html#sourceReversibility(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/IsoLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/IsoLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/IsoLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/IsoLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/IsoLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/IsoLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/IsoLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IsoLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IsoLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/IsoLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/IsoLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/IsoLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/IsoLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/IsoLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/IsoLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/IsoLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/IsoLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/IsoLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/IsoLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "iso", "tail" : "(): Iso[S, A]", "member" : "proptics.law.IsoLaws.iso", "link" : "proptics\/law\/IsoLaws.html#iso:proptics.Iso[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.LensLaws", "object" : "proptics\/law\/LensLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_lens: Lens[S, A]): LensLaws[S, A]", "member" : "proptics.law.LensLaws.apply", "link" : "proptics\/law\/LensLaws$.html#apply[S,A](_lens:proptics.Lens[S,A]):proptics.law.LensLaws[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/LensLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/LensLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/LensLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/LensLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/LensLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/LensLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/LensLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/LensLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/LensLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/LensLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/LensLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/LensLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/LensLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/LensLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/LensLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/LensLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/LensLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/LensLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/LensLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/LensLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeFocusLens", "tail" : "(s: S, a: A): IsEq[A]", "member" : "proptics.law.LensLaws.composeFocusLens", "link" : "proptics\/law\/LensLaws.html#composeFocusLens(s:S,a:A):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "composeSourceLens", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.LensLaws.composeSourceLens", "link" : "proptics\/law\/LensLaws.html#composeSourceLens(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "composeOver", "tail" : "(s: S)(f: (A) => A)(g: (A) => A): IsEq[S]", "member" : "proptics.law.LensLaws.composeOver", "link" : "proptics\/law\/LensLaws.html#composeOver(s:S)(f:A=>A)(g:A=>A):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.LensLaws.overIdentity", "link" : "proptics\/law\/LensLaws.html#overIdentity(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.LensLaws.setSet", "link" : "proptics\/law\/LensLaws.html#setSet(s:S,a:A):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "getSet", "tail" : "(s: S, a: A): IsEq[A]", "member" : "proptics.law.LensLaws.getSet", "link" : "proptics\/law\/LensLaws.html#getSet(s:S,a:A):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "setGet", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.LensLaws.setGet", "link" : "proptics\/law\/LensLaws.html#setGet(s:S):cats.laws.IsEq[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/LensLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/LensLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/LensLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/LensLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/LensLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/LensLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/LensLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/LensLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/LensLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/LensLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/LensLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/LensLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/LensLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/LensLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/LensLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/LensLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/LensLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/LensLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/LensLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "lens", "tail" : "(): Lens[S, A]", "member" : "proptics.law.LensLaws.lens", "link" : "proptics\/law\/LensLaws.html#lens:proptics.Lens[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.PrismLaws", "object" : "proptics\/law\/PrismLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_prism: Prism[S, A]): PrismLaws[S, A]", "member" : "proptics.law.PrismLaws.apply", "link" : "proptics\/law\/PrismLaws$.html#apply[S,A](_prism:proptics.Prism[S,A]):proptics.law.PrismLaws[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/PrismLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/PrismLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/PrismLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/PrismLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/PrismLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/PrismLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/PrismLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/PrismLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/PrismLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/PrismLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/PrismLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/PrismLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/PrismLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/PrismLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/PrismLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/PrismLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/PrismLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/PrismLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/PrismLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/PrismLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeOver", "tail" : "(s: S)(f: (A) => A)(g: (A) => A): IsEq[S]", "member" : "proptics.law.PrismLaws.composeOver", "link" : "proptics\/law\/PrismLaws.html#composeOver(s:S)(f:A=>A)(g:A=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.PrismLaws.overIdentity", "link" : "proptics\/law\/PrismLaws.html#overIdentity(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.PrismLaws.setSet", "link" : "proptics\/law\/PrismLaws.html#setSet(s:S,a:A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "viewOrModifyReview", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.PrismLaws.viewOrModifyReview", "link" : "proptics\/law\/PrismLaws.html#viewOrModifyReview(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "previewReview", "tail" : "(a: A): IsEq[Option[A]]", "member" : "proptics.law.PrismLaws.previewReview", "link" : "proptics\/law\/PrismLaws.html#previewReview(a:A):cats.kernel.laws.IsEq[Option[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/PrismLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/PrismLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/PrismLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/PrismLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/PrismLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/PrismLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/PrismLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/PrismLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/PrismLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/PrismLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/PrismLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/PrismLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/PrismLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/PrismLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/PrismLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/PrismLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/PrismLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/PrismLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/PrismLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "prism", "tail" : "(): Prism[S, A]", "member" : "proptics.law.PrismLaws.prism", "link" : "proptics\/law\/PrismLaws.html#prism:proptics.Prism[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.SetterLaws", "object" : "proptics\/law\/SetterLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_setter: Setter[S, A]): SetterLaws[S, A]", "member" : "proptics.law.SetterLaws.apply", "link" : "proptics\/law\/SetterLaws$.html#apply[S,A](_setter:proptics.Setter[S,A]):proptics.law.SetterLaws[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/SetterLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/SetterLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/SetterLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/SetterLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/SetterLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/SetterLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/SetterLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/SetterLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/SetterLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/SetterLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/SetterLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/SetterLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/SetterLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/SetterLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/SetterLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/SetterLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/SetterLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/SetterLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/SetterLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/SetterLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeOver", "tail" : "(s: S)(f: (A) => A)(g: (A) => A): IsEq[S]", "member" : "proptics.law.SetterLaws.composeOver", "link" : "proptics\/law\/SetterLaws.html#composeOver(s:S)(f:A=>A)(g:A=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.SetterLaws.overIdentity", "link" : "proptics\/law\/SetterLaws.html#overIdentity(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "setASetB", "tail" : "(s: S, a: A, b: A): IsEq[S]", "member" : "proptics.law.SetterLaws.setASetB", "link" : "proptics\/law\/SetterLaws.html#setASetB(s:S,a:A,b:A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.SetterLaws.setSet", "link" : "proptics\/law\/SetterLaws.html#setSet(s:S,a:A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/SetterLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/SetterLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/SetterLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/SetterLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/SetterLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/SetterLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/SetterLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/SetterLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/SetterLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/SetterLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/SetterLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/SetterLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/SetterLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/SetterLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/SetterLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/SetterLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/SetterLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/SetterLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/SetterLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "setter", "tail" : "(): Setter[S, A]", "member" : "proptics.law.SetterLaws.setter", "link" : "proptics\/law\/SetterLaws.html#setter:proptics.Setter[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.TraversalLaws", "object" : "proptics\/law\/TraversalLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(_traversal: Traversal[S, A]): TraversalLaws[S, A]", "member" : "proptics.law.TraversalLaws.apply", "link" : "proptics\/law\/TraversalLaws$.html#apply[S,A](_traversal:proptics.Traversal[S,A]):proptics.law.TraversalLaws[S,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/TraversalLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/TraversalLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/TraversalLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/TraversalLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/TraversalLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/TraversalLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/TraversalLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/TraversalLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/TraversalLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/TraversalLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/TraversalLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/TraversalLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/TraversalLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/TraversalLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/TraversalLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/TraversalLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/TraversalLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/TraversalLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/TraversalLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/TraversalLaws.html", "kind" : "trait", "members_trait" : [{"label" : "composeOver", "tail" : "(s: S)(f: (A) => A)(g: (A) => A): IsEq[S]", "member" : "proptics.law.TraversalLaws.composeOver", "link" : "proptics\/law\/TraversalLaws.html#composeOver(s:S)(f:A=>A)(g:A=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "overIdentity", "tail" : "(s: S): IsEq[S]", "member" : "proptics.law.TraversalLaws.overIdentity", "link" : "proptics\/law\/TraversalLaws.html#overIdentity(s:S):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "setSet", "tail" : "(s: S, a: A): IsEq[S]", "member" : "proptics.law.TraversalLaws.setSet", "link" : "proptics\/law\/TraversalLaws.html#setSet(s:S,a:A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "getSet", "tail" : "(s: S, f: (A) => A): IsEq[List[A]]", "member" : "proptics.law.TraversalLaws.getSet", "link" : "proptics\/law\/TraversalLaws.html#getSet(s:S,f:A=>A):cats.kernel.laws.IsEq[List[A]]", "kind" : "def"}, {"label" : "preview", "tail" : "(s: S): IsEq[Option[A]]", "member" : "proptics.law.TraversalLaws.preview", "link" : "proptics\/law\/TraversalLaws.html#preview(s:S):cats.kernel.laws.IsEq[Option[A]]", "kind" : "def"}, {"label" : "consistentFoci", "tail" : "(s: S, f: (A) => A, g: (A) => A): IsEq[S]", "member" : "proptics.law.TraversalLaws.consistentFoci", "link" : "proptics\/law\/TraversalLaws.html#consistentFoci(s:S,f:A=>A,g:A=>A):cats.kernel.laws.IsEq[S]", "kind" : "def"}, {"label" : "respectPurity", "tail" : "(s: S)(arg0: Applicative[F]): IsEq[F[S]]", "member" : "proptics.law.TraversalLaws.respectPurity", "link" : "proptics\/law\/TraversalLaws.html#respectPurity[F[_]](s:S)(implicitevidence$1:cats.Applicative[F]):cats.kernel.laws.IsEq[F[S]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/TraversalLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/TraversalLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/TraversalLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/TraversalLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/TraversalLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/TraversalLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/TraversalLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/TraversalLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/TraversalLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/TraversalLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/TraversalLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/TraversalLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/TraversalLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/TraversalLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/TraversalLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/TraversalLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/TraversalLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/TraversalLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/TraversalLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "traversal", "tail" : "(): Traversal[S, A]", "member" : "proptics.law.TraversalLaws.traversal", "link" : "proptics\/law\/TraversalLaws.html#traversal:proptics.Traversal[S,A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.TraverseWithIndexLaws", "object" : "proptics\/law\/TraverseWithIndexLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: TraverseWithIndex[F, I]): TraverseWithIndexLaws[F, I]", "member" : "proptics.law.TraverseWithIndexLaws.apply", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#apply[F[_],I](implicitev:proptics.indices.TraverseWithIndex[F,I]):proptics.law.TraverseWithIndexLaws[F,I]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/TraverseWithIndexLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/TraverseWithIndexLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/TraverseWithIndexLaws.html", "kind" : "trait", "members_trait" : [{"label" : "traverseWithIndexComposition", "tail" : "(fa: F[A], f: (A, I) => B, g: (B, I) => C): IsEq[F[C]]", "member" : "proptics.law.TraverseWithIndexLaws.traverseWithIndexComposition", "link" : "proptics\/law\/TraverseWithIndexLaws.html#traverseWithIndexComposition[A,B,C](fa:F[A],f:(A,I)=>B,g:(B,I)=>C):cats.laws.IsEq[F[C]]", "kind" : "def"}, {"label" : "traverseWithIndexIdentity", "tail" : "(fa: F[A], f: (A, I) => B): IsEq[F[B]]", "member" : "proptics.law.TraverseWithIndexLaws.traverseWithIndexIdentity", "link" : "proptics\/law\/TraverseWithIndexLaws.html#traverseWithIndexIdentity[A,B](fa:F[A],f:(A,I)=>B):cats.laws.IsEq[F[B]]", "kind" : "def"}, {"label" : "zipWithIndexRef", "tail" : "(fa: F[A], f: ((A, Int)) => B): IsEq[F[B]]", "member" : "cats.laws.TraverseLaws.zipWithIndexRef", "link" : "proptics\/law\/TraverseWithIndexLaws.html#zipWithIndexRef[A,B](fa:F[A],f:((A,Int))=>B):cats.laws.IsEq[F[B]]", "kind" : "def"}, {"label" : "traverseWithIndexMRef", "tail" : "(fa: F[A], f: (A, Int) => G[B])(G: Monad[G]): IsEq[G[F[B]]]", "member" : "cats.laws.TraverseLaws.traverseWithIndexMRef", "link" : "proptics\/law\/TraverseWithIndexLaws.html#traverseWithIndexMRef[G[_<:<?>],A,B](fa:F[A],f:(A,Int)=>G[B])(implicitG:cats.Monad[G]):cats.laws.IsEq[G[F[B]]]", "kind" : "def"}, {"label" : "mapWithIndexRef", "tail" : "(fa: F[A], f: (A, Int) => B): IsEq[F[B]]", "member" : "cats.laws.TraverseLaws.mapWithIndexRef", "link" : "proptics\/law\/TraverseWithIndexLaws.html#mapWithIndexRef[A,B](fa:F[A],f:(A,Int)=>B):cats.laws.IsEq[F[B]]", "kind" : "def"}, {"label" : "traverseOrderConsistent", "tail" : "(fa: F[A]): IsEq[Option[A]]", "member" : "cats.laws.TraverseLaws.traverseOrderConsistent", "link" : "proptics\/law\/TraverseWithIndexLaws.html#traverseOrderConsistent[A](fa:F[A]):cats.laws.IsEq[Option[A]]", "kind" : "def"}, {"label" : "foldMapDerived", "tail" : "(fa: F[A], f: (A) => B)(B: Monoid[B]): IsEq[B]", "member" : "cats.laws.TraverseLaws.foldMapDerived", "link" : "proptics\/law\/TraverseWithIndexLaws.html#foldMapDerived[A,B](fa:F[A],f:A=>B)(implicitB:cats.Monoid[B]):cats.laws.IsEq[B]", "kind" : "def"}, {"label" : "traverseTap", "tail" : "(fa: F[A], f: (A) => G[B])(G: Applicative[G]): IsEq[G[F[A]]]", "member" : "cats.laws.TraverseLaws.traverseTap", "link" : "proptics\/law\/TraverseWithIndexLaws.html#traverseTap[A,B,G[_<:<?>]](fa:F[A],f:A=>G[B])(implicitG:cats.Applicative[G]):cats.laws.IsEq[G[F[A]]]", "kind" : "def"}, {"label" : "traverseParallelComposition", "tail" : "(fa: F[A], f: (A) => M[B], g: (A) => N[B])(N: Applicative[N], M: Applicative[M]): IsEq[(M[F[B]], N[F[B]])]", "member" : "cats.laws.TraverseLaws.traverseParallelComposition", "link" : "proptics\/law\/TraverseWithIndexLaws.html#traverseParallelComposition[A,B,M[_<:<?>],N[_<:<?>]](fa:F[A],f:A=>M[B],g:A=>N[B])(implicitN:cats.Applicative[N],implicitM:cats.Applicative[M]):cats.laws.IsEq[(M[F[B]],N[F[B]])]", "kind" : "def"}, {"label" : "traverseSequentialComposition", "tail" : "(fa: F[A], f: (A) => M[B], g: (B) => N[C])(N: Applicative[N], M: Applicative[M]): IsEq[Nested[M, N, F[C]]]", "member" : "cats.laws.TraverseLaws.traverseSequentialComposition", "link" : "proptics\/law\/TraverseWithIndexLaws.html#traverseSequentialComposition[A,B,C,M[_<:<?>],N[_<:<?>]](fa:F[A],f:A=>M[B],g:B=>N[C])(implicitN:cats.Applicative[N],implicitM:cats.Applicative[M]):cats.laws.IsEq[cats.data.Nested[M,N,F[C]]]", "kind" : "def"}, {"label" : "traverseIdentity", "tail" : "(fa: F[A], f: (A) => B): IsEq[F[B]]", "member" : "cats.laws.TraverseLaws.traverseIdentity", "link" : "proptics\/law\/TraverseWithIndexLaws.html#traverseIdentity[A,B](fa:F[A],f:A=>B):cats.laws.IsEq[F[B]]", "kind" : "def"}, {"label" : "unorderedSequenceConsistent", "tail" : "(fga: F[G[A]])(arg0: CommutativeApplicative[G]): IsEq[G[F[A]]]", "member" : "cats.laws.UnorderedTraverseLaws.unorderedSequenceConsistent", "link" : "proptics\/law\/TraverseWithIndexLaws.html#unorderedSequenceConsistent[A,G[_<:<?>]](fga:F[G[A]])(implicitevidence$1:cats.CommutativeApplicative[G]):cats.laws.IsEq[G[F[A]]]", "kind" : "def"}, {"label" : "unorderedTraverseParallelComposition", "tail" : "(fa: F[A], f: (A) => M[B], g: (A) => N[B])(N: CommutativeApplicative[N], M: CommutativeApplicative[M]): IsEq[(M[F[B]], N[F[B]])]", "member" : "cats.laws.UnorderedTraverseLaws.unorderedTraverseParallelComposition", "link" : "proptics\/law\/TraverseWithIndexLaws.html#unorderedTraverseParallelComposition[A,B,M[_<:<?>],N[_<:<?>]](fa:F[A],f:A=>M[B],g:A=>N[B])(implicitN:cats.CommutativeApplicative[N],implicitM:cats.CommutativeApplicative[M]):cats.laws.IsEq[(M[F[B]],N[F[B]])]", "kind" : "def"}, {"label" : "unorderedTraverseSequentialComposition", "tail" : "(fa: F[A], f: (A) => M[B], g: (B) => N[C])(N: CommutativeApplicative[N], M: CommutativeApplicative[M]): IsEq[Nested[M, N, F[C]]]", "member" : "cats.laws.UnorderedTraverseLaws.unorderedTraverseSequentialComposition", "link" : "proptics\/law\/TraverseWithIndexLaws.html#unorderedTraverseSequentialComposition[A,B,C,M[_<:<?>],N[_<:<?>]](fa:F[A],f:A=>M[B],g:B=>N[C])(implicitN:cats.CommutativeApplicative[N],implicitM:cats.CommutativeApplicative[M]):cats.laws.IsEq[cats.data.Nested[M,N,F[C]]]", "kind" : "def"}, {"label" : "unorderedTraverseIdentity", "tail" : "(fa: F[A])(f: (A) => B)(ev: Functor[F]): IsEq[F[B]]", "member" : "cats.laws.UnorderedTraverseLaws.unorderedTraverseIdentity", "link" : "proptics\/law\/TraverseWithIndexLaws.html#unorderedTraverseIdentity[A,B](fa:F[A])(f:A=>B)(implicitev:cats.Functor[F]):cats.laws.IsEq[F[B]]", "kind" : "def"}, {"label" : "orderedConsistency", "tail" : "(x: F[A], y: F[A])(arg0: Eq[A], ev: Eq[F[A]]): IsEq[List[A]]", "member" : "cats.laws.FoldableLaws.orderedConsistency", "link" : "proptics\/law\/TraverseWithIndexLaws.html#orderedConsistency[A](x:F[A],y:F[A])(implicitevidence$1:cats.Eq[A],implicitev:cats.Eq[F[A]]):cats.laws.IsEq[List[A]]", "kind" : "def"}, {"label" : "collectFirst_Ref", "tail" : "(fa: F[A], pf: PartialFunction[A, B]): IsEq[Option[B]]", "member" : "cats.laws.FoldableLaws.collectFirst_Ref", "link" : "proptics\/law\/TraverseWithIndexLaws.html#collectFirst_Ref[A,B](fa:F[A],pf:PartialFunction[A,B]):cats.laws.IsEq[Option[B]]", "kind" : "def"}, {"label" : "collectFirstSome_Ref", "tail" : "(fa: F[A], f: (A) => Option[B]): IsEq[Option[B]]", "member" : "cats.laws.FoldableLaws.collectFirstSome_Ref", "link" : "proptics\/law\/TraverseWithIndexLaws.html#collectFirstSome_Ref[A,B](fa:F[A],f:A=>Option[B]):cats.laws.IsEq[Option[B]]", "kind" : "def"}, {"label" : "dropWhile_Ref", "tail" : "(fa: F[A], p: (A) => Boolean): IsEq[List[A]]", "member" : "cats.laws.FoldableLaws.dropWhile_Ref", "link" : "proptics\/law\/TraverseWithIndexLaws.html#dropWhile_Ref[A](fa:F[A],p:A=>Boolean):cats.laws.IsEq[List[A]]", "kind" : "def"}, {"label" : "takeWhile_Ref", "tail" : "(fa: F[A], p: (A) => Boolean): IsEq[List[A]]", "member" : "cats.laws.FoldableLaws.takeWhile_Ref", "link" : "proptics\/law\/TraverseWithIndexLaws.html#takeWhile_Ref[A](fa:F[A],p:A=>Boolean):cats.laws.IsEq[List[A]]", "kind" : "def"}, {"label" : "filter_Ref", "tail" : "(fa: F[A], p: (A) => Boolean): IsEq[List[A]]", "member" : "cats.laws.FoldableLaws.filter_Ref", "link" : "proptics\/law\/TraverseWithIndexLaws.html#filter_Ref[A](fa:F[A],p:A=>Boolean):cats.laws.IsEq[List[A]]", "kind" : "def"}, {"label" : "toListRef", "tail" : "(fa: F[A]): IsEq[List[A]]", "member" : "cats.laws.FoldableLaws.toListRef", "link" : "proptics\/law\/TraverseWithIndexLaws.html#toListRef[A](fa:F[A]):cats.laws.IsEq[List[A]]", "kind" : "def"}, {"label" : "foldRef", "tail" : "(fa: F[A])(A: Monoid[A]): IsEq[A]", "member" : "cats.laws.FoldableLaws.foldRef", "link" : "proptics\/law\/TraverseWithIndexLaws.html#foldRef[A](fa:F[A])(implicitA:cats.Monoid[A]):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "getRef", "tail" : "(fa: F[A], idx: Long): IsEq[Option[A]]", "member" : "cats.laws.FoldableLaws.getRef", "link" : "proptics\/law\/TraverseWithIndexLaws.html#getRef[A](fa:F[A],idx:Long):cats.laws.IsEq[Option[A]]", "kind" : "def"}, {"label" : "reduceRightOptionConsistentWithReduceRightToOption", "tail" : "(fa: F[A], f: (A, A) => A): IsEq[Option[A]]", "member" : "cats.laws.FoldableLaws.reduceRightOptionConsistentWithReduceRightToOption", "link" : "proptics\/law\/TraverseWithIndexLaws.html#reduceRightOptionConsistentWithReduceRightToOption[A](fa:F[A],f:(A,A)=>A):cats.laws.IsEq[Option[A]]", "kind" : "def"}, {"label" : "reduceLeftOptionConsistentWithReduceLeftToOption", "tail" : "(fa: F[A], f: (A, A) => A): IsEq[Option[A]]", "member" : "cats.laws.FoldableLaws.reduceLeftOptionConsistentWithReduceLeftToOption", "link" : "proptics\/law\/TraverseWithIndexLaws.html#reduceLeftOptionConsistentWithReduceLeftToOption[A](fa:F[A],f:(A,A)=>A):cats.laws.IsEq[Option[A]]", "kind" : "def"}, {"label" : "foldRightDeferConsistentWithFoldRight", "tail" : "(fa: F[A], f: (B, A) => B)(M: Monoid[B]): IsEq[B]", "member" : "cats.laws.FoldableLaws.foldRightDeferConsistentWithFoldRight", "link" : "proptics\/law\/TraverseWithIndexLaws.html#foldRightDeferConsistentWithFoldRight[A,B](fa:F[A],f:(B,A)=>B)(implicitM:cats.Monoid[B]):cats.laws.IsEq[B]", "kind" : "def"}, {"label" : "foldMIdentity", "tail" : "(fa: F[A], b: B, f: (B, A) => B): IsEq[B]", "member" : "cats.laws.FoldableLaws.foldMIdentity", "link" : "proptics\/law\/TraverseWithIndexLaws.html#foldMIdentity[A,B](fa:F[A],b:B,f:(B,A)=>B):cats.laws.IsEq[B]", "kind" : "def"}, {"label" : "existsConsistentWithFind", "tail" : "(fa: F[A], p: (A) => Boolean): Boolean", "member" : "cats.laws.FoldableLaws.existsConsistentWithFind", "link" : "proptics\/law\/TraverseWithIndexLaws.html#existsConsistentWithFind[A](fa:F[A],p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "rightFoldConsistentWithFoldMap", "tail" : "(fa: F[A], f: (A) => B)(M: Monoid[B]): IsEq[B]", "member" : "cats.laws.FoldableLaws.rightFoldConsistentWithFoldMap", "link" : "proptics\/law\/TraverseWithIndexLaws.html#rightFoldConsistentWithFoldMap[A,B](fa:F[A],f:A=>B)(implicitM:cats.Monoid[B]):cats.laws.IsEq[B]", "kind" : "def"}, {"label" : "leftFoldConsistentWithFoldMap", "tail" : "(fa: F[A], f: (A) => B)(M: Monoid[B]): IsEq[B]", "member" : "cats.laws.FoldableLaws.leftFoldConsistentWithFoldMap", "link" : "proptics\/law\/TraverseWithIndexLaws.html#leftFoldConsistentWithFoldMap[A,B](fa:F[A],f:A=>B)(implicitM:cats.Monoid[B]):cats.laws.IsEq[B]", "kind" : "def"}, {"label" : "foldRightLazy", "tail" : "(fa: F[A]): Boolean", "member" : "cats.laws.FoldableLaws.foldRightLazy", "link" : "proptics\/law\/TraverseWithIndexLaws.html#foldRightLazy[A](fa:F[A]):Boolean", "kind" : "def"}, {"label" : "nonEmptyRef", "tail" : "(fa: F[A]): IsEq[Boolean]", "member" : "cats.laws.UnorderedFoldableLaws.nonEmptyRef", "link" : "proptics\/law\/TraverseWithIndexLaws.html#nonEmptyRef[A](fa:F[A]):cats.laws.IsEq[Boolean]", "kind" : "def"}, {"label" : "forallEmpty", "tail" : "(fa: F[A], p: (A) => Boolean): Boolean", "member" : "cats.laws.UnorderedFoldableLaws.forallEmpty", "link" : "proptics\/law\/TraverseWithIndexLaws.html#forallEmpty[A](fa:F[A],p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forallLazy", "tail" : "(fa: F[A]): Boolean", "member" : "cats.laws.UnorderedFoldableLaws.forallLazy", "link" : "proptics\/law\/TraverseWithIndexLaws.html#forallLazy[A](fa:F[A]):Boolean", "kind" : "def"}, {"label" : "existsLazy", "tail" : "(fa: F[A]): Boolean", "member" : "cats.laws.UnorderedFoldableLaws.existsLazy", "link" : "proptics\/law\/TraverseWithIndexLaws.html#existsLazy[A](fa:F[A]):Boolean", "kind" : "def"}, {"label" : "forallConsistentWithExists", "tail" : "(fa: F[A], p: (A) => Boolean): Boolean", "member" : "cats.laws.UnorderedFoldableLaws.forallConsistentWithExists", "link" : "proptics\/law\/TraverseWithIndexLaws.html#forallConsistentWithExists[A](fa:F[A],p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "unorderedFoldConsistentWithUnorderedFoldMap", "tail" : "(fa: F[A])(arg0: CommutativeMonoid[A]): IsEq[A]", "member" : "cats.laws.UnorderedFoldableLaws.unorderedFoldConsistentWithUnorderedFoldMap", "link" : "proptics\/law\/TraverseWithIndexLaws.html#unorderedFoldConsistentWithUnorderedFoldMap[A](fa:F[A])(implicitevidence$1:cats.kernel.CommutativeMonoid[A]):cats.laws.IsEq[A]", "kind" : "def"}, {"label" : "covariantComposition", "tail" : "(fa: F[A], f: (A) => B, g: (B) => C): IsEq[F[C]]", "member" : "cats.laws.FunctorLaws.covariantComposition", "link" : "proptics\/law\/TraverseWithIndexLaws.html#covariantComposition[A,B,C](fa:F[A],f:A=>B,g:B=>C):cats.laws.IsEq[F[C]]", "kind" : "def"}, {"label" : "covariantIdentity", "tail" : "(fa: F[A]): IsEq[F[A]]", "member" : "cats.laws.FunctorLaws.covariantIdentity", "link" : "proptics\/law\/TraverseWithIndexLaws.html#covariantIdentity[A](fa:F[A]):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "invariantComposition", "tail" : "(fa: F[A], f1: (A) => B, f2: (B) => A, g1: (B) => C, g2: (C) => B): IsEq[F[C]]", "member" : "cats.laws.InvariantLaws.invariantComposition", "link" : "proptics\/law\/TraverseWithIndexLaws.html#invariantComposition[A,B,C](fa:F[A],f1:A=>B,f2:B=>A,g1:B=>C,g2:C=>B):cats.laws.IsEq[F[C]]", "kind" : "def"}, {"label" : "invariantIdentity", "tail" : "(fa: F[A]): IsEq[F[A]]", "member" : "cats.laws.InvariantLaws.invariantIdentity", "link" : "proptics\/law\/TraverseWithIndexLaws.html#invariantIdentity[A](fa:F[A]):cats.laws.IsEq[F[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/TraverseWithIndexLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/TraverseWithIndexLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/TraverseWithIndexLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/TraverseWithIndexLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/TraverseWithIndexLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/TraverseWithIndexLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/TraverseWithIndexLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/TraverseWithIndexLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/TraverseWithIndexLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/TraverseWithIndexLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/TraverseWithIndexLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/TraverseWithIndexLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/TraverseWithIndexLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/TraverseWithIndexLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/TraverseWithIndexLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/TraverseWithIndexLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/TraverseWithIndexLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/TraverseWithIndexLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/TraverseWithIndexLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "F", "tail" : "(): TraverseWithIndex[F, I]", "member" : "proptics.law.TraverseWithIndexLaws.F", "link" : "proptics\/law\/TraverseWithIndexLaws.html#F:proptics.indices.TraverseWithIndex[F,I]", "kind" : "implicit abstract def"}], "shortDescription" : ""}, {"name" : "proptics.law.WanderLaws", "object" : "proptics\/law\/WanderLaws$.html", "members_object" : [{"label" : "apply", "tail" : "(ev: Wander[F]): WanderLaws[F]", "member" : "proptics.law.WanderLaws.apply", "link" : "proptics\/law\/WanderLaws$.html#apply[F[_,_]](implicitev:proptics.profunctor.Wander[F]):proptics.law.WanderLaws[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/WanderLaws$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/WanderLaws$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/WanderLaws$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/WanderLaws$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/WanderLaws$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/WanderLaws$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/WanderLaws$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/WanderLaws$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/WanderLaws$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/WanderLaws$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/WanderLaws$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/WanderLaws$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/WanderLaws$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/WanderLaws$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/WanderLaws$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/WanderLaws$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/WanderLaws$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/WanderLaws$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/WanderLaws$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "proptics\/law\/WanderLaws.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "proptics\/law\/WanderLaws.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "proptics\/law\/WanderLaws.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "proptics\/law\/WanderLaws.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "proptics\/law\/WanderLaws.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "proptics\/law\/WanderLaws.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "proptics\/law\/WanderLaws.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "proptics\/law\/WanderLaws.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/WanderLaws.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/WanderLaws.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "proptics\/law\/WanderLaws.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "proptics\/law\/WanderLaws.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "proptics\/law\/WanderLaws.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "proptics\/law\/WanderLaws.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "proptics\/law\/WanderLaws.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "proptics\/law\/WanderLaws.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "proptics\/law\/WanderLaws.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "proptics\/law\/WanderLaws.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "proptics\/law\/WanderLaws.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "proptics\/law\/WanderLaws.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "F", "tail" : "(): Wander[F]", "member" : "proptics.law.WanderLaws.F", "link" : "proptics\/law\/WanderLaws.html#F:proptics.profunctor.Wander[F]", "kind" : "implicit abstract def"}], "shortDescription" : ""}]};